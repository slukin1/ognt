/*! For license information please see 7533.7d5bf54f.chunk.js.LICENSE.txt */
(self.webpackChunkqstns = self.webpackChunkqstns || []).push([
    [7533], {
        47150: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(81898);

            function n(t, e, r) {
                return void 0 === e && (e = new Uint8Array(2)), void 0 === r && (r = 0), e[r + 0] = t >>> 8, e[r + 1] = t >>> 0, e
            }

            function s(t, e, r) {
                return void 0 === e && (e = new Uint8Array(2)), void 0 === r && (r = 0), e[r + 0] = t >>> 0, e[r + 1] = t >>> 8, e
            }

            function o(t, e) {
                return void 0 === e && (e = 0), t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]
            }

            function a(t, e) {
                return void 0 === e && (e = 0), (t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]) >>> 0
            }

            function h(t, e) {
                return void 0 === e && (e = 0), t[e + 3] << 24 | t[e + 2] << 16 | t[e + 1] << 8 | t[e]
            }

            function c(t, e) {
                return void 0 === e && (e = 0), (t[e + 3] << 24 | t[e + 2] << 16 | t[e + 1] << 8 | t[e]) >>> 0
            }

            function u(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), e[r + 0] = t >>> 24, e[r + 1] = t >>> 16, e[r + 2] = t >>> 8, e[r + 3] = t >>> 0, e
            }

            function l(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), e[r + 0] = t >>> 0, e[r + 1] = t >>> 8, e[r + 2] = t >>> 16, e[r + 3] = t >>> 24, e
            }

            function f(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), u(t / 4294967296 >>> 0, e, r), u(t >>> 0, e, r + 4), e
            }

            function d(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), l(t >>> 0, e, r), l(t / 4294967296 >>> 0, e, r + 4), e
            }
            e.readInt16BE = function(t, e) {
                return void 0 === e && (e = 0), (t[e + 0] << 8 | t[e + 1]) << 16 >> 16
            }, e.readUint16BE = function(t, e) {
                return void 0 === e && (e = 0), (t[e + 0] << 8 | t[e + 1]) >>> 0
            }, e.readInt16LE = function(t, e) {
                return void 0 === e && (e = 0), (t[e + 1] << 8 | t[e]) << 16 >> 16
            }, e.readUint16LE = function(t, e) {
                return void 0 === e && (e = 0), (t[e + 1] << 8 | t[e]) >>> 0
            }, e.writeUint16BE = n, e.writeInt16BE = n, e.writeUint16LE = s, e.writeInt16LE = s, e.readInt32BE = o, e.readUint32BE = a, e.readInt32LE = h, e.readUint32LE = c, e.writeUint32BE = u, e.writeInt32BE = u, e.writeUint32LE = l, e.writeInt32LE = l, e.readInt64BE = function(t, e) {
                void 0 === e && (e = 0);
                var r = o(t, e),
                    i = o(t, e + 4);
                return 4294967296 * r + i - 4294967296 * (i >> 31)
            }, e.readUint64BE = function(t, e) {
                return void 0 === e && (e = 0), 4294967296 * a(t, e) + a(t, e + 4)
            }, e.readInt64LE = function(t, e) {
                void 0 === e && (e = 0);
                var r = h(t, e);
                return 4294967296 * h(t, e + 4) + r - 4294967296 * (r >> 31)
            }, e.readUint64LE = function(t, e) {
                void 0 === e && (e = 0);
                var r = c(t, e);
                return 4294967296 * c(t, e + 4) + r
            }, e.writeUint64BE = f, e.writeInt64BE = f, e.writeUint64LE = d, e.writeInt64LE = d, e.readUintBE = function(t, e, r) {
                if (void 0 === r && (r = 0), t % 8 !== 0) throw new Error("readUintBE supports only bitLengths divisible by 8");
                if (t / 8 > e.length - r) throw new Error("readUintBE: array is too short for the given bitLength");
                for (var i = 0, n = 1, s = t / 8 + r - 1; s >= r; s--) i += e[s] * n, n *= 256;
                return i
            }, e.readUintLE = function(t, e, r) {
                if (void 0 === r && (r = 0), t % 8 !== 0) throw new Error("readUintLE supports only bitLengths divisible by 8");
                if (t / 8 > e.length - r) throw new Error("readUintLE: array is too short for the given bitLength");
                for (var i = 0, n = 1, s = r; s < r + t / 8; s++) i += e[s] * n, n *= 256;
                return i
            }, e.writeUintBE = function(t, e, r, n) {
                if (void 0 === r && (r = new Uint8Array(t / 8)), void 0 === n && (n = 0), t % 8 !== 0) throw new Error("writeUintBE supports only bitLengths divisible by 8");
                if (!i.isSafeInteger(e)) throw new Error("writeUintBE value must be an integer");
                for (var s = 1, o = t / 8 + n - 1; o >= n; o--) r[o] = e / s & 255, s *= 256;
                return r
            }, e.writeUintLE = function(t, e, r, n) {
                if (void 0 === r && (r = new Uint8Array(t / 8)), void 0 === n && (n = 0), t % 8 !== 0) throw new Error("writeUintLE supports only bitLengths divisible by 8");
                if (!i.isSafeInteger(e)) throw new Error("writeUintLE value must be an integer");
                for (var s = 1, o = n; o < n + t / 8; o++) r[o] = e / s & 255, s *= 256;
                return r
            }, e.readFloat32BE = function(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat32(e)
            }, e.readFloat32LE = function(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat32(e, !0)
            }, e.readFloat64BE = function(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat64(e)
            }, e.readFloat64LE = function(t, e) {
                return void 0 === e && (e = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).getFloat64(e, !0)
            }, e.writeFloat32BE = function(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat32(r, t), e
            }, e.writeFloat32LE = function(t, e, r) {
                return void 0 === e && (e = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat32(r, t, !0), e
            }, e.writeFloat64BE = function(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat64(r, t), e
            }, e.writeFloat64LE = function(t, e, r) {
                return void 0 === e && (e = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).setFloat64(r, t, !0), e
            }
        },
        1192: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(47150),
                n = r(6062),
                s = 20;

            function o(t, e, r) {
                for (var n = 1634760805, o = 857760878, a = 2036477234, h = 1797285236, c = r[3] << 24 | r[2] << 16 | r[1] << 8 | r[0], u = r[7] << 24 | r[6] << 16 | r[5] << 8 | r[4], l = r[11] << 24 | r[10] << 16 | r[9] << 8 | r[8], f = r[15] << 24 | r[14] << 16 | r[13] << 8 | r[12], d = r[19] << 24 | r[18] << 16 | r[17] << 8 | r[16], p = r[23] << 24 | r[22] << 16 | r[21] << 8 | r[20], g = r[27] << 24 | r[26] << 16 | r[25] << 8 | r[24], m = r[31] << 24 | r[30] << 16 | r[29] << 8 | r[28], y = e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0], v = e[7] << 24 | e[6] << 16 | e[5] << 8 | e[4], w = e[11] << 24 | e[10] << 16 | e[9] << 8 | e[8], b = e[15] << 24 | e[14] << 16 | e[13] << 8 | e[12], _ = n, A = o, E = a, S = h, I = c, P = u, M = l, x = f, O = d, C = p, N = g, R = m, T = y, U = v, D = w, k = b, B = 0; B < s; B += 2) I = (I ^= O = O + (T = (T ^= _ = _ + I | 0) >>> 16 | T << 16) | 0) >>> 20 | I << 12, P = (P ^= C = C + (U = (U ^= A = A + P | 0) >>> 16 | U << 16) | 0) >>> 20 | P << 12, M = (M ^= N = N + (D = (D ^= E = E + M | 0) >>> 16 | D << 16) | 0) >>> 20 | M << 12, x = (x ^= R = R + (k = (k ^= S = S + x | 0) >>> 16 | k << 16) | 0) >>> 20 | x << 12, M = (M ^= N = N + (D = (D ^= E = E + M | 0) >>> 24 | D << 8) | 0) >>> 25 | M << 7, x = (x ^= R = R + (k = (k ^= S = S + x | 0) >>> 24 | k << 8) | 0) >>> 25 | x << 7, P = (P ^= C = C + (U = (U ^= A = A + P | 0) >>> 24 | U << 8) | 0) >>> 25 | P << 7, I = (I ^= O = O + (T = (T ^= _ = _ + I | 0) >>> 24 | T << 8) | 0) >>> 25 | I << 7, P = (P ^= N = N + (k = (k ^= _ = _ + P | 0) >>> 16 | k << 16) | 0) >>> 20 | P << 12, M = (M ^= R = R + (T = (T ^= A = A + M | 0) >>> 16 | T << 16) | 0) >>> 20 | M << 12, x = (x ^= O = O + (U = (U ^= E = E + x | 0) >>> 16 | U << 16) | 0) >>> 20 | x << 12, I = (I ^= C = C + (D = (D ^= S = S + I | 0) >>> 16 | D << 16) | 0) >>> 20 | I << 12, x = (x ^= O = O + (U = (U ^= E = E + x | 0) >>> 24 | U << 8) | 0) >>> 25 | x << 7, I = (I ^= C = C + (D = (D ^= S = S + I | 0) >>> 24 | D << 8) | 0) >>> 25 | I << 7, M = (M ^= R = R + (T = (T ^= A = A + M | 0) >>> 24 | T << 8) | 0) >>> 25 | M << 7, P = (P ^= N = N + (k = (k ^= _ = _ + P | 0) >>> 24 | k << 8) | 0) >>> 25 | P << 7;
                i.writeUint32LE(_ + n | 0, t, 0), i.writeUint32LE(A + o | 0, t, 4), i.writeUint32LE(E + a | 0, t, 8), i.writeUint32LE(S + h | 0, t, 12), i.writeUint32LE(I + c | 0, t, 16), i.writeUint32LE(P + u | 0, t, 20), i.writeUint32LE(M + l | 0, t, 24), i.writeUint32LE(x + f | 0, t, 28), i.writeUint32LE(O + d | 0, t, 32), i.writeUint32LE(C + p | 0, t, 36), i.writeUint32LE(N + g | 0, t, 40), i.writeUint32LE(R + m | 0, t, 44), i.writeUint32LE(T + y | 0, t, 48), i.writeUint32LE(U + v | 0, t, 52), i.writeUint32LE(D + w | 0, t, 56), i.writeUint32LE(k + b | 0, t, 60)
            }

            function a(t, e, r, i, s) {
                if (void 0 === s && (s = 0), 32 !== t.length) throw new Error("ChaCha: key size must be 32 bytes");
                if (i.length < r.length) throw new Error("ChaCha: destination is shorter than source");
                var a, c;
                if (0 === s) {
                    if (8 !== e.length && 12 !== e.length) throw new Error("ChaCha nonce must be 8 or 12 bytes");
                    c = (a = new Uint8Array(16)).length - e.length, a.set(e, c)
                } else {
                    if (16 !== e.length) throw new Error("ChaCha nonce with counter must be 16 bytes");
                    a = e, c = s
                }
                for (var u = new Uint8Array(64), l = 0; l < r.length; l += 64) {
                    o(u, a, t);
                    for (var f = l; f < l + 64 && f < r.length; f++) i[f] = r[f] ^ u[f - l];
                    h(a, 0, c)
                }
                return n.wipe(u), 0 === s && n.wipe(a), i
            }

            function h(t, e, r) {
                for (var i = 1; r--;) i = i + (255 & t[e]) | 0, t[e] = 255 & i, i >>>= 8, e++;
                if (i > 0) throw new Error("ChaCha: counter overflow")
            }
            e.streamXOR = a, e.stream = function(t, e, r, i) {
                return void 0 === i && (i = 0), n.wipe(r), a(t, e, r, r, i)
            }
        },
        4766: (t, e, r) => {
            "use strict";
            var i = r(1192),
                n = r(42106),
                s = r(6062),
                o = r(47150),
                a = r(7574);
            e.J4 = 32, e.PX = 12, e.iW = 16;
            var h = new Uint8Array(16),
                c = function() {
                    function t(t) {
                        if (this.nonceLength = e.PX, this.tagLength = e.iW, t.length !== e.J4) throw new Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(t)
                    }
                    return t.prototype.seal = function(t, e, r, n) {
                        if (t.length > 16) throw new Error("ChaCha20Poly1305: incorrect nonce length");
                        var o = new Uint8Array(16);
                        o.set(t, o.length - t.length);
                        var a = new Uint8Array(32);
                        i.stream(this._key, o, a, 4);
                        var h, c = e.length + this.tagLength;
                        if (n) {
                            if (n.length !== c) throw new Error("ChaCha20Poly1305: incorrect destination length");
                            h = n
                        } else h = new Uint8Array(c);
                        return i.streamXOR(this._key, o, e, h, 4), this._authenticate(h.subarray(h.length - this.tagLength, h.length), a, h.subarray(0, h.length - this.tagLength), r), s.wipe(o), h
                    }, t.prototype.open = function(t, e, r, n) {
                        if (t.length > 16) throw new Error("ChaCha20Poly1305: incorrect nonce length");
                        if (e.length < this.tagLength) return null;
                        var o = new Uint8Array(16);
                        o.set(t, o.length - t.length);
                        var h = new Uint8Array(32);
                        i.stream(this._key, o, h, 4);
                        var c = new Uint8Array(this.tagLength);
                        if (this._authenticate(c, h, e.subarray(0, e.length - this.tagLength), r), !a.equal(c, e.subarray(e.length - this.tagLength, e.length))) return null;
                        var u, l = e.length - this.tagLength;
                        if (n) {
                            if (n.length !== l) throw new Error("ChaCha20Poly1305: incorrect destination length");
                            u = n
                        } else u = new Uint8Array(l);
                        return i.streamXOR(this._key, o, e.subarray(0, e.length - this.tagLength), u, 4), s.wipe(o), u
                    }, t.prototype.clean = function() {
                        return s.wipe(this._key), this
                    }, t.prototype._authenticate = function(t, e, r, i) {
                        var a = new n.Poly1305(e);
                        i && (a.update(i), i.length % 16 > 0 && a.update(h.subarray(i.length % 16))), a.update(r), r.length % 16 > 0 && a.update(h.subarray(r.length % 16));
                        var c = new Uint8Array(8);
                        i && o.writeUint64LE(i.length, c), a.update(c), o.writeUint64LE(r.length, c), a.update(c);
                        for (var u = a.digest(), l = 0; l < u.length; l++) t[l] = u[l];
                        a.clean(), s.wipe(u), s.wipe(c)
                    }, t
                }();
            e.g6 = c
        },
        7574: (t, e) => {
            "use strict";

            function r(t, e) {
                if (t.length !== e.length) return 0;
                for (var r = 0, i = 0; i < t.length; i++) r |= t[i] ^ e[i];
                return 1 & r - 1 >>> 8
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.select = function(t, e, r) {
                return ~(t - 1) & e | t - 1 & r
            }, e.lessOrEqual = function(t, e) {
                return (0 | t) - (0 | e) - 1 >>> 31 & 1
            }, e.compare = r, e.equal = function(t, e) {
                return 0 !== t.length && 0 !== e.length && 0 !== r(t, e)
            }
        },
        62370: (t, e, r) => {
            "use strict";
            e._S = e.K = e.TP = e.wE = e.Ee = void 0;
            const i = r(4214),
                n = r(82440),
                s = r(6062);

            function o(t) {
                const e = new Float64Array(16);
                if (t)
                    for (let r = 0; r < t.length; r++) e[r] = t[r];
                return e
            }
            e.Ee = 64, e.wE = 64, e.TP = 32;
            new Uint8Array(32)[0] = 9;
            const a = o(),
                h = o([1]),
                c = o([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]),
                u = o([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]),
                l = o([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]),
                f = o([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]),
                d = o([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);

            function p(t, e) {
                for (let r = 0; r < 16; r++) t[r] = 0 | e[r]
            }

            function g(t) {
                let e = 1;
                for (let r = 0; r < 16; r++) {
                    let i = t[r] + e + 65535;
                    e = Math.floor(i / 65536), t[r] = i - 65536 * e
                }
                t[0] += e - 1 + 37 * (e - 1)
            }

            function m(t, e, r) {
                const i = ~(r - 1);
                for (let n = 0; n < 16; n++) {
                    const r = i & (t[n] ^ e[n]);
                    t[n] ^= r, e[n] ^= r
                }
            }

            function y(t, e) {
                const r = o(),
                    i = o();
                for (let n = 0; n < 16; n++) i[n] = e[n];
                g(i), g(i), g(i);
                for (let n = 0; n < 2; n++) {
                    r[0] = i[0] - 65517;
                    for (let e = 1; e < 15; e++) r[e] = i[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                    r[15] = i[15] - 32767 - (r[14] >> 16 & 1);
                    const t = r[15] >> 16 & 1;
                    r[14] &= 65535, m(i, r, 1 - t)
                }
                for (let n = 0; n < 16; n++) t[2 * n] = 255 & i[n], t[2 * n + 1] = i[n] >> 8
            }

            function v(t, e) {
                let r = 0;
                for (let i = 0; i < 32; i++) r |= t[i] ^ e[i];
                return (1 & r - 1 >>> 8) - 1
            }

            function w(t, e) {
                const r = new Uint8Array(32),
                    i = new Uint8Array(32);
                return y(r, t), y(i, e), v(r, i)
            }

            function b(t) {
                const e = new Uint8Array(32);
                return y(e, t), 1 & e[0]
            }

            function _(t, e, r) {
                for (let i = 0; i < 16; i++) t[i] = e[i] + r[i]
            }

            function A(t, e, r) {
                for (let i = 0; i < 16; i++) t[i] = e[i] - r[i]
            }

            function E(t, e, r) {
                let i, n, s = 0,
                    o = 0,
                    a = 0,
                    h = 0,
                    c = 0,
                    u = 0,
                    l = 0,
                    f = 0,
                    d = 0,
                    p = 0,
                    g = 0,
                    m = 0,
                    y = 0,
                    v = 0,
                    w = 0,
                    b = 0,
                    _ = 0,
                    A = 0,
                    E = 0,
                    S = 0,
                    I = 0,
                    P = 0,
                    M = 0,
                    x = 0,
                    O = 0,
                    C = 0,
                    N = 0,
                    R = 0,
                    T = 0,
                    U = 0,
                    D = 0,
                    k = r[0],
                    B = r[1],
                    L = r[2],
                    q = r[3],
                    j = r[4],
                    z = r[5],
                    F = r[6],
                    H = r[7],
                    K = r[8],
                    V = r[9],
                    $ = r[10],
                    W = r[11],
                    G = r[12],
                    Q = r[13],
                    Y = r[14],
                    J = r[15];
                i = e[0], s += i * k, o += i * B, a += i * L, h += i * q, c += i * j, u += i * z, l += i * F, f += i * H, d += i * K, p += i * V, g += i * $, m += i * W, y += i * G, v += i * Q, w += i * Y, b += i * J, i = e[1], o += i * k, a += i * B, h += i * L, c += i * q, u += i * j, l += i * z, f += i * F, d += i * H, p += i * K, g += i * V, m += i * $, y += i * W, v += i * G, w += i * Q, b += i * Y, _ += i * J, i = e[2], a += i * k, h += i * B, c += i * L, u += i * q, l += i * j, f += i * z, d += i * F, p += i * H, g += i * K, m += i * V, y += i * $, v += i * W, w += i * G, b += i * Q, _ += i * Y, A += i * J, i = e[3], h += i * k, c += i * B, u += i * L, l += i * q, f += i * j, d += i * z, p += i * F, g += i * H, m += i * K, y += i * V, v += i * $, w += i * W, b += i * G, _ += i * Q, A += i * Y, E += i * J, i = e[4], c += i * k, u += i * B, l += i * L, f += i * q, d += i * j, p += i * z, g += i * F, m += i * H, y += i * K, v += i * V, w += i * $, b += i * W, _ += i * G, A += i * Q, E += i * Y, S += i * J, i = e[5], u += i * k, l += i * B, f += i * L, d += i * q, p += i * j, g += i * z, m += i * F, y += i * H, v += i * K, w += i * V, b += i * $, _ += i * W, A += i * G, E += i * Q, S += i * Y, I += i * J, i = e[6], l += i * k, f += i * B, d += i * L, p += i * q, g += i * j, m += i * z, y += i * F, v += i * H, w += i * K, b += i * V, _ += i * $, A += i * W, E += i * G, S += i * Q, I += i * Y, P += i * J, i = e[7], f += i * k, d += i * B, p += i * L, g += i * q, m += i * j, y += i * z, v += i * F, w += i * H, b += i * K, _ += i * V, A += i * $, E += i * W, S += i * G, I += i * Q, P += i * Y, M += i * J, i = e[8], d += i * k, p += i * B, g += i * L, m += i * q, y += i * j, v += i * z, w += i * F, b += i * H, _ += i * K, A += i * V, E += i * $, S += i * W, I += i * G, P += i * Q, M += i * Y, x += i * J, i = e[9], p += i * k, g += i * B, m += i * L, y += i * q, v += i * j, w += i * z, b += i * F, _ += i * H, A += i * K, E += i * V, S += i * $, I += i * W, P += i * G, M += i * Q, x += i * Y, O += i * J, i = e[10], g += i * k, m += i * B, y += i * L, v += i * q, w += i * j, b += i * z, _ += i * F, A += i * H, E += i * K, S += i * V, I += i * $, P += i * W, M += i * G, x += i * Q, O += i * Y, C += i * J, i = e[11], m += i * k, y += i * B, v += i * L, w += i * q, b += i * j, _ += i * z, A += i * F, E += i * H, S += i * K, I += i * V, P += i * $, M += i * W, x += i * G, O += i * Q, C += i * Y, N += i * J, i = e[12], y += i * k, v += i * B, w += i * L, b += i * q, _ += i * j, A += i * z, E += i * F, S += i * H, I += i * K, P += i * V, M += i * $, x += i * W, O += i * G, C += i * Q, N += i * Y, R += i * J, i = e[13], v += i * k, w += i * B, b += i * L, _ += i * q, A += i * j, E += i * z, S += i * F, I += i * H, P += i * K, M += i * V, x += i * $, O += i * W, C += i * G, N += i * Q, R += i * Y, T += i * J, i = e[14], w += i * k, b += i * B, _ += i * L, A += i * q, E += i * j, S += i * z, I += i * F, P += i * H, M += i * K, x += i * V, O += i * $, C += i * W, N += i * G, R += i * Q, T += i * Y, U += i * J, i = e[15], b += i * k, _ += i * B, A += i * L, E += i * q, S += i * j, I += i * z, P += i * F, M += i * H, x += i * K, O += i * V, C += i * $, N += i * W, R += i * G, T += i * Q, U += i * Y, D += i * J, s += 38 * _, o += 38 * A, a += 38 * E, h += 38 * S, c += 38 * I, u += 38 * P, l += 38 * M, f += 38 * x, d += 38 * O, p += 38 * C, g += 38 * N, m += 38 * R, y += 38 * T, v += 38 * U, w += 38 * D, n = 1, i = s + n + 65535, n = Math.floor(i / 65536), s = i - 65536 * n, i = o + n + 65535, n = Math.floor(i / 65536), o = i - 65536 * n, i = a + n + 65535, n = Math.floor(i / 65536), a = i - 65536 * n, i = h + n + 65535, n = Math.floor(i / 65536), h = i - 65536 * n, i = c + n + 65535, n = Math.floor(i / 65536), c = i - 65536 * n, i = u + n + 65535, n = Math.floor(i / 65536), u = i - 65536 * n, i = l + n + 65535, n = Math.floor(i / 65536), l = i - 65536 * n, i = f + n + 65535, n = Math.floor(i / 65536), f = i - 65536 * n, i = d + n + 65535, n = Math.floor(i / 65536), d = i - 65536 * n, i = p + n + 65535, n = Math.floor(i / 65536), p = i - 65536 * n, i = g + n + 65535, n = Math.floor(i / 65536), g = i - 65536 * n, i = m + n + 65535, n = Math.floor(i / 65536), m = i - 65536 * n, i = y + n + 65535, n = Math.floor(i / 65536), y = i - 65536 * n, i = v + n + 65535, n = Math.floor(i / 65536), v = i - 65536 * n, i = w + n + 65535, n = Math.floor(i / 65536), w = i - 65536 * n, i = b + n + 65535, n = Math.floor(i / 65536), b = i - 65536 * n, s += n - 1 + 37 * (n - 1), n = 1, i = s + n + 65535, n = Math.floor(i / 65536), s = i - 65536 * n, i = o + n + 65535, n = Math.floor(i / 65536), o = i - 65536 * n, i = a + n + 65535, n = Math.floor(i / 65536), a = i - 65536 * n, i = h + n + 65535, n = Math.floor(i / 65536), h = i - 65536 * n, i = c + n + 65535, n = Math.floor(i / 65536), c = i - 65536 * n, i = u + n + 65535, n = Math.floor(i / 65536), u = i - 65536 * n, i = l + n + 65535, n = Math.floor(i / 65536), l = i - 65536 * n, i = f + n + 65535, n = Math.floor(i / 65536), f = i - 65536 * n, i = d + n + 65535, n = Math.floor(i / 65536), d = i - 65536 * n, i = p + n + 65535, n = Math.floor(i / 65536), p = i - 65536 * n, i = g + n + 65535, n = Math.floor(i / 65536), g = i - 65536 * n, i = m + n + 65535, n = Math.floor(i / 65536), m = i - 65536 * n, i = y + n + 65535, n = Math.floor(i / 65536), y = i - 65536 * n, i = v + n + 65535, n = Math.floor(i / 65536), v = i - 65536 * n, i = w + n + 65535, n = Math.floor(i / 65536), w = i - 65536 * n, i = b + n + 65535, n = Math.floor(i / 65536), b = i - 65536 * n, s += n - 1 + 37 * (n - 1), t[0] = s, t[1] = o, t[2] = a, t[3] = h, t[4] = c, t[5] = u, t[6] = l, t[7] = f, t[8] = d, t[9] = p, t[10] = g, t[11] = m, t[12] = y, t[13] = v, t[14] = w, t[15] = b
            }

            function S(t, e) {
                E(t, e, e)
            }

            function I(t, e) {
                const r = o();
                let i;
                for (i = 0; i < 16; i++) r[i] = e[i];
                for (i = 253; i >= 0; i--) S(r, r), 2 !== i && 4 !== i && E(r, r, e);
                for (i = 0; i < 16; i++) t[i] = r[i]
            }

            function P(t, e) {
                const r = o(),
                    i = o(),
                    n = o(),
                    s = o(),
                    a = o(),
                    h = o(),
                    c = o(),
                    l = o(),
                    f = o();
                A(r, t[1], t[0]), A(f, e[1], e[0]), E(r, r, f), _(i, t[0], t[1]), _(f, e[0], e[1]), E(i, i, f), E(n, t[3], e[3]), E(n, n, u), E(s, t[2], e[2]), _(s, s, s), A(a, i, r), A(h, s, n), _(c, s, n), _(l, i, r), E(t[0], a, h), E(t[1], l, c), E(t[2], c, h), E(t[3], a, l)
            }

            function M(t, e, r) {
                for (let i = 0; i < 4; i++) m(t[i], e[i], r)
            }

            function x(t, e) {
                const r = o(),
                    i = o(),
                    n = o();
                I(n, e[2]), E(r, e[0], n), E(i, e[1], n), y(t, i), t[31] ^= b(r) << 7
            }

            function O(t, e, r) {
                p(t[0], a), p(t[1], h), p(t[2], h), p(t[3], a);
                for (let i = 255; i >= 0; --i) {
                    const n = r[i / 8 | 0] >> (7 & i) & 1;
                    M(t, e, n), P(e, t), P(t, t), M(t, e, n)
                }
            }

            function C(t, e) {
                const r = [o(), o(), o(), o()];
                p(r[0], l), p(r[1], f), p(r[2], h), E(r[3], l, f), O(t, r, e)
            }

            function N(t) {
                if (t.length !== e.TP) throw new Error(`ed25519: seed must be ${e.TP} bytes`);
                const r = (0, n.hash)(t);
                r[0] &= 248, r[31] &= 127, r[31] |= 64;
                const i = new Uint8Array(32),
                    s = [o(), o(), o(), o()];
                C(s, r), x(i, s);
                const a = new Uint8Array(64);
                return a.set(t), a.set(i, 32), {
                    publicKey: i,
                    secretKey: a
                }
            }
            e.K = N;
            const R = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);

            function T(t, e) {
                let r, i, n, s;
                for (i = 63; i >= 32; --i) {
                    for (r = 0, n = i - 32, s = i - 12; n < s; ++n) e[n] += r - 16 * e[i] * R[n - (i - 32)], r = Math.floor((e[n] + 128) / 256), e[n] -= 256 * r;
                    e[n] += r, e[i] = 0
                }
                for (r = 0, n = 0; n < 32; n++) e[n] += r - (e[31] >> 4) * R[n], r = e[n] >> 8, e[n] &= 255;
                for (n = 0; n < 32; n++) e[n] -= r * R[n];
                for (i = 0; i < 32; i++) e[i + 1] += e[i] >> 8, t[i] = 255 & e[i]
            }

            function U(t) {
                const e = new Float64Array(64);
                for (let r = 0; r < 64; r++) e[r] = t[r];
                for (let r = 0; r < 64; r++) t[r] = 0;
                T(t, e)
            }

            function D(t, e) {
                const r = o(),
                    i = o(),
                    n = o(),
                    s = o(),
                    u = o(),
                    l = o(),
                    f = o();
                return p(t[2], h),
                    function(t, e) {
                        for (let r = 0; r < 16; r++) t[r] = e[2 * r] + (e[2 * r + 1] << 8);
                        t[15] &= 32767
                    }(t[1], e), S(n, t[1]), E(s, n, c), A(n, n, t[2]), _(s, t[2], s), S(u, s), S(l, u), E(f, l, u), E(r, f, n), E(r, r, s),
                    function(t, e) {
                        const r = o();
                        let i;
                        for (i = 0; i < 16; i++) r[i] = e[i];
                        for (i = 250; i >= 0; i--) S(r, r), 1 !== i && E(r, r, e);
                        for (i = 0; i < 16; i++) t[i] = r[i]
                    }(r, r), E(r, r, n), E(r, r, s), E(r, r, s), E(t[0], r, s), S(i, t[0]), E(i, i, s), w(i, n) && E(t[0], t[0], d), S(i, t[0]), E(i, i, s), w(i, n) ? -1 : (b(t[0]) === e[31] >> 7 && A(t[0], a, t[0]), E(t[3], t[0], t[1]), 0)
            }
            e._S = function(t, e) {
                const r = new Float64Array(64),
                    i = [o(), o(), o(), o()],
                    s = (0, n.hash)(t.subarray(0, 32));
                s[0] &= 248, s[31] &= 127, s[31] |= 64;
                const a = new Uint8Array(64);
                a.set(s.subarray(32), 32);
                const h = new n.SHA512;
                h.update(a.subarray(32)), h.update(e);
                const c = h.digest();
                h.clean(), U(c), C(i, c), x(a, i), h.reset(), h.update(a.subarray(0, 32)), h.update(t.subarray(32)), h.update(e);
                const u = h.digest();
                U(u);
                for (let n = 0; n < 32; n++) r[n] = c[n];
                for (let n = 0; n < 32; n++)
                    for (let t = 0; t < 32; t++) r[n + t] += u[n] * s[t];
                return T(a.subarray(32), r), a
            }
        },
        54056: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isSerializableHash = function(t) {
                return "undefined" !== typeof t.saveState && "undefined" !== typeof t.restoreState && "undefined" !== typeof t.cleanSavedState
            }
        },
        23878: (t, e, r) => {
            "use strict";
            var i = r(37438),
                n = r(6062),
                s = function() {
                    function t(t, e, r, n) {
                        void 0 === r && (r = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = t, this._info = n;
                        var s = i.hmac(this._hash, r, e);
                        this._hmac = new i.HMAC(t, s), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length
                    }
                    return t.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var t = this._counter[0];
                        if (0 === t) throw new Error("hkdf: cannot expand more");
                        this._hmac.reset(), t > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0
                    }, t.prototype.expand = function(t) {
                        for (var e = new Uint8Array(t), r = 0; r < e.length; r++) this._bufpos === this._buffer.length && this._fillBuffer(), e[r] = this._buffer[this._bufpos++];
                        return e
                    }, t.prototype.clean = function() {
                        this._hmac.clean(), n.wipe(this._buffer), n.wipe(this._counter), this._bufpos = 0
                    }, t
                }();
            e.i = s
        },
        37438: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(54056),
                n = r(7574),
                s = r(6062),
                o = function() {
                    function t(t, e) {
                        this._finished = !1, this._inner = new t, this._outer = new t, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var r = new Uint8Array(this.blockSize);
                        e.length > this.blockSize ? this._inner.update(e).finish(r).clean() : r.set(e);
                        for (var n = 0; n < r.length; n++) r[n] ^= 54;
                        this._inner.update(r);
                        for (n = 0; n < r.length; n++) r[n] ^= 106;
                        this._outer.update(r), i.isSerializableHash(this._inner) && i.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), s.wipe(r)
                    }
                    return t.prototype.reset = function() {
                        if (!i.isSerializableHash(this._inner) || !i.isSerializableHash(this._outer)) throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, t.prototype.clean = function() {
                        i.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), i.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean()
                    }, t.prototype.update = function(t) {
                        return this._inner.update(t), this
                    }, t.prototype.finish = function(t) {
                        return this._finished ? (this._outer.finish(t), this) : (this._inner.finish(t), this._outer.update(t.subarray(0, this.digestLength)).finish(t), this._finished = !0, this)
                    }, t.prototype.digest = function() {
                        var t = new Uint8Array(this.digestLength);
                        return this.finish(t), t
                    }, t.prototype.saveState = function() {
                        if (!i.isSerializableHash(this._inner)) throw new Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState()
                    }, t.prototype.restoreState = function(t) {
                        if (!i.isSerializableHash(this._inner) || !i.isSerializableHash(this._outer)) throw new Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(t), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, t.prototype.cleanSavedState = function(t) {
                        if (!i.isSerializableHash(this._inner)) throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(t)
                    }, t
                }();
            e.HMAC = o, e.hmac = function(t, e, r) {
                var i = new o(t, e);
                i.update(r);
                var n = i.digest();
                return i.clean(), n
            }, e.equal = n.equal
        },
        81898: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.mul = Math.imul || function(t, e) {
                var r = 65535 & t,
                    i = 65535 & e;
                return r * i + ((t >>> 16 & 65535) * i + r * (e >>> 16 & 65535) << 16 >>> 0) | 0
            }, e.add = function(t, e) {
                return t + e | 0
            }, e.sub = function(t, e) {
                return t - e | 0
            }, e.rotl = function(t, e) {
                return t << e | t >>> 32 - e
            }, e.rotr = function(t, e) {
                return t << 32 - e | t >>> e
            }, e.isInteger = Number.isInteger || function(t) {
                return "number" === typeof t && isFinite(t) && Math.floor(t) === t
            }, e.MAX_SAFE_INTEGER = 9007199254740991, e.isSafeInteger = function(t) {
                return e.isInteger(t) && t >= -e.MAX_SAFE_INTEGER && t <= e.MAX_SAFE_INTEGER
            }
        },
        42106: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(7574),
                n = r(6062);
            e.DIGEST_LENGTH = 16;
            var s = function() {
                function t(t) {
                    this.digestLength = e.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                    var r = t[0] | t[1] << 8;
                    this._r[0] = 8191 & r;
                    var i = t[2] | t[3] << 8;
                    this._r[1] = 8191 & (r >>> 13 | i << 3);
                    var n = t[4] | t[5] << 8;
                    this._r[2] = 7939 & (i >>> 10 | n << 6);
                    var s = t[6] | t[7] << 8;
                    this._r[3] = 8191 & (n >>> 7 | s << 9);
                    var o = t[8] | t[9] << 8;
                    this._r[4] = 255 & (s >>> 4 | o << 12), this._r[5] = o >>> 1 & 8190;
                    var a = t[10] | t[11] << 8;
                    this._r[6] = 8191 & (o >>> 14 | a << 2);
                    var h = t[12] | t[13] << 8;
                    this._r[7] = 8065 & (a >>> 11 | h << 5);
                    var c = t[14] | t[15] << 8;
                    this._r[8] = 8191 & (h >>> 8 | c << 8), this._r[9] = c >>> 5 & 127, this._pad[0] = t[16] | t[17] << 8, this._pad[1] = t[18] | t[19] << 8, this._pad[2] = t[20] | t[21] << 8, this._pad[3] = t[22] | t[23] << 8, this._pad[4] = t[24] | t[25] << 8, this._pad[5] = t[26] | t[27] << 8, this._pad[6] = t[28] | t[29] << 8, this._pad[7] = t[30] | t[31] << 8
                }
                return t.prototype._blocks = function(t, e, r) {
                    for (var i = this._fin ? 0 : 2048, n = this._h[0], s = this._h[1], o = this._h[2], a = this._h[3], h = this._h[4], c = this._h[5], u = this._h[6], l = this._h[7], f = this._h[8], d = this._h[9], p = this._r[0], g = this._r[1], m = this._r[2], y = this._r[3], v = this._r[4], w = this._r[5], b = this._r[6], _ = this._r[7], A = this._r[8], E = this._r[9]; r >= 16;) {
                        var S = t[e + 0] | t[e + 1] << 8;
                        n += 8191 & S;
                        var I = t[e + 2] | t[e + 3] << 8;
                        s += 8191 & (S >>> 13 | I << 3);
                        var P = t[e + 4] | t[e + 5] << 8;
                        o += 8191 & (I >>> 10 | P << 6);
                        var M = t[e + 6] | t[e + 7] << 8;
                        a += 8191 & (P >>> 7 | M << 9);
                        var x = t[e + 8] | t[e + 9] << 8;
                        h += 8191 & (M >>> 4 | x << 12), c += x >>> 1 & 8191;
                        var O = t[e + 10] | t[e + 11] << 8;
                        u += 8191 & (x >>> 14 | O << 2);
                        var C = t[e + 12] | t[e + 13] << 8;
                        l += 8191 & (O >>> 11 | C << 5);
                        var N = t[e + 14] | t[e + 15] << 8,
                            R = 0,
                            T = R;
                        T += n * p, T += s * (5 * E), T += o * (5 * A), T += a * (5 * _), R = (T += h * (5 * b)) >>> 13, T &= 8191, T += c * (5 * w), T += u * (5 * v), T += l * (5 * y), T += (f += 8191 & (C >>> 8 | N << 8)) * (5 * m);
                        var U = R += (T += (d += N >>> 5 | i) * (5 * g)) >>> 13;
                        U += n * g, U += s * p, U += o * (5 * E), U += a * (5 * A), R = (U += h * (5 * _)) >>> 13, U &= 8191, U += c * (5 * b), U += u * (5 * w), U += l * (5 * v), U += f * (5 * y), R += (U += d * (5 * m)) >>> 13, U &= 8191;
                        var D = R;
                        D += n * m, D += s * g, D += o * p, D += a * (5 * E), R = (D += h * (5 * A)) >>> 13, D &= 8191, D += c * (5 * _), D += u * (5 * b), D += l * (5 * w), D += f * (5 * v);
                        var k = R += (D += d * (5 * y)) >>> 13;
                        k += n * y, k += s * m, k += o * g, k += a * p, R = (k += h * (5 * E)) >>> 13, k &= 8191, k += c * (5 * A), k += u * (5 * _), k += l * (5 * b), k += f * (5 * w);
                        var B = R += (k += d * (5 * v)) >>> 13;
                        B += n * v, B += s * y, B += o * m, B += a * g, R = (B += h * p) >>> 13, B &= 8191, B += c * (5 * E), B += u * (5 * A), B += l * (5 * _), B += f * (5 * b);
                        var L = R += (B += d * (5 * w)) >>> 13;
                        L += n * w, L += s * v, L += o * y, L += a * m, R = (L += h * g) >>> 13, L &= 8191, L += c * p, L += u * (5 * E), L += l * (5 * A), L += f * (5 * _);
                        var q = R += (L += d * (5 * b)) >>> 13;
                        q += n * b, q += s * w, q += o * v, q += a * y, R = (q += h * m) >>> 13, q &= 8191, q += c * g, q += u * p, q += l * (5 * E), q += f * (5 * A);
                        var j = R += (q += d * (5 * _)) >>> 13;
                        j += n * _, j += s * b, j += o * w, j += a * v, R = (j += h * y) >>> 13, j &= 8191, j += c * m, j += u * g, j += l * p, j += f * (5 * E);
                        var z = R += (j += d * (5 * A)) >>> 13;
                        z += n * A, z += s * _, z += o * b, z += a * w, R = (z += h * v) >>> 13, z &= 8191, z += c * y, z += u * m, z += l * g, z += f * p;
                        var F = R += (z += d * (5 * E)) >>> 13;
                        F += n * E, F += s * A, F += o * _, F += a * b, R = (F += h * w) >>> 13, F &= 8191, F += c * v, F += u * y, F += l * m, F += f * g, n = T = 8191 & (R = (R = ((R += (F += d * p) >>> 13) << 2) + R | 0) + (T &= 8191) | 0), s = U += R >>>= 13, o = D &= 8191, a = k &= 8191, h = B &= 8191, c = L &= 8191, u = q &= 8191, l = j &= 8191, f = z &= 8191, d = F &= 8191, e += 16, r -= 16
                    }
                    this._h[0] = n, this._h[1] = s, this._h[2] = o, this._h[3] = a, this._h[4] = h, this._h[5] = c, this._h[6] = u, this._h[7] = l, this._h[8] = f, this._h[9] = d
                }, t.prototype.finish = function(t, e) {
                    void 0 === e && (e = 0);
                    var r, i, n, s, o = new Uint16Array(10);
                    if (this._leftover) {
                        for (s = this._leftover, this._buffer[s++] = 1; s < 16; s++) this._buffer[s] = 0;
                        this._fin = 1, this._blocks(this._buffer, 0, 16)
                    }
                    for (r = this._h[1] >>> 13, this._h[1] &= 8191, s = 2; s < 10; s++) this._h[s] += r, r = this._h[s] >>> 13, this._h[s] &= 8191;
                    for (this._h[0] += 5 * r, r = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += r, r = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += r, o[0] = this._h[0] + 5, r = o[0] >>> 13, o[0] &= 8191, s = 1; s < 10; s++) o[s] = this._h[s] + r, r = o[s] >>> 13, o[s] &= 8191;
                    for (o[9] -= 8192, i = (1 ^ r) - 1, s = 0; s < 10; s++) o[s] &= i;
                    for (i = ~i, s = 0; s < 10; s++) this._h[s] = this._h[s] & i | o[s];
                    for (this._h[0] = 65535 & (this._h[0] | this._h[1] << 13), this._h[1] = 65535 & (this._h[1] >>> 3 | this._h[2] << 10), this._h[2] = 65535 & (this._h[2] >>> 6 | this._h[3] << 7), this._h[3] = 65535 & (this._h[3] >>> 9 | this._h[4] << 4), this._h[4] = 65535 & (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14), this._h[5] = 65535 & (this._h[6] >>> 2 | this._h[7] << 11), this._h[6] = 65535 & (this._h[7] >>> 5 | this._h[8] << 8), this._h[7] = 65535 & (this._h[8] >>> 8 | this._h[9] << 5), n = this._h[0] + this._pad[0], this._h[0] = 65535 & n, s = 1; s < 8; s++) n = (this._h[s] + this._pad[s] | 0) + (n >>> 16) | 0, this._h[s] = 65535 & n;
                    return t[e + 0] = this._h[0] >>> 0, t[e + 1] = this._h[0] >>> 8, t[e + 2] = this._h[1] >>> 0, t[e + 3] = this._h[1] >>> 8, t[e + 4] = this._h[2] >>> 0, t[e + 5] = this._h[2] >>> 8, t[e + 6] = this._h[3] >>> 0, t[e + 7] = this._h[3] >>> 8, t[e + 8] = this._h[4] >>> 0, t[e + 9] = this._h[4] >>> 8, t[e + 10] = this._h[5] >>> 0, t[e + 11] = this._h[5] >>> 8, t[e + 12] = this._h[6] >>> 0, t[e + 13] = this._h[6] >>> 8, t[e + 14] = this._h[7] >>> 0, t[e + 15] = this._h[7] >>> 8, this._finished = !0, this
                }, t.prototype.update = function(t) {
                    var e, r = 0,
                        i = t.length;
                    if (this._leftover) {
                        (e = 16 - this._leftover) > i && (e = i);
                        for (var n = 0; n < e; n++) this._buffer[this._leftover + n] = t[r + n];
                        if (i -= e, r += e, this._leftover += e, this._leftover < 16) return this;
                        this._blocks(this._buffer, 0, 16), this._leftover = 0
                    }
                    if (i >= 16 && (e = i - i % 16, this._blocks(t, r, e), r += e, i -= e), i) {
                        for (n = 0; n < i; n++) this._buffer[this._leftover + n] = t[r + n];
                        this._leftover += i
                    }
                    return this
                }, t.prototype.digest = function() {
                    if (this._finished) throw new Error("Poly1305 was finished");
                    var t = new Uint8Array(16);
                    return this.finish(t), t
                }, t.prototype.clean = function() {
                    return n.wipe(this._buffer), n.wipe(this._r), n.wipe(this._h), n.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this
                }, t
            }();
            e.Poly1305 = s, e.oneTimeAuth = function(t, e) {
                var r = new s(t);
                r.update(e);
                var i = r.digest();
                return r.clean(), i
            }, e.equal = function(t, r) {
                return t.length === e.DIGEST_LENGTH && r.length === e.DIGEST_LENGTH && i.equal(t, r)
            }
        },
        4214: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.randomStringForEntropy = e.randomString = e.randomUint32 = e.randomBytes = e.defaultRandomSource = void 0;
            const i = r(85954),
                n = r(47150),
                s = r(6062);

            function o(t) {
                return (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e.defaultRandomSource).randomBytes(t)
            }
            e.defaultRandomSource = new i.SystemRandomSource, e.randomBytes = o, e.randomUint32 = function() {
                const t = o(4, arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e.defaultRandomSource),
                    r = (0, n.readUint32LE)(t);
                return (0, s.wipe)(t), r
            };
            const a = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            function h(t) {
                let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a,
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e.defaultRandomSource;
                if (r.length < 2) throw new Error("randomString charset is too short");
                if (r.length > 256) throw new Error("randomString charset is too long");
                let n = "";
                const h = r.length,
                    c = 256 - 256 % h;
                for (; t > 0;) {
                    const e = o(Math.ceil(256 * t / c), i);
                    for (let i = 0; i < e.length && t > 0; i++) {
                        const s = e[i];
                        s < c && (n += r.charAt(s % h), t--)
                    }(0, s.wipe)(e)
                }
                return n
            }
            e.randomString = h, e.randomStringForEntropy = function(t) {
                let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a,
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e.defaultRandomSource;
                return h(Math.ceil(t / (Math.log(r.length) / Math.LN2)), r, i)
            }
        },
        52727: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.BrowserRandomSource = void 0;
            e.BrowserRandomSource = class {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1;
                    const t = "undefined" !== typeof self ? self.crypto || self.msCrypto : null;
                    t && void 0 !== t.getRandomValues && (this._crypto = t, this.isAvailable = !0, this.isInstantiated = !0)
                }
                randomBytes(t) {
                    if (!this.isAvailable || !this._crypto) throw new Error("Browser random byte generator is not available.");
                    const e = new Uint8Array(t);
                    for (let r = 0; r < e.length; r += 65536) this._crypto.getRandomValues(e.subarray(r, r + Math.min(e.length - r, 65536)));
                    return e
                }
            }
        },
        74035: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.NodeRandomSource = void 0;
            const i = r(6062);
            e.NodeRandomSource = class {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1; {
                        const t = r(99432);
                        t && t.randomBytes && (this._crypto = t, this.isAvailable = !0, this.isInstantiated = !0)
                    }
                }
                randomBytes(t) {
                    if (!this.isAvailable || !this._crypto) throw new Error("Node.js random byte generator is not available.");
                    let e = this._crypto.randomBytes(t);
                    if (e.length !== t) throw new Error("NodeRandomSource: got fewer bytes than requested");
                    const r = new Uint8Array(t);
                    for (let i = 0; i < r.length; i++) r[i] = e[i];
                    return (0, i.wipe)(e), r
                }
            }
        },
        85954: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.SystemRandomSource = void 0;
            const i = r(52727),
                n = r(74035);
            e.SystemRandomSource = class {
                constructor() {
                    return this.isAvailable = !1, this.name = "", this._source = new i.BrowserRandomSource, this._source.isAvailable ? (this.isAvailable = !0, void(this.name = "Browser")) : (this._source = new n.NodeRandomSource, this._source.isAvailable ? (this.isAvailable = !0, void(this.name = "Node")) : void 0)
                }
                randomBytes(t) {
                    if (!this.isAvailable) throw new Error("System random byte generator is not available.");
                    return this._source.randomBytes(t)
                }
            }
        },
        1254: (t, e, r) => {
            "use strict";
            var i = r(47150),
                n = r(6062);
            e.On = 32, e.cS = 64;
            var s = function() {
                function t() {
                    this.digestLength = e.On, this.blockSize = e.cS, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return t.prototype._initState = function() {
                    this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225
                }, t.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, t.prototype.clean = function() {
                    n.wipe(this._buffer), n.wipe(this._temp), this.reset()
                }, t.prototype.update = function(t, e) {
                    if (void 0 === e && (e = t.length), this._finished) throw new Error("SHA256: can't update because hash was finished.");
                    var r = 0;
                    if (this._bytesHashed += e, this._bufferLength > 0) {
                        for (; this._bufferLength < this.blockSize && e > 0;) this._buffer[this._bufferLength++] = t[r++], e--;
                        this._bufferLength === this.blockSize && (a(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (e >= this.blockSize && (r = a(this._temp, this._state, t, r, e), e %= this.blockSize); e > 0;) this._buffer[this._bufferLength++] = t[r++], e--;
                    return this
                }, t.prototype.finish = function(t) {
                    if (!this._finished) {
                        var e = this._bytesHashed,
                            r = this._bufferLength,
                            n = e / 536870912 | 0,
                            s = e << 3,
                            o = e % 64 < 56 ? 64 : 128;
                        this._buffer[r] = 128;
                        for (var h = r + 1; h < o - 8; h++) this._buffer[h] = 0;
                        i.writeUint32BE(n, this._buffer, o - 8), i.writeUint32BE(s, this._buffer, o - 4), a(this._temp, this._state, this._buffer, 0, o), this._finished = !0
                    }
                    for (h = 0; h < this.digestLength / 4; h++) i.writeUint32BE(this._state[h], t, 4 * h);
                    return this
                }, t.prototype.digest = function() {
                    var t = new Uint8Array(this.digestLength);
                    return this.finish(t), t
                }, t.prototype.saveState = function() {
                    if (this._finished) throw new Error("SHA256: cannot save finished state");
                    return {
                        state: new Int32Array(this._state),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, t.prototype.restoreState = function(t) {
                    return this._state.set(t.state), this._bufferLength = t.bufferLength, t.buffer && this._buffer.set(t.buffer), this._bytesHashed = t.bytesHashed, this._finished = !1, this
                }, t.prototype.cleanSavedState = function(t) {
                    n.wipe(t.state), t.buffer && n.wipe(t.buffer), t.bufferLength = 0, t.bytesHashed = 0
                }, t
            }();
            e.aD = s;
            var o = new Int32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);

            function a(t, e, r, n, s) {
                for (; s >= 64;) {
                    for (var a = e[0], h = e[1], c = e[2], u = e[3], l = e[4], f = e[5], d = e[6], p = e[7], g = 0; g < 16; g++) {
                        var m = n + 4 * g;
                        t[g] = i.readUint32BE(r, m)
                    }
                    for (g = 16; g < 64; g++) {
                        var y = t[g - 2],
                            v = (y >>> 17 | y << 15) ^ (y >>> 19 | y << 13) ^ y >>> 10,
                            w = ((y = t[g - 15]) >>> 7 | y << 25) ^ (y >>> 18 | y << 14) ^ y >>> 3;
                        t[g] = (v + t[g - 7] | 0) + (w + t[g - 16] | 0)
                    }
                    for (g = 0; g < 64; g++) {
                        v = (((l >>> 6 | l << 26) ^ (l >>> 11 | l << 21) ^ (l >>> 25 | l << 7)) + (l & f ^ ~l & d) | 0) + (p + (o[g] + t[g] | 0) | 0) | 0, w = ((a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10)) + (a & h ^ a & c ^ h & c) | 0;
                        p = d, d = f, f = l, l = u + v | 0, u = c, c = h, h = a, a = v + w | 0
                    }
                    e[0] += a, e[1] += h, e[2] += c, e[3] += u, e[4] += l, e[5] += f, e[6] += d, e[7] += p, n += 64, s -= 64
                }
                return n
            }
            e.tW = function(t) {
                var e = new s;
                e.update(t);
                var r = e.digest();
                return e.clean(), r
            }
        },
        82440: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(47150),
                n = r(6062);
            e.DIGEST_LENGTH = 64, e.BLOCK_SIZE = 128;
            var s = function() {
                function t() {
                    this.digestLength = e.DIGEST_LENGTH, this.blockSize = e.BLOCK_SIZE, this._stateHi = new Int32Array(8), this._stateLo = new Int32Array(8), this._tempHi = new Int32Array(16), this._tempLo = new Int32Array(16), this._buffer = new Uint8Array(256), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return t.prototype._initState = function() {
                    this._stateHi[0] = 1779033703, this._stateHi[1] = 3144134277, this._stateHi[2] = 1013904242, this._stateHi[3] = 2773480762, this._stateHi[4] = 1359893119, this._stateHi[5] = 2600822924, this._stateHi[6] = 528734635, this._stateHi[7] = 1541459225, this._stateLo[0] = 4089235720, this._stateLo[1] = 2227873595, this._stateLo[2] = 4271175723, this._stateLo[3] = 1595750129, this._stateLo[4] = 2917565137, this._stateLo[5] = 725511199, this._stateLo[6] = 4215389547, this._stateLo[7] = 327033209
                }, t.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, t.prototype.clean = function() {
                    n.wipe(this._buffer), n.wipe(this._tempHi), n.wipe(this._tempLo), this.reset()
                }, t.prototype.update = function(t, r) {
                    if (void 0 === r && (r = t.length), this._finished) throw new Error("SHA512: can't update because hash was finished.");
                    var i = 0;
                    if (this._bytesHashed += r, this._bufferLength > 0) {
                        for (; this._bufferLength < e.BLOCK_SIZE && r > 0;) this._buffer[this._bufferLength++] = t[i++], r--;
                        this._bufferLength === this.blockSize && (a(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (r >= this.blockSize && (i = a(this._tempHi, this._tempLo, this._stateHi, this._stateLo, t, i, r), r %= this.blockSize); r > 0;) this._buffer[this._bufferLength++] = t[i++], r--;
                    return this
                }, t.prototype.finish = function(t) {
                    if (!this._finished) {
                        var e = this._bytesHashed,
                            r = this._bufferLength,
                            n = e / 536870912 | 0,
                            s = e << 3,
                            o = e % 128 < 112 ? 128 : 256;
                        this._buffer[r] = 128;
                        for (var h = r + 1; h < o - 8; h++) this._buffer[h] = 0;
                        i.writeUint32BE(n, this._buffer, o - 8), i.writeUint32BE(s, this._buffer, o - 4), a(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, o), this._finished = !0
                    }
                    for (h = 0; h < this.digestLength / 8; h++) i.writeUint32BE(this._stateHi[h], t, 8 * h), i.writeUint32BE(this._stateLo[h], t, 8 * h + 4);
                    return this
                }, t.prototype.digest = function() {
                    var t = new Uint8Array(this.digestLength);
                    return this.finish(t), t
                }, t.prototype.saveState = function() {
                    if (this._finished) throw new Error("SHA256: cannot save finished state");
                    return {
                        stateHi: new Int32Array(this._stateHi),
                        stateLo: new Int32Array(this._stateLo),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, t.prototype.restoreState = function(t) {
                    return this._stateHi.set(t.stateHi), this._stateLo.set(t.stateLo), this._bufferLength = t.bufferLength, t.buffer && this._buffer.set(t.buffer), this._bytesHashed = t.bytesHashed, this._finished = !1, this
                }, t.prototype.cleanSavedState = function(t) {
                    n.wipe(t.stateHi), n.wipe(t.stateLo), t.buffer && n.wipe(t.buffer), t.bufferLength = 0, t.bytesHashed = 0
                }, t
            }();
            e.SHA512 = s;
            var o = new Int32Array([1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591]);

            function a(t, e, r, n, s, a, h) {
                for (var c, u, l, f, d, p, g, m, y = r[0], v = r[1], w = r[2], b = r[3], _ = r[4], A = r[5], E = r[6], S = r[7], I = n[0], P = n[1], M = n[2], x = n[3], O = n[4], C = n[5], N = n[6], R = n[7]; h >= 128;) {
                    for (var T = 0; T < 16; T++) {
                        var U = 8 * T + a;
                        t[T] = i.readUint32BE(s, U), e[T] = i.readUint32BE(s, U + 4)
                    }
                    for (T = 0; T < 80; T++) {
                        var D, k, B = y,
                            L = v,
                            q = w,
                            j = b,
                            z = _,
                            F = A,
                            H = E,
                            K = I,
                            V = P,
                            $ = M,
                            W = x,
                            G = O,
                            Q = C,
                            Y = N;
                        if (d = 65535 & (u = R), p = u >>> 16, g = 65535 & (c = S), m = c >>> 16, d += 65535 & (u = (O >>> 14 | _ << 18) ^ (O >>> 18 | _ << 14) ^ (_ >>> 9 | O << 23)), p += u >>> 16, g += 65535 & (c = (_ >>> 14 | O << 18) ^ (_ >>> 18 | O << 14) ^ (O >>> 9 | _ << 23)), m += c >>> 16, d += 65535 & (u = O & C ^ ~O & N), p += u >>> 16, g += 65535 & (c = _ & A ^ ~_ & E), m += c >>> 16, c = o[2 * T], d += 65535 & (u = o[2 * T + 1]), p += u >>> 16, g += 65535 & c, m += c >>> 16, c = t[T % 16], p += (u = e[T % 16]) >>> 16, g += 65535 & c, m += c >>> 16, g += (p += (d += 65535 & u) >>> 16) >>> 16, d = 65535 & (u = f = 65535 & d | p << 16), p = u >>> 16, g = 65535 & (c = l = 65535 & g | (m += g >>> 16) << 16), m = c >>> 16, d += 65535 & (u = (I >>> 28 | y << 4) ^ (y >>> 2 | I << 30) ^ (y >>> 7 | I << 25)), p += u >>> 16, g += 65535 & (c = (y >>> 28 | I << 4) ^ (I >>> 2 | y << 30) ^ (I >>> 7 | y << 25)), m += c >>> 16, p += (u = I & P ^ I & M ^ P & M) >>> 16, g += 65535 & (c = y & v ^ y & w ^ v & w), m += c >>> 16, D = 65535 & (g += (p += (d += 65535 & u) >>> 16) >>> 16) | (m += g >>> 16) << 16, k = 65535 & d | p << 16, d = 65535 & (u = W), p = u >>> 16, g = 65535 & (c = j), m = c >>> 16, p += (u = f) >>> 16, g += 65535 & (c = l), m += c >>> 16, v = B, w = L, b = q, _ = j = 65535 & (g += (p += (d += 65535 & u) >>> 16) >>> 16) | (m += g >>> 16) << 16, A = z, E = F, S = H, y = D, P = K, M = V, x = $, O = W = 65535 & d | p << 16, C = G, N = Q, R = Y, I = k, T % 16 === 15)
                            for (U = 0; U < 16; U++) c = t[U], d = 65535 & (u = e[U]), p = u >>> 16, g = 65535 & c, m = c >>> 16, c = t[(U + 9) % 16], d += 65535 & (u = e[(U + 9) % 16]), p += u >>> 16, g += 65535 & c, m += c >>> 16, l = t[(U + 1) % 16], d += 65535 & (u = ((f = e[(U + 1) % 16]) >>> 1 | l << 31) ^ (f >>> 8 | l << 24) ^ (f >>> 7 | l << 25)), p += u >>> 16, g += 65535 & (c = (l >>> 1 | f << 31) ^ (l >>> 8 | f << 24) ^ l >>> 7), m += c >>> 16, l = t[(U + 14) % 16], p += (u = ((f = e[(U + 14) % 16]) >>> 19 | l << 13) ^ (l >>> 29 | f << 3) ^ (f >>> 6 | l << 26)) >>> 16, g += 65535 & (c = (l >>> 19 | f << 13) ^ (f >>> 29 | l << 3) ^ l >>> 6), m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, t[U] = 65535 & g | m << 16, e[U] = 65535 & d | p << 16
                    }
                    d = 65535 & (u = I), p = u >>> 16, g = 65535 & (c = y), m = c >>> 16, c = r[0], p += (u = n[0]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[0] = y = 65535 & g | m << 16, n[0] = I = 65535 & d | p << 16, d = 65535 & (u = P), p = u >>> 16, g = 65535 & (c = v), m = c >>> 16, c = r[1], p += (u = n[1]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[1] = v = 65535 & g | m << 16, n[1] = P = 65535 & d | p << 16, d = 65535 & (u = M), p = u >>> 16, g = 65535 & (c = w), m = c >>> 16, c = r[2], p += (u = n[2]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[2] = w = 65535 & g | m << 16, n[2] = M = 65535 & d | p << 16, d = 65535 & (u = x), p = u >>> 16, g = 65535 & (c = b), m = c >>> 16, c = r[3], p += (u = n[3]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[3] = b = 65535 & g | m << 16, n[3] = x = 65535 & d | p << 16, d = 65535 & (u = O), p = u >>> 16, g = 65535 & (c = _), m = c >>> 16, c = r[4], p += (u = n[4]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[4] = _ = 65535 & g | m << 16, n[4] = O = 65535 & d | p << 16, d = 65535 & (u = C), p = u >>> 16, g = 65535 & (c = A), m = c >>> 16, c = r[5], p += (u = n[5]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[5] = A = 65535 & g | m << 16, n[5] = C = 65535 & d | p << 16, d = 65535 & (u = N), p = u >>> 16, g = 65535 & (c = E), m = c >>> 16, c = r[6], p += (u = n[6]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[6] = E = 65535 & g | m << 16, n[6] = N = 65535 & d | p << 16, d = 65535 & (u = R), p = u >>> 16, g = 65535 & (c = S), m = c >>> 16, c = r[7], p += (u = n[7]) >>> 16, g += 65535 & c, m += c >>> 16, m += (g += (p += (d += 65535 & u) >>> 16) >>> 16) >>> 16, r[7] = S = 65535 & g | m << 16, n[7] = R = 65535 & d | p << 16, a += 128, h -= 128
                }
                return a
            }
            e.hash = function(t) {
                var e = new s;
                e.update(t);
                var r = e.digest();
                return e.clean(), r
            }
        },
        6062: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.wipe = function(t) {
                for (var e = 0; e < t.length; e++) t[e] = 0;
                return t
            }
        },
        39272: (t, e, r) => {
            "use strict";
            e.Tc = e.TZ = e.wE = e.Xx = void 0;
            const i = r(4214),
                n = r(6062);

            function s(t) {
                const e = new Float64Array(16);
                if (t)
                    for (let r = 0; r < t.length; r++) e[r] = t[r];
                return e
            }
            e.Xx = 32, e.wE = 32;
            const o = new Uint8Array(32);
            o[0] = 9;
            const a = s([56129, 1]);

            function h(t) {
                let e = 1;
                for (let r = 0; r < 16; r++) {
                    let i = t[r] + e + 65535;
                    e = Math.floor(i / 65536), t[r] = i - 65536 * e
                }
                t[0] += e - 1 + 37 * (e - 1)
            }

            function c(t, e, r) {
                const i = ~(r - 1);
                for (let n = 0; n < 16; n++) {
                    const r = i & (t[n] ^ e[n]);
                    t[n] ^= r, e[n] ^= r
                }
            }

            function u(t, e, r) {
                for (let i = 0; i < 16; i++) t[i] = e[i] + r[i]
            }

            function l(t, e, r) {
                for (let i = 0; i < 16; i++) t[i] = e[i] - r[i]
            }

            function f(t, e, r) {
                let i, n, s = 0,
                    o = 0,
                    a = 0,
                    h = 0,
                    c = 0,
                    u = 0,
                    l = 0,
                    f = 0,
                    d = 0,
                    p = 0,
                    g = 0,
                    m = 0,
                    y = 0,
                    v = 0,
                    w = 0,
                    b = 0,
                    _ = 0,
                    A = 0,
                    E = 0,
                    S = 0,
                    I = 0,
                    P = 0,
                    M = 0,
                    x = 0,
                    O = 0,
                    C = 0,
                    N = 0,
                    R = 0,
                    T = 0,
                    U = 0,
                    D = 0,
                    k = r[0],
                    B = r[1],
                    L = r[2],
                    q = r[3],
                    j = r[4],
                    z = r[5],
                    F = r[6],
                    H = r[7],
                    K = r[8],
                    V = r[9],
                    $ = r[10],
                    W = r[11],
                    G = r[12],
                    Q = r[13],
                    Y = r[14],
                    J = r[15];
                i = e[0], s += i * k, o += i * B, a += i * L, h += i * q, c += i * j, u += i * z, l += i * F, f += i * H, d += i * K, p += i * V, g += i * $, m += i * W, y += i * G, v += i * Q, w += i * Y, b += i * J, i = e[1], o += i * k, a += i * B, h += i * L, c += i * q, u += i * j, l += i * z, f += i * F, d += i * H, p += i * K, g += i * V, m += i * $, y += i * W, v += i * G, w += i * Q, b += i * Y, _ += i * J, i = e[2], a += i * k, h += i * B, c += i * L, u += i * q, l += i * j, f += i * z, d += i * F, p += i * H, g += i * K, m += i * V, y += i * $, v += i * W, w += i * G, b += i * Q, _ += i * Y, A += i * J, i = e[3], h += i * k, c += i * B, u += i * L, l += i * q, f += i * j, d += i * z, p += i * F, g += i * H, m += i * K, y += i * V, v += i * $, w += i * W, b += i * G, _ += i * Q, A += i * Y, E += i * J, i = e[4], c += i * k, u += i * B, l += i * L, f += i * q, d += i * j, p += i * z, g += i * F, m += i * H, y += i * K, v += i * V, w += i * $, b += i * W, _ += i * G, A += i * Q, E += i * Y, S += i * J, i = e[5], u += i * k, l += i * B, f += i * L, d += i * q, p += i * j, g += i * z, m += i * F, y += i * H, v += i * K, w += i * V, b += i * $, _ += i * W, A += i * G, E += i * Q, S += i * Y, I += i * J, i = e[6], l += i * k, f += i * B, d += i * L, p += i * q, g += i * j, m += i * z, y += i * F, v += i * H, w += i * K, b += i * V, _ += i * $, A += i * W, E += i * G, S += i * Q, I += i * Y, P += i * J, i = e[7], f += i * k, d += i * B, p += i * L, g += i * q, m += i * j, y += i * z, v += i * F, w += i * H, b += i * K, _ += i * V, A += i * $, E += i * W, S += i * G, I += i * Q, P += i * Y, M += i * J, i = e[8], d += i * k, p += i * B, g += i * L, m += i * q, y += i * j, v += i * z, w += i * F, b += i * H, _ += i * K, A += i * V, E += i * $, S += i * W, I += i * G, P += i * Q, M += i * Y, x += i * J, i = e[9], p += i * k, g += i * B, m += i * L, y += i * q, v += i * j, w += i * z, b += i * F, _ += i * H, A += i * K, E += i * V, S += i * $, I += i * W, P += i * G, M += i * Q, x += i * Y, O += i * J, i = e[10], g += i * k, m += i * B, y += i * L, v += i * q, w += i * j, b += i * z, _ += i * F, A += i * H, E += i * K, S += i * V, I += i * $, P += i * W, M += i * G, x += i * Q, O += i * Y, C += i * J, i = e[11], m += i * k, y += i * B, v += i * L, w += i * q, b += i * j, _ += i * z, A += i * F, E += i * H, S += i * K, I += i * V, P += i * $, M += i * W, x += i * G, O += i * Q, C += i * Y, N += i * J, i = e[12], y += i * k, v += i * B, w += i * L, b += i * q, _ += i * j, A += i * z, E += i * F, S += i * H, I += i * K, P += i * V, M += i * $, x += i * W, O += i * G, C += i * Q, N += i * Y, R += i * J, i = e[13], v += i * k, w += i * B, b += i * L, _ += i * q, A += i * j, E += i * z, S += i * F, I += i * H, P += i * K, M += i * V, x += i * $, O += i * W, C += i * G, N += i * Q, R += i * Y, T += i * J, i = e[14], w += i * k, b += i * B, _ += i * L, A += i * q, E += i * j, S += i * z, I += i * F, P += i * H, M += i * K, x += i * V, O += i * $, C += i * W, N += i * G, R += i * Q, T += i * Y, U += i * J, i = e[15], b += i * k, _ += i * B, A += i * L, E += i * q, S += i * j, I += i * z, P += i * F, M += i * H, x += i * K, O += i * V, C += i * $, N += i * W, R += i * G, T += i * Q, U += i * Y, D += i * J, s += 38 * _, o += 38 * A, a += 38 * E, h += 38 * S, c += 38 * I, u += 38 * P, l += 38 * M, f += 38 * x, d += 38 * O, p += 38 * C, g += 38 * N, m += 38 * R, y += 38 * T, v += 38 * U, w += 38 * D, n = 1, i = s + n + 65535, n = Math.floor(i / 65536), s = i - 65536 * n, i = o + n + 65535, n = Math.floor(i / 65536), o = i - 65536 * n, i = a + n + 65535, n = Math.floor(i / 65536), a = i - 65536 * n, i = h + n + 65535, n = Math.floor(i / 65536), h = i - 65536 * n, i = c + n + 65535, n = Math.floor(i / 65536), c = i - 65536 * n, i = u + n + 65535, n = Math.floor(i / 65536), u = i - 65536 * n, i = l + n + 65535, n = Math.floor(i / 65536), l = i - 65536 * n, i = f + n + 65535, n = Math.floor(i / 65536), f = i - 65536 * n, i = d + n + 65535, n = Math.floor(i / 65536), d = i - 65536 * n, i = p + n + 65535, n = Math.floor(i / 65536), p = i - 65536 * n, i = g + n + 65535, n = Math.floor(i / 65536), g = i - 65536 * n, i = m + n + 65535, n = Math.floor(i / 65536), m = i - 65536 * n, i = y + n + 65535, n = Math.floor(i / 65536), y = i - 65536 * n, i = v + n + 65535, n = Math.floor(i / 65536), v = i - 65536 * n, i = w + n + 65535, n = Math.floor(i / 65536), w = i - 65536 * n, i = b + n + 65535, n = Math.floor(i / 65536), b = i - 65536 * n, s += n - 1 + 37 * (n - 1), n = 1, i = s + n + 65535, n = Math.floor(i / 65536), s = i - 65536 * n, i = o + n + 65535, n = Math.floor(i / 65536), o = i - 65536 * n, i = a + n + 65535, n = Math.floor(i / 65536), a = i - 65536 * n, i = h + n + 65535, n = Math.floor(i / 65536), h = i - 65536 * n, i = c + n + 65535, n = Math.floor(i / 65536), c = i - 65536 * n, i = u + n + 65535, n = Math.floor(i / 65536), u = i - 65536 * n, i = l + n + 65535, n = Math.floor(i / 65536), l = i - 65536 * n, i = f + n + 65535, n = Math.floor(i / 65536), f = i - 65536 * n, i = d + n + 65535, n = Math.floor(i / 65536), d = i - 65536 * n, i = p + n + 65535, n = Math.floor(i / 65536), p = i - 65536 * n, i = g + n + 65535, n = Math.floor(i / 65536), g = i - 65536 * n, i = m + n + 65535, n = Math.floor(i / 65536), m = i - 65536 * n, i = y + n + 65535, n = Math.floor(i / 65536), y = i - 65536 * n, i = v + n + 65535, n = Math.floor(i / 65536), v = i - 65536 * n, i = w + n + 65535, n = Math.floor(i / 65536), w = i - 65536 * n, i = b + n + 65535, n = Math.floor(i / 65536), b = i - 65536 * n, s += n - 1 + 37 * (n - 1), t[0] = s, t[1] = o, t[2] = a, t[3] = h, t[4] = c, t[5] = u, t[6] = l, t[7] = f, t[8] = d, t[9] = p, t[10] = g, t[11] = m, t[12] = y, t[13] = v, t[14] = w, t[15] = b
            }

            function d(t, e) {
                f(t, e, e)
            }

            function p(t, e) {
                const r = new Uint8Array(32),
                    i = new Float64Array(80),
                    n = s(),
                    o = s(),
                    p = s(),
                    g = s(),
                    m = s(),
                    y = s();
                for (let s = 0; s < 31; s++) r[s] = t[s];
                r[31] = 127 & t[31] | 64, r[0] &= 248,
                    function(t, e) {
                        for (let r = 0; r < 16; r++) t[r] = e[2 * r] + (e[2 * r + 1] << 8);
                        t[15] &= 32767
                    }(i, e);
                for (let s = 0; s < 16; s++) o[s] = i[s];
                n[0] = g[0] = 1;
                for (let s = 254; s >= 0; --s) {
                    const t = r[s >>> 3] >>> (7 & s) & 1;
                    c(n, o, t), c(p, g, t), u(m, n, p), l(n, n, p), u(p, o, g), l(o, o, g), d(g, m), d(y, n), f(n, p, n), f(p, o, m), u(m, n, p), l(n, n, p), d(o, n), l(p, g, y), f(n, p, a), u(n, n, g), f(p, p, n), f(n, g, y), f(g, o, i), d(o, m), c(n, o, t), c(p, g, t)
                }
                for (let s = 0; s < 16; s++) i[s + 16] = n[s], i[s + 32] = p[s], i[s + 48] = o[s], i[s + 64] = g[s];
                const v = i.subarray(32),
                    w = i.subarray(16);
                ! function(t, e) {
                    const r = s();
                    for (let i = 0; i < 16; i++) r[i] = e[i];
                    for (let i = 253; i >= 0; i--) d(r, r), 2 !== i && 4 !== i && f(r, r, e);
                    for (let i = 0; i < 16; i++) t[i] = r[i]
                }(v, v), f(w, w, v);
                const b = new Uint8Array(32);
                return function(t, e) {
                    const r = s(),
                        i = s();
                    for (let n = 0; n < 16; n++) i[n] = e[n];
                    h(i), h(i), h(i);
                    for (let n = 0; n < 2; n++) {
                        r[0] = i[0] - 65517;
                        for (let e = 1; e < 15; e++) r[e] = i[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                        r[15] = i[15] - 32767 - (r[14] >> 16 & 1);
                        const t = r[15] >> 16 & 1;
                        r[14] &= 65535, c(i, r, 1 - t)
                    }
                    for (let n = 0; n < 16; n++) t[2 * n] = 255 & i[n], t[2 * n + 1] = i[n] >> 8
                }(b, w), b
            }

            function g(t) {
                return p(t, o)
            }

            function m(t) {
                if (t.length !== e.wE) throw new Error(`x25519: seed must be ${e.wE} bytes`);
                const r = new Uint8Array(t);
                return {
                    publicKey: g(r),
                    secretKey: r
                }
            }
            e.TZ = function(t) {
                const e = (0, i.randomBytes)(32, t),
                    r = m(e);
                return (0, n.wipe)(e), r
            }, e.Tc = function(t, r) {
                let i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                if (t.length !== e.Xx) throw new Error("X25519: incorrect secret key length");
                if (r.length !== e.Xx) throw new Error("X25519: incorrect public key length");
                const n = p(t, r);
                if (i) {
                    let t = 0;
                    for (let e = 0; e < n.length; e++) t |= n[e];
                    if (0 === t) throw new Error("X25519: invalid shared key")
                }
                return n
            }
        },
        97727: (t, e, r) => {
            "use strict";

            function i() {
                return (null === r.g || void 0 === r.g ? void 0 : r.g.crypto) || (null === r.g || void 0 === r.g ? void 0 : r.g.msCrypto) || {}
            }

            function n() {
                const t = i();
                return t.subtle || t.webkitSubtle
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isBrowserCryptoAvailable = e.getSubtleCrypto = e.getBrowerCrypto = void 0, e.getBrowerCrypto = i, e.getSubtleCrypto = n, e.isBrowserCryptoAvailable = function() {
                return !!i() && !!n()
            }
        },
        67499: (t, e, r) => {
            "use strict";
            var i = r(27256);

            function n() {
                return "undefined" === typeof document && "undefined" !== typeof navigator && "ReactNative" === navigator.product
            }

            function s() {
                return "undefined" !== typeof i && "undefined" !== typeof i.versions && "undefined" !== typeof i.versions.node
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isBrowser = e.isNode = e.isReactNative = void 0, e.isReactNative = n, e.isNode = s, e.isBrowser = function() {
                return !n() && !s()
            }
        },
        56640: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            const i = r(62268);
            i.__exportStar(r(97727), e), i.__exportStar(r(67499), e)
        },
        62268: (t, e, r) => {
            "use strict";
            r.r(e), r.d(e, {
                __assign: () => s,
                __asyncDelegator: () => b,
                __asyncGenerator: () => w,
                __asyncValues: () => _,
                __await: () => v,
                __awaiter: () => u,
                __classPrivateFieldGet: () => I,
                __classPrivateFieldSet: () => P,
                __createBinding: () => f,
                __decorate: () => a,
                __exportStar: () => d,
                __extends: () => n,
                __generator: () => l,
                __importDefault: () => S,
                __importStar: () => E,
                __makeTemplateObject: () => A,
                __metadata: () => c,
                __param: () => h,
                __read: () => g,
                __rest: () => o,
                __spread: () => m,
                __spreadArrays: () => y,
                __values: () => p
            });
            var i = function(t, e) {
                return i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(t, e) {
                    t.__proto__ = e
                } || function(t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                }, i(t, e)
            };

            function n(t, e) {
                function r() {
                    this.constructor = t
                }
                i(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r)
            }
            var s = function() {
                return s = Object.assign || function(t) {
                    for (var e, r = 1, i = arguments.length; r < i; r++)
                        for (var n in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    return t
                }, s.apply(this, arguments)
            };

            function o(t, e) {
                var r = {};
                for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);
                if (null != t && "function" === typeof Object.getOwnPropertySymbols) {
                    var n = 0;
                    for (i = Object.getOwnPropertySymbols(t); n < i.length; n++) e.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[n]) && (r[i[n]] = t[i[n]])
                }
                return r
            }

            function a(t, e, r, i) {
                var n, s = arguments.length,
                    o = s < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;
                if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) o = Reflect.decorate(t, e, r, i);
                else
                    for (var a = t.length - 1; a >= 0; a--)(n = t[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(e, r, o) : n(e, r)) || o);
                return s > 3 && o && Object.defineProperty(e, r, o), o
            }

            function h(t, e) {
                return function(r, i) {
                    e(r, i, t)
                }
            }

            function c(t, e) {
                if ("object" === typeof Reflect && "function" === typeof Reflect.metadata) return Reflect.metadata(t, e)
            }

            function u(t, e, r, i) {
                return new(r || (r = Promise))((function(n, s) {
                    function o(t) {
                        try {
                            h(i.next(t))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function a(t) {
                        try {
                            h(i.throw(t))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function h(t) {
                        var e;
                        t.done ? n(t.value) : (e = t.value, e instanceof r ? e : new r((function(t) {
                            t(e)
                        }))).then(o, a)
                    }
                    h((i = i.apply(t, e || [])).next())
                }))
            }

            function l(t, e) {
                var r, i, n, s, o = {
                    label: 0,
                    sent: function() {
                        if (1 & n[0]) throw n[1];
                        return n[1]
                    },
                    trys: [],
                    ops: []
                };
                return s = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" === typeof Symbol && (s[Symbol.iterator] = function() {
                    return this
                }), s;

                function a(s) {
                    return function(a) {
                        return function(s) {
                            if (r) throw new TypeError("Generator is already executing.");
                            for (; o;) try {
                                if (r = 1, i && (n = 2 & s[0] ? i.return : s[0] ? i.throw || ((n = i.return) && n.call(i), 0) : i.next) && !(n = n.call(i, s[1])).done) return n;
                                switch (i = 0, n && (s = [2 & s[0], n.value]), s[0]) {
                                    case 0:
                                    case 1:
                                        n = s;
                                        break;
                                    case 4:
                                        return o.label++, {
                                            value: s[1],
                                            done: !1
                                        };
                                    case 5:
                                        o.label++, i = s[1], s = [0];
                                        continue;
                                    case 7:
                                        s = o.ops.pop(), o.trys.pop();
                                        continue;
                                    default:
                                        if (!(n = (n = o.trys).length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                            o = 0;
                                            continue
                                        }
                                        if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
                                            o.label = s[1];
                                            break
                                        }
                                        if (6 === s[0] && o.label < n[1]) {
                                            o.label = n[1], n = s;
                                            break
                                        }
                                        if (n && o.label < n[2]) {
                                            o.label = n[2], o.ops.push(s);
                                            break
                                        }
                                        n[2] && o.ops.pop(), o.trys.pop();
                                        continue
                                }
                                s = e.call(t, o)
                            } catch (a) {
                                s = [6, a], i = 0
                            } finally {
                                r = n = 0
                            }
                            if (5 & s[0]) throw s[1];
                            return {
                                value: s[0] ? s[1] : void 0,
                                done: !0
                            }
                        }([s, a])
                    }
                }
            }

            function f(t, e, r, i) {
                void 0 === i && (i = r), t[i] = e[r]
            }

            function d(t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || (e[r] = t[r])
            }

            function p(t) {
                var e = "function" === typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    i = 0;
                if (r) return r.call(t);
                if (t && "number" === typeof t.length) return {
                    next: function() {
                        return t && i >= t.length && (t = void 0), {
                            value: t && t[i++],
                            done: !t
                        }
                    }
                };
                throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(t, e) {
                var r = "function" === typeof Symbol && t[Symbol.iterator];
                if (!r) return t;
                var i, n, s = r.call(t),
                    o = [];
                try {
                    for (;
                        (void 0 === e || e-- > 0) && !(i = s.next()).done;) o.push(i.value)
                } catch (a) {
                    n = {
                        error: a
                    }
                } finally {
                    try {
                        i && !i.done && (r = s.return) && r.call(s)
                    } finally {
                        if (n) throw n.error
                    }
                }
                return o
            }

            function m() {
                for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(g(arguments[e]));
                return t
            }

            function y() {
                for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
                var i = Array(t),
                    n = 0;
                for (e = 0; e < r; e++)
                    for (var s = arguments[e], o = 0, a = s.length; o < a; o++, n++) i[n] = s[o];
                return i
            }

            function v(t) {
                return this instanceof v ? (this.v = t, this) : new v(t)
            }

            function w(t, e, r) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var i, n = r.apply(t, e || []),
                    s = [];
                return i = {}, o("next"), o("throw"), o("return"), i[Symbol.asyncIterator] = function() {
                    return this
                }, i;

                function o(t) {
                    n[t] && (i[t] = function(e) {
                        return new Promise((function(r, i) {
                            s.push([t, e, r, i]) > 1 || a(t, e)
                        }))
                    })
                }

                function a(t, e) {
                    try {
                        (r = n[t](e)).value instanceof v ? Promise.resolve(r.value.v).then(h, c) : u(s[0][2], r)
                    } catch (i) {
                        u(s[0][3], i)
                    }
                    var r
                }

                function h(t) {
                    a("next", t)
                }

                function c(t) {
                    a("throw", t)
                }

                function u(t, e) {
                    t(e), s.shift(), s.length && a(s[0][0], s[0][1])
                }
            }

            function b(t) {
                var e, r;
                return e = {}, i("next"), i("throw", (function(t) {
                    throw t
                })), i("return"), e[Symbol.iterator] = function() {
                    return this
                }, e;

                function i(i, n) {
                    e[i] = t[i] ? function(e) {
                        return (r = !r) ? {
                            value: v(t[i](e)),
                            done: "return" === i
                        } : n ? n(e) : e
                    } : n
                }
            }

            function _(t) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var e, r = t[Symbol.asyncIterator];
                return r ? r.call(t) : (t = p(t), e = {}, i("next"), i("throw"), i("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function i(r) {
                    e[r] = t[r] && function(e) {
                        return new Promise((function(i, n) {
                            (function(t, e, r, i) {
                                Promise.resolve(i).then((function(e) {
                                    t({
                                        value: e,
                                        done: r
                                    })
                                }), e)
                            })(i, n, (e = t[r](e)).done, e.value)
                        }))
                    }
                }
            }

            function A(t, e) {
                return Object.defineProperty ? Object.defineProperty(t, "raw", {
                    value: e
                }) : t.raw = e, t
            }

            function E(t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e.default = t, e
            }

            function S(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function I(t, e) {
                if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance");
                return e.get(t)
            }

            function P(t, e, r) {
                if (!e.has(t)) throw new TypeError("attempted to set private field on non-instance");
                return e.set(t, r), r
            }
        },
        87533: (t, e, r) => {
            "use strict";
            r.d(e, {
                EthereumProvider: () => uw
            });
            var i = {};
            r.r(i), r.d(i, {
                identity: () => Ot
            });
            var n = {};
            r.r(n), r.d(n, {
                base2: () => Ct
            });
            var s = {};
            r.r(s), r.d(s, {
                base8: () => Nt
            });
            var o = {};
            r.r(o), r.d(o, {
                base10: () => Rt
            });
            var a = {};
            r.r(a), r.d(a, {
                base16: () => Tt,
                base16upper: () => Ut
            });
            var h = {};
            r.r(h), r.d(h, {
                base32: () => Dt,
                base32hex: () => qt,
                base32hexpad: () => zt,
                base32hexpadupper: () => Ft,
                base32hexupper: () => jt,
                base32pad: () => Bt,
                base32padupper: () => Lt,
                base32upper: () => kt,
                base32z: () => Ht
            });
            var c = {};
            r.r(c), r.d(c, {
                base36: () => Kt,
                base36upper: () => Vt
            });
            var u = {};
            r.r(u), r.d(u, {
                base58btc: () => $t,
                base58flickr: () => Wt
            });
            var l = {};
            r.r(l), r.d(l, {
                base64: () => Gt,
                base64pad: () => Qt,
                base64url: () => Yt,
                base64urlpad: () => Jt
            });
            var f = {};
            r.r(f), r.d(f, {
                base256emoji: () => ee
            });
            var d = {};
            r.r(d), r.d(d, {
                sha256: () => Pe,
                sha512: () => Me
            });
            var p = {};
            r.r(p), r.d(p, {
                identity: () => Oe
            });
            var g = {};
            r.r(g), r.d(g, {
                code: () => Ne,
                decode: () => Te,
                encode: () => Re,
                name: () => Ce
            });
            var m = {};
            r.r(m), r.d(m, {
                code: () => Be,
                decode: () => qe,
                encode: () => Le,
                name: () => ke
            });
            var y = {};
            r.r(y), r.d(y, {
                identity: () => vu
            });
            var v = {};
            r.r(v), r.d(v, {
                base2: () => wu
            });
            var w = {};
            r.r(w), r.d(w, {
                base8: () => bu
            });
            var b = {};
            r.r(b), r.d(b, {
                base10: () => _u
            });
            var _ = {};
            r.r(_), r.d(_, {
                base16: () => Au,
                base16upper: () => Eu
            });
            var A = {};
            r.r(A), r.d(A, {
                base32: () => Su,
                base32hex: () => xu,
                base32hexpad: () => Cu,
                base32hexpadupper: () => Nu,
                base32hexupper: () => Ou,
                base32pad: () => Pu,
                base32padupper: () => Mu,
                base32upper: () => Iu,
                base32z: () => Ru
            });
            var E = {};
            r.r(E), r.d(E, {
                base36: () => Tu,
                base36upper: () => Uu
            });
            var S = {};
            r.r(S), r.d(S, {
                base58btc: () => Du,
                base58flickr: () => ku
            });
            var I = {};
            r.r(I), r.d(I, {
                base64: () => Bu,
                base64pad: () => Lu,
                base64url: () => qu,
                base64urlpad: () => ju
            });
            var P = {};
            r.r(P), r.d(P, {
                base256emoji: () => Ku
            });
            var M = {};
            r.r(M), r.d(M, {
                sha256: () => gl,
                sha512: () => ml
            });
            var x = {};
            r.r(x), r.d(x, {
                identity: () => vl
            });
            var O = {};
            r.r(O), r.d(O, {
                code: () => bl,
                decode: () => Al,
                encode: () => _l,
                name: () => wl
            });
            var C = {};
            r.r(C), r.d(C, {
                code: () => Pl,
                decode: () => xl,
                encode: () => Ml,
                name: () => Il
            });
            var N = {};
            r.r(N), r.d(N, {
                identity: () => Jl
            });
            var R = {};
            r.r(R), r.d(R, {
                base2: () => Xl
            });
            var T = {};
            r.r(T), r.d(T, {
                base8: () => Zl
            });
            var U = {};
            r.r(U), r.d(U, {
                base10: () => tf
            });
            var D = {};
            r.r(D), r.d(D, {
                base16: () => ef,
                base16upper: () => rf
            });
            var k = {};
            r.r(k), r.d(k, {
                base32: () => nf,
                base32hex: () => hf,
                base32hexpad: () => uf,
                base32hexpadupper: () => lf,
                base32hexupper: () => cf,
                base32pad: () => of ,
                base32padupper: () => af,
                base32upper: () => sf,
                base32z: () => ff
            });
            var B = {};
            r.r(B), r.d(B, {
                base36: () => df,
                base36upper: () => pf
            });
            var L = {};
            r.r(L), r.d(L, {
                base58btc: () => gf,
                base58flickr: () => mf
            });
            var q = {};
            r.r(q), r.d(q, {
                base64: () => yf,
                base64pad: () => vf,
                base64url: () => wf,
                base64urlpad: () => bf
            });
            var j = {};
            r.r(j), r.d(j, {
                base256emoji: () => Sf
            });
            var z = {};
            r.r(z), r.d(z, {
                sha256: () => Qf,
                sha512: () => Yf
            });
            var F = {};
            r.r(F), r.d(F, {
                identity: () => Xf
            });
            var H = {};
            r.r(H), r.d(H, {
                code: () => td,
                decode: () => rd,
                encode: () => ed,
                name: () => Zf
            });
            var K = {};
            r.r(K), r.d(K, {
                code: () => od,
                decode: () => hd,
                encode: () => ad,
                name: () => sd
            });
            var V = r(56677),
                $ = r.n(V),
                W = r(27256),
                G = function(t, e, r) {
                    if (r || 2 === arguments.length)
                        for (var i, n = 0, s = e.length; n < s; n++) !i && n in e || (i || (i = Array.prototype.slice.call(e, 0, n)), i[n] = e[n]);
                    return t.concat(i || Array.prototype.slice.call(e))
                },
                Q = function(t, e, r) {
                    this.name = t, this.version = e, this.os = r, this.type = "browser"
                },
                Y = function(t) {
                    this.version = t, this.type = "node", this.name = "node", this.os = W.platform
                },
                J = function(t, e, r, i) {
                    this.name = t, this.version = e, this.os = r, this.bot = i, this.type = "bot-device"
                },
                X = function() {
                    this.type = "bot", this.bot = !0, this.name = "bot", this.version = null, this.os = null
                },
                Z = function() {
                    this.type = "react-native", this.name = "react-native", this.version = null, this.os = null
                },
                tt = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
                et = 3,
                rt = [
                    ["aol", /AOLShield\/([0-9\._]+)/],
                    ["edge", /Edge\/([0-9\._]+)/],
                    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
                    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
                    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
                    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
                    ["silk", /\bSilk\/([0-9._-]+)\b/],
                    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
                    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
                    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
                    ["chromium-webview", /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
                    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
                    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
                    ["fxios", /FxiOS\/([0-9\.]+)/],
                    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
                    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
                    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
                    ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
                    ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
                    ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
                    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
                    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
                    ["ie", /MSIE\s(7\.0)/],
                    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
                    ["android", /Android\s([0-9\.]+)/],
                    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
                    ["safari", /Version\/([0-9\._]+).*Safari/],
                    ["facebook", /FB[AS]V\/([0-9\.]+)/],
                    ["instagram", /Instagram\s([0-9\.]+)/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
                    ["curl", /^curl\/([0-9\.]+)$/],
                    ["searchbot", /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]
                ],
                it = [
                    ["iOS", /iP(hone|od|ad)/],
                    ["Android OS", /Android/],
                    ["BlackBerry OS", /BlackBerry|BB10/],
                    ["Windows Mobile", /IEMobile/],
                    ["Amazon OS", /Kindle/],
                    ["Windows 3.11", /Win16/],
                    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
                    ["Windows 98", /(Windows 98)|(Win98)/],
                    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
                    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
                    ["Windows Server 2003", /(Windows NT 5.2)/],
                    ["Windows Vista", /(Windows NT 6.0)/],
                    ["Windows 7", /(Windows NT 6.1)/],
                    ["Windows 8", /(Windows NT 6.2)/],
                    ["Windows 8.1", /(Windows NT 6.3)/],
                    ["Windows 10", /(Windows NT 10.0)/],
                    ["Windows ME", /Windows ME/],
                    ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
                    ["Open BSD", /OpenBSD/],
                    ["Sun OS", /SunOS/],
                    ["Chrome OS", /CrOS/],
                    ["Linux", /(Linux)|(X11)/],
                    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
                    ["QNX", /QNX/],
                    ["BeOS", /BeOS/],
                    ["OS/2", /OS\/2/]
                ];

            function nt(t) {
                return t ? ot(t) : "undefined" === typeof document && "undefined" !== typeof navigator && "ReactNative" === navigator.product ? new Z : "undefined" !== typeof navigator ? ot(navigator.userAgent) : "undefined" !== typeof W && W.version ? new Y(W.version.slice(1)) : null
            }

            function st(t) {
                return "" !== t && rt.reduce((function(e, r) {
                    var i = r[0],
                        n = r[1];
                    if (e) return e;
                    var s = n.exec(t);
                    return !!s && [i, s]
                }), !1)
            }

            function ot(t) {
                var e = st(t);
                if (!e) return null;
                var r = e[0],
                    i = e[1];
                if ("searchbot" === r) return new X;
                var n = i[1] && i[1].split(".").join("_").split("_").slice(0, 3);
                n ? n.length < et && (n = G(G([], n, !0), function(t) {
                    for (var e = [], r = 0; r < t; r++) e.push("0");
                    return e
                }(et - n.length), !0)) : n = [];
                var s = n.join("."),
                    o = function(t) {
                        for (var e = 0, r = it.length; e < r; e++) {
                            var i = it[e],
                                n = i[0];
                            if (i[1].exec(t)) return n
                        }
                        return null
                    }(t),
                    a = tt.exec(t);
                return a && a[1] ? new J(r, s, o, a[1]) : new Q(r, s, o)
            }
            var at = r(77326),
                ht = r(53986),
                ct = r(78037),
                ut = r(8945),
                lt = r(4766),
                ft = r(23878),
                dt = r(4214),
                pt = r(1254),
                gt = r(39272);

            function mt() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? globalThis.Buffer.allocUnsafe(t) : new Uint8Array(t)
            }

            function yt(t, e) {
                e || (e = t.reduce(((t, e) => t + e.length), 0));
                const r = mt(e);
                let i = 0;
                for (const n of t) r.set(n, i), i += n.length;
                return r
            }
            var vt = function(t, e) {
                if (t.length >= 255) throw new TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), i = 0; i < r.length; i++) r[i] = 255;
                for (var n = 0; n < t.length; n++) {
                    var s = t.charAt(n),
                        o = s.charCodeAt(0);
                    if (255 !== r[o]) throw new TypeError(s + " is ambiguous");
                    r[o] = n
                }
                var a = t.length,
                    h = t.charAt(0),
                    c = Math.log(a) / Math.log(256),
                    u = Math.log(256) / Math.log(a);

                function l(t) {
                    if ("string" !== typeof t) throw new TypeError("Expected String");
                    if (0 === t.length) return new Uint8Array;
                    var e = 0;
                    if (" " !== t[e]) {
                        for (var i = 0, n = 0; t[e] === h;) i++, e++;
                        for (var s = (t.length - e) * c + 1 >>> 0, o = new Uint8Array(s); t[e];) {
                            var u = r[t.charCodeAt(e)];
                            if (255 === u) return;
                            for (var l = 0, f = s - 1;
                                (0 !== u || l < n) && -1 !== f; f--, l++) u += a * o[f] >>> 0, o[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                            if (0 !== u) throw new Error("Non-zero carry");
                            n = l, e++
                        }
                        if (" " !== t[e]) {
                            for (var d = s - n; d !== s && 0 === o[d];) d++;
                            for (var p = new Uint8Array(i + (s - d)), g = i; d !== s;) p[g++] = o[d++];
                            return p
                        }
                    }
                }
                return {
                    encode: function(e) {
                        if (e instanceof Uint8Array || (ArrayBuffer.isView(e) ? e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : Array.isArray(e) && (e = Uint8Array.from(e))), !(e instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                        if (0 === e.length) return "";
                        for (var r = 0, i = 0, n = 0, s = e.length; n !== s && 0 === e[n];) n++, r++;
                        for (var o = (s - n) * u + 1 >>> 0, c = new Uint8Array(o); n !== s;) {
                            for (var l = e[n], f = 0, d = o - 1;
                                (0 !== l || f < i) && -1 !== d; d--, f++) l += 256 * c[d] >>> 0, c[d] = l % a >>> 0, l = l / a >>> 0;
                            if (0 !== l) throw new Error("Non-zero carry");
                            i = f, n++
                        }
                        for (var p = o - i; p !== o && 0 === c[p];) p++;
                        for (var g = h.repeat(r); p < o; ++p) g += t.charAt(c[p]);
                        return g
                    },
                    decodeUnsafe: l,
                    decode: function(t) {
                        var r = l(t);
                        if (r) return r;
                        throw new Error(`Non-${e} character`)
                    }
                }
            };
            const wt = vt,
                bt = (new Uint8Array(0), t => {
                    if (t instanceof Uint8Array && "Uint8Array" === t.constructor.name) return t;
                    if (t instanceof ArrayBuffer) return new Uint8Array(t);
                    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                    throw new Error("Unknown type, must be binary type")
                });
            class _t {
                constructor(t, e, r) {
                    this.name = t, this.prefix = e, this.baseEncode = r
                }
                encode(t) {
                    if (t instanceof Uint8Array) return `${this.prefix}${this.baseEncode(t)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class At {
                constructor(t, e, r) {
                    if (this.name = t, this.prefix = e, void 0 === e.codePointAt(0)) throw new Error("Invalid prefix character");
                    this.prefixCodePoint = e.codePointAt(0), this.baseDecode = r
                }
                decode(t) {
                    if ("string" === typeof t) {
                        if (t.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(t.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(t) {
                    return St(this, t)
                }
            }
            class Et {
                constructor(t) {
                    this.decoders = t
                }
                or(t) {
                    return St(this, t)
                }
                decode(t) {
                    const e = t[0],
                        r = this.decoders[e];
                    if (r) return r.decode(t);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            const St = (t, e) => new Et({ ...t.decoders || {
                    [t.prefix]: t
                },
                ...e.decoders || {
                    [e.prefix]: e
                }
            });
            class It {
                constructor(t, e, r, i) {
                    this.name = t, this.prefix = e, this.baseEncode = r, this.baseDecode = i, this.encoder = new _t(t, e, r), this.decoder = new At(t, e, i)
                }
                encode(t) {
                    return this.encoder.encode(t)
                }
                decode(t) {
                    return this.decoder.decode(t)
                }
            }
            const Pt = t => {
                    let {
                        name: e,
                        prefix: r,
                        encode: i,
                        decode: n
                    } = t;
                    return new It(e, r, i, n)
                },
                Mt = t => {
                    let {
                        prefix: e,
                        name: r,
                        alphabet: i
                    } = t;
                    const {
                        encode: n,
                        decode: s
                    } = wt(i, r);
                    return Pt({
                        prefix: e,
                        name: r,
                        encode: n,
                        decode: t => bt(s(t))
                    })
                },
                xt = t => {
                    let {
                        name: e,
                        prefix: r,
                        bitsPerChar: i,
                        alphabet: n
                    } = t;
                    return Pt({
                        prefix: r,
                        name: e,
                        encode: t => ((t, e, r) => {
                            const i = "=" === e[e.length - 1],
                                n = (1 << r) - 1;
                            let s = "",
                                o = 0,
                                a = 0;
                            for (let h = 0; h < t.length; ++h)
                                for (a = a << 8 | t[h], o += 8; o > r;) o -= r, s += e[n & a >> o];
                            if (o && (s += e[n & a << r - o]), i)
                                for (; s.length * r & 7;) s += "=";
                            return s
                        })(t, n, i),
                        decode: t => ((t, e, r, i) => {
                            const n = {};
                            for (let u = 0; u < e.length; ++u) n[e[u]] = u;
                            let s = t.length;
                            for (;
                                "=" === t[s - 1];) --s;
                            const o = new Uint8Array(s * r / 8 | 0);
                            let a = 0,
                                h = 0,
                                c = 0;
                            for (let u = 0; u < s; ++u) {
                                const e = n[t[u]];
                                if (void 0 === e) throw new SyntaxError(`Non-${i} character`);
                                h = h << r | e, a += r, a >= 8 && (a -= 8, o[c++] = 255 & h >> a)
                            }
                            if (a >= r || 255 & h << 8 - a) throw new SyntaxError("Unexpected end of data");
                            return o
                        })(t, n, i, e)
                    })
                },
                Ot = Pt({
                    prefix: "\0",
                    name: "identity",
                    encode: t => (t => (new TextDecoder).decode(t))(t),
                    decode: t => (t => (new TextEncoder).encode(t))(t)
                }),
                Ct = xt({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                Nt = xt({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                Rt = Mt({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                Tt = xt({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                Ut = xt({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                Dt = xt({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                kt = xt({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                Bt = xt({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                Lt = xt({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                qt = xt({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                jt = xt({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                zt = xt({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                Ft = xt({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                Ht = xt({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                Kt = Mt({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                Vt = Mt({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                $t = Mt({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Wt = Mt({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                Gt = xt({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                Qt = xt({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                Yt = xt({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                Jt = xt({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                Xt = Array.from("\ud83d\ude80\ud83e\ude90\u2604\ud83d\udef0\ud83c\udf0c\ud83c\udf11\ud83c\udf12\ud83c\udf13\ud83c\udf14\ud83c\udf15\ud83c\udf16\ud83c\udf17\ud83c\udf18\ud83c\udf0d\ud83c\udf0f\ud83c\udf0e\ud83d\udc09\u2600\ud83d\udcbb\ud83d\udda5\ud83d\udcbe\ud83d\udcbf\ud83d\ude02\u2764\ud83d\ude0d\ud83e\udd23\ud83d\ude0a\ud83d\ude4f\ud83d\udc95\ud83d\ude2d\ud83d\ude18\ud83d\udc4d\ud83d\ude05\ud83d\udc4f\ud83d\ude01\ud83d\udd25\ud83e\udd70\ud83d\udc94\ud83d\udc96\ud83d\udc99\ud83d\ude22\ud83e\udd14\ud83d\ude06\ud83d\ude44\ud83d\udcaa\ud83d\ude09\u263a\ud83d\udc4c\ud83e\udd17\ud83d\udc9c\ud83d\ude14\ud83d\ude0e\ud83d\ude07\ud83c\udf39\ud83e\udd26\ud83c\udf89\ud83d\udc9e\u270c\u2728\ud83e\udd37\ud83d\ude31\ud83d\ude0c\ud83c\udf38\ud83d\ude4c\ud83d\ude0b\ud83d\udc97\ud83d\udc9a\ud83d\ude0f\ud83d\udc9b\ud83d\ude42\ud83d\udc93\ud83e\udd29\ud83d\ude04\ud83d\ude00\ud83d\udda4\ud83d\ude03\ud83d\udcaf\ud83d\ude48\ud83d\udc47\ud83c\udfb6\ud83d\ude12\ud83e\udd2d\u2763\ud83d\ude1c\ud83d\udc8b\ud83d\udc40\ud83d\ude2a\ud83d\ude11\ud83d\udca5\ud83d\ude4b\ud83d\ude1e\ud83d\ude29\ud83d\ude21\ud83e\udd2a\ud83d\udc4a\ud83e\udd73\ud83d\ude25\ud83e\udd24\ud83d\udc49\ud83d\udc83\ud83d\ude33\u270b\ud83d\ude1a\ud83d\ude1d\ud83d\ude34\ud83c\udf1f\ud83d\ude2c\ud83d\ude43\ud83c\udf40\ud83c\udf37\ud83d\ude3b\ud83d\ude13\u2b50\u2705\ud83e\udd7a\ud83c\udf08\ud83d\ude08\ud83e\udd18\ud83d\udca6\u2714\ud83d\ude23\ud83c\udfc3\ud83d\udc90\u2639\ud83c\udf8a\ud83d\udc98\ud83d\ude20\u261d\ud83d\ude15\ud83c\udf3a\ud83c\udf82\ud83c\udf3b\ud83d\ude10\ud83d\udd95\ud83d\udc9d\ud83d\ude4a\ud83d\ude39\ud83d\udde3\ud83d\udcab\ud83d\udc80\ud83d\udc51\ud83c\udfb5\ud83e\udd1e\ud83d\ude1b\ud83d\udd34\ud83d\ude24\ud83c\udf3c\ud83d\ude2b\u26bd\ud83e\udd19\u2615\ud83c\udfc6\ud83e\udd2b\ud83d\udc48\ud83d\ude2e\ud83d\ude46\ud83c\udf7b\ud83c\udf43\ud83d\udc36\ud83d\udc81\ud83d\ude32\ud83c\udf3f\ud83e\udde1\ud83c\udf81\u26a1\ud83c\udf1e\ud83c\udf88\u274c\u270a\ud83d\udc4b\ud83d\ude30\ud83e\udd28\ud83d\ude36\ud83e\udd1d\ud83d\udeb6\ud83d\udcb0\ud83c\udf53\ud83d\udca2\ud83e\udd1f\ud83d\ude41\ud83d\udea8\ud83d\udca8\ud83e\udd2c\u2708\ud83c\udf80\ud83c\udf7a\ud83e\udd13\ud83d\ude19\ud83d\udc9f\ud83c\udf31\ud83d\ude16\ud83d\udc76\ud83e\udd74\u25b6\u27a1\u2753\ud83d\udc8e\ud83d\udcb8\u2b07\ud83d\ude28\ud83c\udf1a\ud83e\udd8b\ud83d\ude37\ud83d\udd7a\u26a0\ud83d\ude45\ud83d\ude1f\ud83d\ude35\ud83d\udc4e\ud83e\udd32\ud83e\udd20\ud83e\udd27\ud83d\udccc\ud83d\udd35\ud83d\udc85\ud83e\uddd0\ud83d\udc3e\ud83c\udf52\ud83d\ude17\ud83e\udd11\ud83c\udf0a\ud83e\udd2f\ud83d\udc37\u260e\ud83d\udca7\ud83d\ude2f\ud83d\udc86\ud83d\udc46\ud83c\udfa4\ud83d\ude47\ud83c\udf51\u2744\ud83c\udf34\ud83d\udca3\ud83d\udc38\ud83d\udc8c\ud83d\udccd\ud83e\udd40\ud83e\udd22\ud83d\udc45\ud83d\udca1\ud83d\udca9\ud83d\udc50\ud83d\udcf8\ud83d\udc7b\ud83e\udd10\ud83e\udd2e\ud83c\udfbc\ud83e\udd75\ud83d\udea9\ud83c\udf4e\ud83c\udf4a\ud83d\udc7c\ud83d\udc8d\ud83d\udce3\ud83e\udd42"),
                Zt = Xt.reduce(((t, e, r) => (t[r] = e, t)), []),
                te = Xt.reduce(((t, e, r) => (t[e.codePointAt(0)] = r, t)), []);
            const ee = Pt({
                prefix: "\ud83d\ude80",
                name: "base256emoji",
                encode: function(t) {
                    return t.reduce(((t, e) => t += Zt[e]), "")
                },
                decode: function(t) {
                    const e = [];
                    for (const r of t) {
                        const t = te[r.codePointAt(0)];
                        if (void 0 === t) throw new Error(`Non-base256emoji character: ${r}`);
                        e.push(t)
                    }
                    return new Uint8Array(e)
                }
            });
            var re = function t(e, r, i) {
                    r = r || [];
                    var n = i = i || 0;
                    for (; e >= se;) r[i++] = 255 & e | ie, e /= 128;
                    for (; e & ne;) r[i++] = 255 & e | ie, e >>>= 7;
                    return r[i] = 0 | e, t.bytes = i - n + 1, r
                },
                ie = 128,
                ne = -128,
                se = Math.pow(2, 31);
            var oe = function t(e, r) {
                    var i, n = 0,
                        s = 0,
                        o = r = r || 0,
                        a = e.length;
                    do {
                        if (o >= a) throw t.bytes = 0, new RangeError("Could not decode varint");
                        i = e[o++], n += s < 28 ? (i & he) << s : (i & he) * Math.pow(2, s), s += 7
                    } while (i >= ae);
                    return t.bytes = o - r, n
                },
                ae = 128,
                he = 127;
            var ce = Math.pow(2, 7),
                ue = Math.pow(2, 14),
                le = Math.pow(2, 21),
                fe = Math.pow(2, 28),
                de = Math.pow(2, 35),
                pe = Math.pow(2, 42),
                ge = Math.pow(2, 49),
                me = Math.pow(2, 56),
                ye = Math.pow(2, 63);
            const ve = {
                    encode: re,
                    decode: oe,
                    encodingLength: function(t) {
                        return t < ce ? 1 : t < ue ? 2 : t < le ? 3 : t < fe ? 4 : t < de ? 5 : t < pe ? 6 : t < ge ? 7 : t < me ? 8 : t < ye ? 9 : 10
                    }
                },
                we = function(t, e) {
                    let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    return ve.encode(t, e, r), e
                },
                be = t => ve.encodingLength(t),
                _e = (t, e) => {
                    const r = e.byteLength,
                        i = be(t),
                        n = i + be(r),
                        s = new Uint8Array(n + r);
                    return we(t, s, 0), we(r, s, i), s.set(e, n), new Ae(t, r, e, s)
                };
            class Ae {
                constructor(t, e, r, i) {
                    this.code = t, this.size = e, this.digest = r, this.bytes = i
                }
            }
            const Ee = t => {
                let {
                    name: e,
                    code: r,
                    encode: i
                } = t;
                return new Se(e, r, i)
            };
            class Se {
                constructor(t, e, r) {
                    this.name = t, this.code = e, this.encode = r
                }
                digest(t) {
                    if (t instanceof Uint8Array) {
                        const e = this.encode(t);
                        return e instanceof Uint8Array ? _e(this.code, e) : e.then((t => _e(this.code, t)))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            const Ie = t => async e => new Uint8Array(await crypto.subtle.digest(t, e)),
                Pe = Ee({
                    name: "sha2-256",
                    code: 18,
                    encode: Ie("SHA-256")
                }),
                Me = Ee({
                    name: "sha2-512",
                    code: 19,
                    encode: Ie("SHA-512")
                }),
                xe = bt,
                Oe = {
                    code: 0,
                    name: "identity",
                    encode: xe,
                    digest: t => _e(0, xe(t))
                },
                Ce = "raw",
                Ne = 85,
                Re = t => bt(t),
                Te = t => bt(t),
                Ue = new TextEncoder,
                De = new TextDecoder,
                ke = "json",
                Be = 512,
                Le = t => Ue.encode(JSON.stringify(t)),
                qe = t => JSON.parse(De.decode(t));
            Symbol.toStringTag, Symbol.for("nodejs.util.inspect.custom");
            Symbol.for("@ipld/js-cid/CID");
            const je = { ...i,
                ...n,
                ...s,
                ...o,
                ...a,
                ...h,
                ...c,
                ...u,
                ...l,
                ...f
            };

            function ze(t, e, r, i) {
                return {
                    name: t,
                    prefix: e,
                    encoder: {
                        name: t,
                        prefix: e,
                        encode: r
                    },
                    decoder: {
                        decode: i
                    }
                }
            }
            const Fe = ze("utf8", "u", (t => "u" + new TextDecoder("utf8").decode(t)), (t => (new TextEncoder).encode(t.substring(1)))),
                He = ze("ascii", "a", (t => {
                    let e = "a";
                    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
                    return e
                }), (t => {
                    const e = mt((t = t.substring(1)).length);
                    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
                    return e
                })),
                Ke = {
                    utf8: Fe,
                    "utf-8": Fe,
                    hex: je.base16,
                    latin1: He,
                    ascii: He,
                    binary: He,
                    ...je
                };

            function Ve(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8";
                const r = Ke[e];
                if (!r) throw new Error(`Unsupported encoding "${e}"`);
                return "utf8" !== e && "utf-8" !== e || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode(`${r.prefix}${t}`) : globalThis.Buffer.from(t, "utf8")
            }

            function $e(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8";
                const r = Ke[e];
                if (!r) throw new Error(`Unsupported encoding "${e}"`);
                return "utf8" !== e && "utf-8" !== e || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.encoder.encode(t).substring(1) : globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8")
            }
            const We = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe",
                    batchFetchMessages: "waku_batchFetchMessages"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe",
                    batchFetchMessages: "irn_batchFetchMessages"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe",
                    batchFetchMessages: "iridium_batchFetchMessages"
                }
            };
            var Ge = r(27256),
                Qe = r(88381).Buffer;
            const Ye = ":";

            function Je(t) {
                const [e, r] = t.split(Ye);
                return {
                    namespace: e,
                    reference: r
                }
            }

            function Xe(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                const r = [];
                return Object.keys(t).forEach((i => {
                    if (e.length && !e.includes(i)) return;
                    const n = t[i];
                    r.push(...n.accounts)
                })), r
            }

            function Ze(t, e) {
                return t.includes(":") ? [t] : e.chains || []
            }
            var tr = Object.defineProperty,
                er = Object.getOwnPropertySymbols,
                rr = Object.prototype.hasOwnProperty,
                ir = Object.prototype.propertyIsEnumerable,
                nr = (t, e, r) => e in t ? tr(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                sr = (t, e) => {
                    for (var r in e || (e = {})) rr.call(e, r) && nr(t, r, e[r]);
                    if (er)
                        for (var r of er(e)) ir.call(e, r) && nr(t, r, e[r]);
                    return t
                };
            const or = "ReactNative",
                ar = {
                    reactNative: "react-native",
                    node: "node",
                    browser: "browser",
                    unknown: "unknown"
                },
                hr = "js";

            function cr() {
                return typeof Ge < "u" && typeof Ge.versions < "u" && typeof Ge.versions.node < "u"
            }

            function ur() {
                return !(0, ht.getDocument)() && !!(0, ht.getNavigator)() && navigator.product === or
            }

            function lr() {
                return !cr() && !!(0, ht.getNavigator)() && !!(0, ht.getDocument)()
            }

            function fr() {
                return ur() ? ar.reactNative : cr() ? ar.node : lr() ? ar.browser : ar.unknown
            }

            function dr(t, e, i) {
                const n = function() {
                        if (fr() === ar.reactNative && typeof r.g < "u" && typeof(null == r.g ? void 0 : r.g.Platform) < "u") {
                            const {
                                OS: t,
                                Version: e
                            } = r.g.Platform;
                            return [t, e].join("-")
                        }
                        const t = nt();
                        if (null === t) return "unknown";
                        const e = t.os ? t.os.replace(" ", "").toLowerCase() : "unknown";
                        return "browser" === t.type ? [e, t.name, t.version].join("-") : [e, t.version].join("-")
                    }(),
                    s = function() {
                        var t;
                        const e = fr();
                        return e === ar.browser ? [e, (null == (t = (0, ht.getLocation)()) ? void 0 : t.host) || "unknown"].join(":") : e
                    }();
                return [
                    [t, e].join("-"), [hr, i].join("-"), n, s
                ].join("/")
            }

            function pr(t) {
                let {
                    protocol: e,
                    version: r,
                    relayUrl: i,
                    sdkVersion: n,
                    auth: s,
                    projectId: o,
                    useOnCloseEvent: a,
                    bundleId: h
                } = t;
                const c = i.split("?"),
                    u = {
                        auth: s,
                        ua: dr(e, r, n),
                        projectId: o,
                        useOnCloseEvent: a || void 0,
                        origin: h || void 0
                    },
                    l = function(t, e) {
                        let r = ut.parse(t);
                        return r = sr(sr({}, r), e), ut.stringify(r)
                    }(c[1] || "", u);
                return c[0] + "?" + l
            }

            function gr(t, e) {
                return t.filter((t => e.includes(t))).length === t.length
            }

            function mr(t) {
                return Object.fromEntries(t.entries())
            }

            function yr(t) {
                return new Map(Object.entries(t))
            }

            function vr() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : at.FIVE_MINUTES,
                    e = arguments.length > 1 ? arguments[1] : void 0;
                const r = (0, at.toMiliseconds)(t || at.FIVE_MINUTES);
                let i, n, s;
                return {
                    resolve: t => {
                        s && i && (clearTimeout(s), i(t))
                    },
                    reject: t => {
                        s && n && (clearTimeout(s), n(t))
                    },
                    done: () => new Promise(((t, o) => {
                        s = setTimeout((() => {
                            o(new Error(e))
                        }), r), i = t, n = o
                    }))
                }
            }

            function wr(t, e, r) {
                return new Promise((async (i, n) => {
                    const s = setTimeout((() => n(new Error(r))), e);
                    try {
                        i(await t)
                    } catch (o) {
                        n(o)
                    }
                    clearTimeout(s)
                }))
            }

            function br(t, e) {
                if ("string" == typeof e && e.startsWith(`${t}:`)) return e;
                if ("topic" === t.toLowerCase()) {
                    if ("string" != typeof e) throw new Error('Value must be "string" for expirer target type: topic');
                    return `topic:${e}`
                }
                if ("id" === t.toLowerCase()) {
                    if ("number" != typeof e) throw new Error('Value must be "number" for expirer target type: id');
                    return `id:${e}`
                }
                throw new Error(`Unknown expirer target type: ${t}`)
            }

            function _r(t) {
                const [e, r] = t.split(":"), i = {
                    id: void 0,
                    topic: void 0
                };
                if ("topic" === e && "string" == typeof r) i.topic = r;
                else {
                    if ("id" !== e || !Number.isInteger(Number(r))) throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${r}`);
                    i.id = Number(r)
                }
                return i
            }

            function Ar(t, e) {
                return (0, at.fromMiliseconds)((e || Date.now()) + (0, at.toMiliseconds)(t))
            }

            function Er(t) {
                return Date.now() >= (0, at.toMiliseconds)(t)
            }

            function Sr(t, e) {
                return `${t}${e?`:${e}`:""}`
            }

            function Ir() {
                return [...new Set([...arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], ...arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []])]
            }
            var Pr = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof r.g < "u" ? r.g : typeof self < "u" ? self : {};
            var Mr = {
                exports: {}
            };
            ! function(t) {
                ! function() {
                    var e = "input is invalid type",
                        r = "object" == typeof window,
                        i = r ? window : {};
                    i.JS_SHA3_NO_WINDOW && (r = !1);
                    var n = !r && "object" == typeof self;
                    !i.JS_SHA3_NO_NODE_JS && "object" == typeof Ge && Ge.versions && Ge.versions.node ? i = Pr : n && (i = self);
                    var s = !i.JS_SHA3_NO_COMMON_JS && t.exports,
                        o = !i.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u",
                        a = "0123456789abcdef".split(""),
                        h = [4, 1024, 262144, 67108864],
                        c = [0, 8, 16, 24],
                        u = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
                        l = [224, 256, 384, 512],
                        f = [128, 256],
                        d = ["hex", "buffer", "arrayBuffer", "array", "digest"],
                        p = {
                            128: 168,
                            256: 136
                        };
                    (i.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(t) {
                        return "[object Array]" === Object.prototype.toString.call(t)
                    }), o && (i.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(t) {
                        return "object" == typeof t && t.buffer && t.buffer.constructor === ArrayBuffer
                    });
                    for (var g = function(t, e, r) {
                            return function(i) {
                                return new C(t, e, t).update(i)[r]()
                            }
                        }, m = function(t, e, r) {
                            return function(i, n) {
                                return new C(t, e, n).update(i)[r]()
                            }
                        }, y = function(t, e, r) {
                            return function(e, i, n, s) {
                                return A["cshake" + t].update(e, i, n, s)[r]()
                            }
                        }, v = function(t, e, r) {
                            return function(e, i, n, s) {
                                return A["kmac" + t].update(e, i, n, s)[r]()
                            }
                        }, w = function(t, e, r, i) {
                            for (var n = 0; n < d.length; ++n) {
                                var s = d[n];
                                t[s] = e(r, i, s)
                            }
                            return t
                        }, b = function(t, e) {
                            var r = g(t, e, "hex");
                            return r.create = function() {
                                return new C(t, e, t)
                            }, r.update = function(t) {
                                return r.create().update(t)
                            }, w(r, g, t, e)
                        }, _ = [{
                            name: "keccak",
                            padding: [1, 256, 65536, 16777216],
                            bits: l,
                            createMethod: b
                        }, {
                            name: "sha3",
                            padding: [6, 1536, 393216, 100663296],
                            bits: l,
                            createMethod: b
                        }, {
                            name: "shake",
                            padding: [31, 7936, 2031616, 520093696],
                            bits: f,
                            createMethod: function(t, e) {
                                var r = m(t, e, "hex");
                                return r.create = function(r) {
                                    return new C(t, e, r)
                                }, r.update = function(t, e) {
                                    return r.create(e).update(t)
                                }, w(r, m, t, e)
                            }
                        }, {
                            name: "cshake",
                            padding: h,
                            bits: f,
                            createMethod: function(t, e) {
                                var r = p[t],
                                    i = y(t, 0, "hex");
                                return i.create = function(i, n, s) {
                                    return n || s ? new C(t, e, i).bytepad([n, s], r) : A["shake" + t].create(i)
                                }, i.update = function(t, e, r, n) {
                                    return i.create(e, r, n).update(t)
                                }, w(i, y, t, e)
                            }
                        }, {
                            name: "kmac",
                            padding: h,
                            bits: f,
                            createMethod: function(t, e) {
                                var r = p[t],
                                    i = v(t, 0, "hex");
                                return i.create = function(i, n, s) {
                                    return new N(t, e, n).bytepad(["KMAC", s], r).bytepad([i], r)
                                }, i.update = function(t, e, r, n) {
                                    return i.create(t, r, n).update(e)
                                }, w(i, v, t, e)
                            }
                        }], A = {}, E = [], S = 0; S < _.length; ++S)
                        for (var I = _[S], P = I.bits, M = 0; M < P.length; ++M) {
                            var x = I.name + "_" + P[M];
                            if (E.push(x), A[x] = I.createMethod(P[M], I.padding), "sha3" !== I.name) {
                                var O = I.name + P[M];
                                E.push(O), A[O] = A[x]
                            }
                        }

                    function C(t, e, r) {
                        this.blocks = [], this.s = [], this.padding = e, this.outputBits = r, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (t << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r >> 5, this.extraBytes = (31 & r) >> 3;
                        for (var i = 0; i < 50; ++i) this.s[i] = 0
                    }

                    function N(t, e, r) {
                        C.call(this, t, e, r)
                    }
                    C.prototype.update = function(t) {
                        if (this.finalized) throw new Error("finalize already called");
                        var r, i = typeof t;
                        if ("string" !== i) {
                            if ("object" !== i) throw new Error(e);
                            if (null === t) throw new Error(e);
                            if (o && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                            else if (!Array.isArray(t) && (!o || !ArrayBuffer.isView(t))) throw new Error(e);
                            r = !0
                        }
                        for (var n, s, a = this.blocks, h = this.byteCount, u = t.length, l = this.blockCount, f = 0, d = this.s; f < u;) {
                            if (this.reset)
                                for (this.reset = !1, a[0] = this.block, n = 1; n < l + 1; ++n) a[n] = 0;
                            if (r)
                                for (n = this.start; f < u && n < h; ++f) a[n >> 2] |= t[f] << c[3 & n++];
                            else
                                for (n = this.start; f < u && n < h; ++f)(s = t.charCodeAt(f)) < 128 ? a[n >> 2] |= s << c[3 & n++] : s < 2048 ? (a[n >> 2] |= (192 | s >> 6) << c[3 & n++], a[n >> 2] |= (128 | 63 & s) << c[3 & n++]) : s < 55296 || s >= 57344 ? (a[n >> 2] |= (224 | s >> 12) << c[3 & n++], a[n >> 2] |= (128 | s >> 6 & 63) << c[3 & n++], a[n >> 2] |= (128 | 63 & s) << c[3 & n++]) : (s = 65536 + ((1023 & s) << 10 | 1023 & t.charCodeAt(++f)), a[n >> 2] |= (240 | s >> 18) << c[3 & n++], a[n >> 2] |= (128 | s >> 12 & 63) << c[3 & n++], a[n >> 2] |= (128 | s >> 6 & 63) << c[3 & n++], a[n >> 2] |= (128 | 63 & s) << c[3 & n++]);
                            if (this.lastByteIndex = n, n >= h) {
                                for (this.start = n - h, this.block = a[l], n = 0; n < l; ++n) d[n] ^= a[n];
                                R(d), this.reset = !0
                            } else this.start = n
                        }
                        return this
                    }, C.prototype.encode = function(t, e) {
                        var r = 255 & t,
                            i = 1,
                            n = [r];
                        for (r = 255 & (t >>= 8); r > 0;) n.unshift(r), r = 255 & (t >>= 8), ++i;
                        return e ? n.push(i) : n.unshift(i), this.update(n), n.length
                    }, C.prototype.encodeString = function(t) {
                        var r, i = typeof t;
                        if ("string" !== i) {
                            if ("object" !== i) throw new Error(e);
                            if (null === t) throw new Error(e);
                            if (o && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                            else if (!Array.isArray(t) && (!o || !ArrayBuffer.isView(t))) throw new Error(e);
                            r = !0
                        }
                        var n = 0,
                            s = t.length;
                        if (r) n = s;
                        else
                            for (var a = 0; a < t.length; ++a) {
                                var h = t.charCodeAt(a);
                                h < 128 ? n += 1 : h < 2048 ? n += 2 : h < 55296 || h >= 57344 ? n += 3 : (h = 65536 + ((1023 & h) << 10 | 1023 & t.charCodeAt(++a)), n += 4)
                            }
                        return n += this.encode(8 * n), this.update(t), n
                    }, C.prototype.bytepad = function(t, e) {
                        for (var r = this.encode(e), i = 0; i < t.length; ++i) r += this.encodeString(t[i]);
                        var n = e - r % e,
                            s = [];
                        return s.length = n, this.update(s), this
                    }, C.prototype.finalize = function() {
                        if (!this.finalized) {
                            this.finalized = !0;
                            var t = this.blocks,
                                e = this.lastByteIndex,
                                r = this.blockCount,
                                i = this.s;
                            if (t[e >> 2] |= this.padding[3 & e], this.lastByteIndex === this.byteCount)
                                for (t[0] = t[r], e = 1; e < r + 1; ++e) t[e] = 0;
                            for (t[r - 1] |= 2147483648, e = 0; e < r; ++e) i[e] ^= t[e];
                            R(i)
                        }
                    }, C.prototype.toString = C.prototype.hex = function() {
                        this.finalize();
                        for (var t, e = this.blockCount, r = this.s, i = this.outputBlocks, n = this.extraBytes, s = 0, o = 0, h = ""; o < i;) {
                            for (s = 0; s < e && o < i; ++s, ++o) t = r[s], h += a[t >> 4 & 15] + a[15 & t] + a[t >> 12 & 15] + a[t >> 8 & 15] + a[t >> 20 & 15] + a[t >> 16 & 15] + a[t >> 28 & 15] + a[t >> 24 & 15];
                            o % e === 0 && (R(r), s = 0)
                        }
                        return n && (t = r[s], h += a[t >> 4 & 15] + a[15 & t], n > 1 && (h += a[t >> 12 & 15] + a[t >> 8 & 15]), n > 2 && (h += a[t >> 20 & 15] + a[t >> 16 & 15])), h
                    }, C.prototype.arrayBuffer = function() {
                        this.finalize();
                        var t, e = this.blockCount,
                            r = this.s,
                            i = this.outputBlocks,
                            n = this.extraBytes,
                            s = 0,
                            o = 0,
                            a = this.outputBits >> 3;
                        t = n ? new ArrayBuffer(i + 1 << 2) : new ArrayBuffer(a);
                        for (var h = new Uint32Array(t); o < i;) {
                            for (s = 0; s < e && o < i; ++s, ++o) h[o] = r[s];
                            o % e === 0 && R(r)
                        }
                        return n && (h[s] = r[s], t = t.slice(0, a)), t
                    }, C.prototype.buffer = C.prototype.arrayBuffer, C.prototype.digest = C.prototype.array = function() {
                        this.finalize();
                        for (var t, e, r = this.blockCount, i = this.s, n = this.outputBlocks, s = this.extraBytes, o = 0, a = 0, h = []; a < n;) {
                            for (o = 0; o < r && a < n; ++o, ++a) t = a << 2, e = i[o], h[t] = 255 & e, h[t + 1] = e >> 8 & 255, h[t + 2] = e >> 16 & 255, h[t + 3] = e >> 24 & 255;
                            a % r === 0 && R(i)
                        }
                        return s && (t = a << 2, e = i[o], h[t] = 255 & e, s > 1 && (h[t + 1] = e >> 8 & 255), s > 2 && (h[t + 2] = e >> 16 & 255)), h
                    }, N.prototype = new C, N.prototype.finalize = function() {
                        return this.encode(this.outputBits, !0), C.prototype.finalize.call(this)
                    };
                    var R = function(t) {
                        var e, r, i, n, s, o, a, h, c, l, f, d, p, g, m, y, v, w, b, _, A, E, S, I, P, M, x, O, C, N, R, T, U, D, k, B, L, q, j, z, F, H, K, V, $, W, G, Q, Y, J, X, Z, tt, et, rt, it, nt, st, ot, at, ht, ct, ut;
                        for (i = 0; i < 48; i += 2) n = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40], s = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41], o = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42], a = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43], h = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44], c = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45], l = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46], f = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47], e = (d = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (o << 1 | a >>> 31), r = (p = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (a << 1 | o >>> 31), t[0] ^= e, t[1] ^= r, t[10] ^= e, t[11] ^= r, t[20] ^= e, t[21] ^= r, t[30] ^= e, t[31] ^= r, t[40] ^= e, t[41] ^= r, e = n ^ (h << 1 | c >>> 31), r = s ^ (c << 1 | h >>> 31), t[2] ^= e, t[3] ^= r, t[12] ^= e, t[13] ^= r, t[22] ^= e, t[23] ^= r, t[32] ^= e, t[33] ^= r, t[42] ^= e, t[43] ^= r, e = o ^ (l << 1 | f >>> 31), r = a ^ (f << 1 | l >>> 31), t[4] ^= e, t[5] ^= r, t[14] ^= e, t[15] ^= r, t[24] ^= e, t[25] ^= r, t[34] ^= e, t[35] ^= r, t[44] ^= e, t[45] ^= r, e = h ^ (d << 1 | p >>> 31), r = c ^ (p << 1 | d >>> 31), t[6] ^= e, t[7] ^= r, t[16] ^= e, t[17] ^= r, t[26] ^= e, t[27] ^= r, t[36] ^= e, t[37] ^= r, t[46] ^= e, t[47] ^= r, e = l ^ (n << 1 | s >>> 31), r = f ^ (s << 1 | n >>> 31), t[8] ^= e, t[9] ^= r, t[18] ^= e, t[19] ^= r, t[28] ^= e, t[29] ^= r, t[38] ^= e, t[39] ^= r, t[48] ^= e, t[49] ^= r, g = t[0], m = t[1], W = t[11] << 4 | t[10] >>> 28, G = t[10] << 4 | t[11] >>> 28, O = t[20] << 3 | t[21] >>> 29, C = t[21] << 3 | t[20] >>> 29, at = t[31] << 9 | t[30] >>> 23, ht = t[30] << 9 | t[31] >>> 23, H = t[40] << 18 | t[41] >>> 14, K = t[41] << 18 | t[40] >>> 14, D = t[2] << 1 | t[3] >>> 31, k = t[3] << 1 | t[2] >>> 31, y = t[13] << 12 | t[12] >>> 20, v = t[12] << 12 | t[13] >>> 20, Q = t[22] << 10 | t[23] >>> 22, Y = t[23] << 10 | t[22] >>> 22, N = t[33] << 13 | t[32] >>> 19, R = t[32] << 13 | t[33] >>> 19, ct = t[42] << 2 | t[43] >>> 30, ut = t[43] << 2 | t[42] >>> 30, et = t[5] << 30 | t[4] >>> 2, rt = t[4] << 30 | t[5] >>> 2, B = t[14] << 6 | t[15] >>> 26, L = t[15] << 6 | t[14] >>> 26, w = t[25] << 11 | t[24] >>> 21, b = t[24] << 11 | t[25] >>> 21, J = t[34] << 15 | t[35] >>> 17, X = t[35] << 15 | t[34] >>> 17, T = t[45] << 29 | t[44] >>> 3, U = t[44] << 29 | t[45] >>> 3, I = t[6] << 28 | t[7] >>> 4, P = t[7] << 28 | t[6] >>> 4, it = t[17] << 23 | t[16] >>> 9, nt = t[16] << 23 | t[17] >>> 9, q = t[26] << 25 | t[27] >>> 7, j = t[27] << 25 | t[26] >>> 7, _ = t[36] << 21 | t[37] >>> 11, A = t[37] << 21 | t[36] >>> 11, Z = t[47] << 24 | t[46] >>> 8, tt = t[46] << 24 | t[47] >>> 8, V = t[8] << 27 | t[9] >>> 5, $ = t[9] << 27 | t[8] >>> 5, M = t[18] << 20 | t[19] >>> 12, x = t[19] << 20 | t[18] >>> 12, st = t[29] << 7 | t[28] >>> 25, ot = t[28] << 7 | t[29] >>> 25, z = t[38] << 8 | t[39] >>> 24, F = t[39] << 8 | t[38] >>> 24, E = t[48] << 14 | t[49] >>> 18, S = t[49] << 14 | t[48] >>> 18, t[0] = g ^ ~y & w, t[1] = m ^ ~v & b, t[10] = I ^ ~M & O, t[11] = P ^ ~x & C, t[20] = D ^ ~B & q, t[21] = k ^ ~L & j, t[30] = V ^ ~W & Q, t[31] = $ ^ ~G & Y, t[40] = et ^ ~it & st, t[41] = rt ^ ~nt & ot, t[2] = y ^ ~w & _, t[3] = v ^ ~b & A, t[12] = M ^ ~O & N, t[13] = x ^ ~C & R, t[22] = B ^ ~q & z, t[23] = L ^ ~j & F, t[32] = W ^ ~Q & J, t[33] = G ^ ~Y & X, t[42] = it ^ ~st & at, t[43] = nt ^ ~ot & ht, t[4] = w ^ ~_ & E, t[5] = b ^ ~A & S, t[14] = O ^ ~N & T, t[15] = C ^ ~R & U, t[24] = q ^ ~z & H, t[25] = j ^ ~F & K, t[34] = Q ^ ~J & Z, t[35] = Y ^ ~X & tt, t[44] = st ^ ~at & ct, t[45] = ot ^ ~ht & ut, t[6] = _ ^ ~E & g, t[7] = A ^ ~S & m, t[16] = N ^ ~T & I, t[17] = R ^ ~U & P, t[26] = z ^ ~H & D, t[27] = F ^ ~K & k, t[36] = J ^ ~Z & V, t[37] = X ^ ~tt & $, t[46] = at ^ ~ct & et, t[47] = ht ^ ~ut & rt, t[8] = E ^ ~g & y, t[9] = S ^ ~m & v, t[18] = T ^ ~I & M, t[19] = U ^ ~P & x, t[28] = H ^ ~D & B, t[29] = K ^ ~k & L, t[38] = Z ^ ~V & W, t[39] = tt ^ ~$ & G, t[48] = ct ^ ~et & it, t[49] = ut ^ ~rt & nt, t[0] ^= u[i], t[1] ^= u[i + 1]
                    };
                    if (s) t.exports = A;
                    else
                        for (S = 0; S < E.length; ++S) i[E[S]] = A[E[S]]
                }()
            }(Mr);
            var xr = Mr.exports;
            let Or = !1,
                Cr = !1;
            const Nr = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let Rr = Nr.default,
                Tr = null;
            const Ur = function() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch {
                                t.push(e)
                            }
                        })), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }();
            var Dr, kr;
            ! function(t) {
                t.DEBUG = "DEBUG", t.INFO = "INFO", t.WARNING = "WARNING", t.ERROR = "ERROR", t.OFF = "OFF"
            }(Dr || (Dr = {})),
            function(t) {
                t.UNKNOWN_ERROR = "UNKNOWN_ERROR", t.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", t.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", t.NETWORK_ERROR = "NETWORK_ERROR", t.SERVER_ERROR = "SERVER_ERROR", t.TIMEOUT = "TIMEOUT", t.BUFFER_OVERRUN = "BUFFER_OVERRUN", t.NUMERIC_FAULT = "NUMERIC_FAULT", t.MISSING_NEW = "MISSING_NEW", t.INVALID_ARGUMENT = "INVALID_ARGUMENT", t.MISSING_ARGUMENT = "MISSING_ARGUMENT", t.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", t.CALL_EXCEPTION = "CALL_EXCEPTION", t.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", t.NONCE_EXPIRED = "NONCE_EXPIRED", t.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", t.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", t.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", t.ACTION_REJECTED = "ACTION_REJECTED"
            }(kr || (kr = {}));
            const Br = "0123456789abcdef";
            class Lr {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == Nr[r] && this.throwArgumentError("invalid log level name", "logLevel", t), !(Rr > Nr[r]) && console.log.apply(console, e)
                }
                debug() {
                    for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                    this._log(Lr.levels.DEBUG, e)
                }
                info() {
                    for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                    this._log(Lr.levels.INFO, e)
                }
                warn() {
                    for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                    this._log(Lr.levels.WARNING, e)
                }
                makeError(t, e, r) {
                    if (Cr) return this.makeError("censored error", e, {});
                    e || (e = Lr.errors.UNKNOWN_ERROR), r || (r = {});
                    const i = [];
                    Object.keys(r).forEach((t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += Br[e[t] >> 4], r += Br[15 & e[t]];
                                i.push(t + "=Uint8Array(0x" + r + ")")
                            } else i.push(t + "=" + JSON.stringify(e))
                        } catch {
                            i.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    })), i.push(`code=${e}`), i.push(`version=${this.version}`);
                    const n = t;
                    let s = "";
                    switch (e) {
                        case kr.NUMERIC_FAULT:
                            {
                                s = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        s += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        s += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        s += "-unbound-result"
                                }
                                break
                            }
                        case kr.CALL_EXCEPTION:
                        case kr.INSUFFICIENT_FUNDS:
                        case kr.MISSING_NEW:
                        case kr.NONCE_EXPIRED:
                        case kr.REPLACEMENT_UNDERPRICED:
                        case kr.TRANSACTION_REPLACED:
                        case kr.UNPREDICTABLE_GAS_LIMIT:
                            s = e
                    }
                    s && (t += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (t += " (" + i.join(", ") + ")");
                    const o = new Error(t);
                    return o.reason = n, o.code = e, Object.keys(r).forEach((function(t) {
                        o[t] = r[t]
                    })), o
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, Lr.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, i) {
                    t || this.throwError(e, r, i)
                }
                assertArgument(t, e, r, i) {
                    t || this.throwArgumentError(e, r, i)
                }
                checkNormalize(t) {
                    Ur && this.throwError("platform missing String.prototype.normalize", Lr.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: Ur
                    })
                }
                checkSafeUint53(t, e) {
                    "number" == typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, Lr.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, Lr.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, Lr.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, Lr.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    (t === Object || null == t) && this.throwError("missing new", Lr.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", Lr.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : (t === Object || null == t) && this.throwError("missing new", Lr.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return Tr || (Tr = new Lr("logger/5.7.0")), Tr
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", Lr.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), Or) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", Lr.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    Cr = !!t, Or = !!e
                }
                static setLogLevel(t) {
                    const e = Nr[t.toLowerCase()];
                    null != e ? Rr = e : Lr.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new Lr(t)
                }
            }
            Lr.errors = kr, Lr.levels = Dr;
            const qr = new Lr("bytes/5.7.0");

            function jr(t) {
                return !!t.toHexString
            }

            function zr(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return zr(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function Fr(t) {
                return "number" == typeof t && t == t && t % 1 === 0
            }

            function Hr(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" == typeof t || !Fr(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!Fr(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function Kr(t, e) {
                if (e || (e = {}), "number" == typeof t) {
                    qr.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    for (; t;) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), zr(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), jr(t) && (t = t.toHexString()), Vr(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : qr.throwArgumentError("hex data is odd-length", "value", t));
                    const i = [];
                    for (let t = 0; t < r.length; t += 2) i.push(parseInt(r.substring(t, t + 2), 16));
                    return zr(new Uint8Array(i))
                }
                return Hr(t) ? zr(new Uint8Array(t)) : qr.throwArgumentError("invalid arrayify value", "value", t)
            }

            function Vr(t, e) {
                return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/) || e && t.length !== 2 + 2 * e)
            }
            const $r = "0123456789abcdef";

            function Wr(t, e) {
                if (e || (e = {}), "number" == typeof t) {
                    qr.checkSafeUint53(t, "invalid hexlify value");
                    let e = "";
                    for (; t;) e = $r[15 & t] + e, t = Math.floor(t / 16);
                    return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
                }
                if ("bigint" == typeof t) return (t = t.toString(16)).length % 2 ? "0x0" + t : "0x" + t;
                if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), jr(t)) return t.toHexString();
                if (Vr(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : qr.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
                if (Hr(t)) {
                    let e = "0x";
                    for (let r = 0; r < t.length; r++) {
                        let i = t[r];
                        e += $r[(240 & i) >> 4] + $r[15 & i]
                    }
                    return e
                }
                return qr.throwArgumentError("invalid hexlify value", "value", t)
            }

            function Gr(t, e, r) {
                return "string" != typeof t ? t = Wr(t) : (!Vr(t) || t.length % 2) && qr.throwArgumentError("invalid hexData", "value", t), e = 2 + 2 * e, null != r ? "0x" + t.substring(e, 2 + 2 * r) : "0x" + t.substring(e)
            }

            function Qr(t, e) {
                for ("string" != typeof t ? t = Wr(t) : Vr(t) || qr.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && qr.throwArgumentError("value out of range", "value", arguments[1]); t.length < 2 * e + 2;) t = "0x0" + t.substring(2);
                return t
            }

            function Yr(t) {
                const e = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (function(t) {
                        return Vr(t) && !(t.length % 2) || Hr(t)
                    }(t)) {
                    let r = Kr(t);
                    64 === r.length ? (e.v = 27 + (r[32] >> 7), r[32] &= 127, e.r = Wr(r.slice(0, 32)), e.s = Wr(r.slice(32, 64))) : 65 === r.length ? (e.r = Wr(r.slice(0, 32)), e.s = Wr(r.slice(32, 64)), e.v = r[64]) : qr.throwArgumentError("invalid signature string", "signature", t), e.v < 27 && (0 === e.v || 1 === e.v ? e.v += 27 : qr.throwArgumentError("signature invalid v byte", "signature", t)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (r[32] |= 128), e._vs = Wr(r.slice(32, 64))
                } else {
                    if (e.r = t.r, e.s = t.s, e.v = t.v, e.recoveryParam = t.recoveryParam, e._vs = t._vs, null != e._vs) {
                        const r = function(t, e) {
                            (t = Kr(t)).length > e && qr.throwArgumentError("value out of range", "value", arguments[0]);
                            const r = new Uint8Array(e);
                            return r.set(t, e - t.length), zr(r)
                        }(Kr(e._vs), 32);
                        e._vs = Wr(r);
                        const i = r[0] >= 128 ? 1 : 0;
                        null == e.recoveryParam ? e.recoveryParam = i : e.recoveryParam !== i && qr.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t), r[0] &= 127;
                        const n = Wr(r);
                        null == e.s ? e.s = n : e.s !== n && qr.throwArgumentError("signature v mismatch _vs", "signature", t)
                    }
                    if (null == e.recoveryParam) null == e.v ? qr.throwArgumentError("signature missing v and recoveryParam", "signature", t) : 0 === e.v || 1 === e.v ? e.recoveryParam = e.v : e.recoveryParam = 1 - e.v % 2;
                    else if (null == e.v) e.v = 27 + e.recoveryParam;
                    else {
                        const r = 0 === e.v || 1 === e.v ? e.v : 1 - e.v % 2;
                        e.recoveryParam !== r && qr.throwArgumentError("signature recoveryParam mismatch v", "signature", t)
                    }
                    null != e.r && Vr(e.r) ? e.r = Qr(e.r, 32) : qr.throwArgumentError("signature missing or invalid r", "signature", t), null != e.s && Vr(e.s) ? e.s = Qr(e.s, 32) : qr.throwArgumentError("signature missing or invalid s", "signature", t);
                    const r = Kr(e.s);
                    r[0] >= 128 && qr.throwArgumentError("signature s out of range", "signature", t), e.recoveryParam && (r[0] |= 128);
                    const i = Wr(r);
                    e._vs && (Vr(e._vs) || qr.throwArgumentError("signature invalid _vs", "signature", t), e._vs = Qr(e._vs, 32)), null == e._vs ? e._vs = i : e._vs !== i && qr.throwArgumentError("signature _vs mismatch v and s", "signature", t)
                }
                return e.yParityAndS = e._vs, e.compact = e.r + e.yParityAndS.substring(2), e
            }

            function Jr(t) {
                return "0x" + xr.keccak_256(Kr(t))
            }
            var Xr = {
                    exports: {}
                },
                Zr = function(t) {
                    var e = t.default;
                    if ("function" == typeof e) {
                        var r = function() {
                            return e.apply(this, arguments)
                        };
                        r.prototype = e.prototype
                    } else r = {};
                    return Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), Object.keys(t).forEach((function(e) {
                        var i = Object.getOwnPropertyDescriptor(t, e);
                        Object.defineProperty(r, e, i.get ? i : {
                            enumerable: !0,
                            get: function() {
                                return t[e]
                            }
                        })
                    })), r
                }(Object.freeze({
                    __proto__: null,
                    default: {}
                }));
            ! function(t) {
                ! function(t, e) {
                    function r(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function n(t, e, r) {
                        if (n.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && (("le" === e || "be" === e) && (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var s;
                    "object" == typeof t ? t.exports = n : e.BN = n, n.BN = n, n.wordSize = 26;
                    try {
                        s = typeof window < "u" && typeof window.Buffer < "u" ? window.Buffer : Zr.Buffer
                    } catch {}

                    function o(t, e) {
                        var i = t.charCodeAt(e);
                        return i >= 48 && i <= 57 ? i - 48 : i >= 65 && i <= 70 ? i - 55 : i >= 97 && i <= 102 ? i - 87 : void r(!1, "Invalid character in " + t)
                    }

                    function a(t, e, r) {
                        var i = o(t, r);
                        return r - 1 >= e && (i |= o(t, r - 1) << 4), i
                    }

                    function h(t, e, i, n) {
                        for (var s = 0, o = 0, a = Math.min(t.length, i), h = e; h < a; h++) {
                            var c = t.charCodeAt(h) - 48;
                            s *= n, o = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, r(c >= 0 && o < n, "Invalid character"), s += o
                        }
                        return s
                    }

                    function c(t, e) {
                        t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red
                    }
                    if (n.isBN = function(t) {
                            return t instanceof n || null !== t && "object" == typeof t && t.constructor.wordSize === n.wordSize && Array.isArray(t.words)
                        }, n.max = function(t, e) {
                            return t.cmp(e) > 0 ? t : e
                        }, n.min = function(t, e) {
                            return t.cmp(e) < 0 ? t : e
                        }, n.prototype._init = function(t, e, i) {
                            if ("number" == typeof t) return this._initNumber(t, e, i);
                            if ("object" == typeof t) return this._initArray(t, e, i);
                            "hex" === e && (e = 16), r(e === (0 | e) && e >= 2 && e <= 36);
                            var n = 0;
                            "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, i) : (this._parseBase(t, e, n), "le" === i && this._initArray(this.toArray(), e, i)))
                        }, n.prototype._initNumber = function(t, e, i) {
                            t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (r(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === i && this._initArray(this.toArray(), e, i)
                        }, n.prototype._initArray = function(t, e, i) {
                            if (r("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                            this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                            for (var n = 0; n < this.length; n++) this.words[n] = 0;
                            var s, o, a = 0;
                            if ("be" === i)
                                for (n = t.length - 1, s = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                            else if ("le" === i)
                                for (n = 0, s = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                            return this._strip()
                        }, n.prototype._parseHex = function(t, e, r) {
                            this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                            for (var i = 0; i < this.length; i++) this.words[i] = 0;
                            var n, s = 0,
                                o = 0;
                            if ("be" === r)
                                for (i = t.length - 1; i >= e; i -= 2) n = a(t, e, i) << s, this.words[o] |= 67108863 & n, s >= 18 ? (s -= 18, o += 1, this.words[o] |= n >>> 26) : s += 8;
                            else
                                for (i = (t.length - e) % 2 === 0 ? e + 1 : e; i < t.length; i += 2) n = a(t, e, i) << s, this.words[o] |= 67108863 & n, s >= 18 ? (s -= 18, o += 1, this.words[o] |= n >>> 26) : s += 8;
                            this._strip()
                        }, n.prototype._parseBase = function(t, e, r) {
                            this.words = [0], this.length = 1;
                            for (var i = 0, n = 1; n <= 67108863; n *= e) i++;
                            i--, n = n / e | 0;
                            for (var s = t.length - r, o = s % i, a = Math.min(s, s - o) + r, c = 0, u = r; u < a; u += i) c = h(t, u, u + i, e), this.imuln(n), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                            if (0 !== o) {
                                var l = 1;
                                for (c = h(t, u, t.length, e), u = 0; u < o; u++) l *= e;
                                this.imuln(l), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c)
                            }
                            this._strip()
                        }, n.prototype.copy = function(t) {
                            t.words = new Array(this.length);
                            for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                            t.length = this.length, t.negative = this.negative, t.red = this.red
                        }, n.prototype._move = function(t) {
                            c(t, this)
                        }, n.prototype.clone = function() {
                            var t = new n(null);
                            return this.copy(t), t
                        }, n.prototype._expand = function(t) {
                            for (; this.length < t;) this.words[this.length++] = 0;
                            return this
                        }, n.prototype._strip = function() {
                            for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                            return this._normSign()
                        }, n.prototype._normSign = function() {
                            return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                        }, typeof Symbol < "u" && "function" == typeof Symbol.for) try {
                        n.prototype[Symbol.for("nodejs.util.inspect.custom")] = u
                    } catch {
                        n.prototype.inspect = u
                    } else n.prototype.inspect = u;

                    function u() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    }
                    var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                    n.prototype.toString = function(t, e) {
                        var i;
                        if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                            i = "";
                            for (var n = 0, s = 0, o = 0; o < this.length; o++) {
                                var a = this.words[o],
                                    h = (16777215 & (a << n | s)).toString(16);
                                s = a >>> 24 - n & 16777215, (n += 2) >= 26 && (n -= 26, o--), i = 0 !== s || o !== this.length - 1 ? l[6 - h.length] + h + i : h + i
                            }
                            for (0 !== s && (i = s.toString(16) + i); i.length % e !== 0;) i = "0" + i;
                            return 0 !== this.negative && (i = "-" + i), i
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var c = f[t],
                                u = d[t];
                            i = "";
                            var p = this.clone();
                            for (p.negative = 0; !p.isZero();) {
                                var g = p.modrn(u).toString(t);
                                i = (p = p.idivn(u)).isZero() ? g + i : l[c - g.length] + g + i
                            }
                            for (this.isZero() && (i = "0" + i); i.length % e !== 0;) i = "0" + i;
                            return 0 !== this.negative && (i = "-" + i), i
                        }
                        r(!1, "Base should be between 2 and 36")
                    }, n.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, n.prototype.toJSON = function() {
                        return this.toString(16, 2)
                    }, s && (n.prototype.toBuffer = function(t, e) {
                        return this.toArrayLike(s, t, e)
                    }), n.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    };

                    function p(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var i = t.length + e.length | 0;
                        r.length = i, i = i - 1 | 0;
                        var n = 0 | t.words[0],
                            s = 0 | e.words[0],
                            o = n * s,
                            a = 67108863 & o,
                            h = o / 67108864 | 0;
                        r.words[0] = a;
                        for (var c = 1; c < i; c++) {
                            for (var u = h >>> 26, l = 67108863 & h, f = Math.min(c, e.length - 1), d = Math.max(0, c - t.length + 1); d <= f; d++) {
                                var p = c - d | 0;
                                u += (o = (n = 0 | t.words[p]) * (s = 0 | e.words[d]) + l) / 67108864 | 0, l = 67108863 & o
                            }
                            r.words[c] = 0 | l, h = 0 | u
                        }
                        return 0 !== h ? r.words[c] = 0 | h : r.length--, r._strip()
                    }
                    n.prototype.toArrayLike = function(t, e, i) {
                        this._strip();
                        var n = this.byteLength(),
                            s = i || Math.max(1, n);
                        r(n <= s, "byte array longer than desired length"), r(s > 0, "Requested array length <= 0");
                        var o = function(t, e) {
                            return t.allocUnsafe ? t.allocUnsafe(e) : new t(e)
                        }(t, s);
                        return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](o, n), o
                    }, n.prototype._toArrayLikeLE = function(t, e) {
                        for (var r = 0, i = 0, n = 0, s = 0; n < this.length; n++) {
                            var o = this.words[n] << s | i;
                            t[r++] = 255 & o, r < t.length && (t[r++] = o >> 8 & 255), r < t.length && (t[r++] = o >> 16 & 255), 6 === s ? (r < t.length && (t[r++] = o >> 24 & 255), i = 0, s = 0) : (i = o >>> 24, s += 2)
                        }
                        if (r < t.length)
                            for (t[r++] = i; r < t.length;) t[r++] = 0
                    }, n.prototype._toArrayLikeBE = function(t, e) {
                        for (var r = t.length - 1, i = 0, n = 0, s = 0; n < this.length; n++) {
                            var o = this.words[n] << s | i;
                            t[r--] = 255 & o, r >= 0 && (t[r--] = o >> 8 & 255), r >= 0 && (t[r--] = o >> 16 & 255), 6 === s ? (r >= 0 && (t[r--] = o >> 24 & 255), i = 0, s = 0) : (i = o >>> 24, s += 2)
                        }
                        if (r >= 0)
                            for (t[r--] = i; r >= 0;) t[r--] = 0
                    }, Math.clz32 ? n.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : n.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, n.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 8191 & e || (r += 13, e >>>= 13), 127 & e || (r += 7, e >>>= 7), 15 & e || (r += 4, e >>>= 4), 3 & e || (r += 2, e >>>= 2), 1 & e || r++, r
                    }, n.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, n.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, n.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, n.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, n.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, n.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, n.prototype.neg = function() {
                        return this.clone().ineg()
                    }, n.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, n.prototype.iuor = function(t) {
                        for (; this.length < t.length;) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this._strip()
                    }, n.prototype.ior = function(t) {
                        return r(0 === (this.negative | t.negative)), this.iuor(t)
                    }, n.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, n.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, n.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this._strip()
                    }, n.prototype.iand = function(t) {
                        return r(0 === (this.negative | t.negative)), this.iuand(t)
                    }, n.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, n.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, n.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var i = 0; i < r.length; i++) this.words[i] = e.words[i] ^ r.words[i];
                        if (this !== e)
                            for (; i < e.length; i++) this.words[i] = e.words[i];
                        return this.length = e.length, this._strip()
                    }, n.prototype.ixor = function(t) {
                        return r(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, n.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, n.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, n.prototype.inotn = function(t) {
                        r("number" == typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            i = t % 26;
                        this._expand(e), i > 0 && e--;
                        for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                        return i > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - i), this._strip()
                    }, n.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, n.prototype.setn = function(t, e) {
                        r("number" == typeof t && t >= 0);
                        var i = t / 26 | 0,
                            n = t % 26;
                        return this._expand(i + 1), this.words[i] = e ? this.words[i] | 1 << n : this.words[i] & ~(1 << n), this._strip()
                    }, n.prototype.iadd = function(t) {
                        var e, r, i;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, i = t) : (r = t, i = this);
                        for (var n = 0, s = 0; s < i.length; s++) e = (0 | r.words[s]) + (0 | i.words[s]) + n, this.words[s] = 67108863 & e, n = e >>> 26;
                        for (; 0 !== n && s < r.length; s++) e = (0 | r.words[s]) + n, this.words[s] = 67108863 & e, n = e >>> 26;
                        if (this.length = r.length, 0 !== n) this.words[this.length] = n, this.length++;
                        else if (r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this
                    }, n.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, n.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, i, n = this.cmp(t);
                        if (0 === n) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        n > 0 ? (r = this, i = t) : (r = t, i = this);
                        for (var s = 0, o = 0; o < i.length; o++) s = (e = (0 | r.words[o]) - (0 | i.words[o]) + s) >> 26, this.words[o] = 67108863 & e;
                        for (; 0 !== s && o < r.length; o++) s = (e = (0 | r.words[o]) + s) >> 26, this.words[o] = 67108863 & e;
                        if (0 === s && o < r.length && r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this._strip()
                    }, n.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var g = function(t, e, r) {
                        var i, n, s, o = t.words,
                            a = e.words,
                            h = r.words,
                            c = 0,
                            u = 0 | o[0],
                            l = 8191 & u,
                            f = u >>> 13,
                            d = 0 | o[1],
                            p = 8191 & d,
                            g = d >>> 13,
                            m = 0 | o[2],
                            y = 8191 & m,
                            v = m >>> 13,
                            w = 0 | o[3],
                            b = 8191 & w,
                            _ = w >>> 13,
                            A = 0 | o[4],
                            E = 8191 & A,
                            S = A >>> 13,
                            I = 0 | o[5],
                            P = 8191 & I,
                            M = I >>> 13,
                            x = 0 | o[6],
                            O = 8191 & x,
                            C = x >>> 13,
                            N = 0 | o[7],
                            R = 8191 & N,
                            T = N >>> 13,
                            U = 0 | o[8],
                            D = 8191 & U,
                            k = U >>> 13,
                            B = 0 | o[9],
                            L = 8191 & B,
                            q = B >>> 13,
                            j = 0 | a[0],
                            z = 8191 & j,
                            F = j >>> 13,
                            H = 0 | a[1],
                            K = 8191 & H,
                            V = H >>> 13,
                            $ = 0 | a[2],
                            W = 8191 & $,
                            G = $ >>> 13,
                            Q = 0 | a[3],
                            Y = 8191 & Q,
                            J = Q >>> 13,
                            X = 0 | a[4],
                            Z = 8191 & X,
                            tt = X >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            it = et >>> 13,
                            nt = 0 | a[6],
                            st = 8191 & nt,
                            ot = nt >>> 13,
                            at = 0 | a[7],
                            ht = 8191 & at,
                            ct = at >>> 13,
                            ut = 0 | a[8],
                            lt = 8191 & ut,
                            ft = ut >>> 13,
                            dt = 0 | a[9],
                            pt = 8191 & dt,
                            gt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19;
                        var mt = (c + (i = Math.imul(l, z)) | 0) + ((8191 & (n = (n = Math.imul(l, F)) + Math.imul(f, z) | 0)) << 13) | 0;
                        c = ((s = Math.imul(f, F)) + (n >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, i = Math.imul(p, z), n = (n = Math.imul(p, F)) + Math.imul(g, z) | 0, s = Math.imul(g, F);
                        var yt = (c + (i = i + Math.imul(l, K) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, V) | 0) + Math.imul(f, K) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, V) | 0) + (n >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, i = Math.imul(y, z), n = (n = Math.imul(y, F)) + Math.imul(v, z) | 0, s = Math.imul(v, F), i = i + Math.imul(p, K) | 0, n = (n = n + Math.imul(p, V) | 0) + Math.imul(g, K) | 0, s = s + Math.imul(g, V) | 0;
                        var vt = (c + (i = i + Math.imul(l, W) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, G) | 0) + Math.imul(f, W) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, G) | 0) + (n >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, i = Math.imul(b, z), n = (n = Math.imul(b, F)) + Math.imul(_, z) | 0, s = Math.imul(_, F), i = i + Math.imul(y, K) | 0, n = (n = n + Math.imul(y, V) | 0) + Math.imul(v, K) | 0, s = s + Math.imul(v, V) | 0, i = i + Math.imul(p, W) | 0, n = (n = n + Math.imul(p, G) | 0) + Math.imul(g, W) | 0, s = s + Math.imul(g, G) | 0;
                        var wt = (c + (i = i + Math.imul(l, Y) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, J) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, J) | 0) + (n >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, i = Math.imul(E, z), n = (n = Math.imul(E, F)) + Math.imul(S, z) | 0, s = Math.imul(S, F), i = i + Math.imul(b, K) | 0, n = (n = n + Math.imul(b, V) | 0) + Math.imul(_, K) | 0, s = s + Math.imul(_, V) | 0, i = i + Math.imul(y, W) | 0, n = (n = n + Math.imul(y, G) | 0) + Math.imul(v, W) | 0, s = s + Math.imul(v, G) | 0, i = i + Math.imul(p, Y) | 0, n = (n = n + Math.imul(p, J) | 0) + Math.imul(g, Y) | 0, s = s + Math.imul(g, J) | 0;
                        var bt = (c + (i = i + Math.imul(l, Z) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, tt) | 0) + Math.imul(f, Z) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, tt) | 0) + (n >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, i = Math.imul(P, z), n = (n = Math.imul(P, F)) + Math.imul(M, z) | 0, s = Math.imul(M, F), i = i + Math.imul(E, K) | 0, n = (n = n + Math.imul(E, V) | 0) + Math.imul(S, K) | 0, s = s + Math.imul(S, V) | 0, i = i + Math.imul(b, W) | 0, n = (n = n + Math.imul(b, G) | 0) + Math.imul(_, W) | 0, s = s + Math.imul(_, G) | 0, i = i + Math.imul(y, Y) | 0, n = (n = n + Math.imul(y, J) | 0) + Math.imul(v, Y) | 0, s = s + Math.imul(v, J) | 0, i = i + Math.imul(p, Z) | 0, n = (n = n + Math.imul(p, tt) | 0) + Math.imul(g, Z) | 0, s = s + Math.imul(g, tt) | 0;
                        var _t = (c + (i = i + Math.imul(l, rt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, it) | 0) + Math.imul(f, rt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, it) | 0) + (n >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, i = Math.imul(O, z), n = (n = Math.imul(O, F)) + Math.imul(C, z) | 0, s = Math.imul(C, F), i = i + Math.imul(P, K) | 0, n = (n = n + Math.imul(P, V) | 0) + Math.imul(M, K) | 0, s = s + Math.imul(M, V) | 0, i = i + Math.imul(E, W) | 0, n = (n = n + Math.imul(E, G) | 0) + Math.imul(S, W) | 0, s = s + Math.imul(S, G) | 0, i = i + Math.imul(b, Y) | 0, n = (n = n + Math.imul(b, J) | 0) + Math.imul(_, Y) | 0, s = s + Math.imul(_, J) | 0, i = i + Math.imul(y, Z) | 0, n = (n = n + Math.imul(y, tt) | 0) + Math.imul(v, Z) | 0, s = s + Math.imul(v, tt) | 0, i = i + Math.imul(p, rt) | 0, n = (n = n + Math.imul(p, it) | 0) + Math.imul(g, rt) | 0, s = s + Math.imul(g, it) | 0;
                        var At = (c + (i = i + Math.imul(l, st) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, ot) | 0) + Math.imul(f, st) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, ot) | 0) + (n >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, i = Math.imul(R, z), n = (n = Math.imul(R, F)) + Math.imul(T, z) | 0, s = Math.imul(T, F), i = i + Math.imul(O, K) | 0, n = (n = n + Math.imul(O, V) | 0) + Math.imul(C, K) | 0, s = s + Math.imul(C, V) | 0, i = i + Math.imul(P, W) | 0, n = (n = n + Math.imul(P, G) | 0) + Math.imul(M, W) | 0, s = s + Math.imul(M, G) | 0, i = i + Math.imul(E, Y) | 0, n = (n = n + Math.imul(E, J) | 0) + Math.imul(S, Y) | 0, s = s + Math.imul(S, J) | 0, i = i + Math.imul(b, Z) | 0, n = (n = n + Math.imul(b, tt) | 0) + Math.imul(_, Z) | 0, s = s + Math.imul(_, tt) | 0, i = i + Math.imul(y, rt) | 0, n = (n = n + Math.imul(y, it) | 0) + Math.imul(v, rt) | 0, s = s + Math.imul(v, it) | 0, i = i + Math.imul(p, st) | 0, n = (n = n + Math.imul(p, ot) | 0) + Math.imul(g, st) | 0, s = s + Math.imul(g, ot) | 0;
                        var Et = (c + (i = i + Math.imul(l, ht) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, ct) | 0) + Math.imul(f, ht) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, ct) | 0) + (n >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, i = Math.imul(D, z), n = (n = Math.imul(D, F)) + Math.imul(k, z) | 0, s = Math.imul(k, F), i = i + Math.imul(R, K) | 0, n = (n = n + Math.imul(R, V) | 0) + Math.imul(T, K) | 0, s = s + Math.imul(T, V) | 0, i = i + Math.imul(O, W) | 0, n = (n = n + Math.imul(O, G) | 0) + Math.imul(C, W) | 0, s = s + Math.imul(C, G) | 0, i = i + Math.imul(P, Y) | 0, n = (n = n + Math.imul(P, J) | 0) + Math.imul(M, Y) | 0, s = s + Math.imul(M, J) | 0, i = i + Math.imul(E, Z) | 0, n = (n = n + Math.imul(E, tt) | 0) + Math.imul(S, Z) | 0, s = s + Math.imul(S, tt) | 0, i = i + Math.imul(b, rt) | 0, n = (n = n + Math.imul(b, it) | 0) + Math.imul(_, rt) | 0, s = s + Math.imul(_, it) | 0, i = i + Math.imul(y, st) | 0, n = (n = n + Math.imul(y, ot) | 0) + Math.imul(v, st) | 0, s = s + Math.imul(v, ot) | 0, i = i + Math.imul(p, ht) | 0, n = (n = n + Math.imul(p, ct) | 0) + Math.imul(g, ht) | 0, s = s + Math.imul(g, ct) | 0;
                        var St = (c + (i = i + Math.imul(l, lt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, ft) | 0) + Math.imul(f, lt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, ft) | 0) + (n >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, i = Math.imul(L, z), n = (n = Math.imul(L, F)) + Math.imul(q, z) | 0, s = Math.imul(q, F), i = i + Math.imul(D, K) | 0, n = (n = n + Math.imul(D, V) | 0) + Math.imul(k, K) | 0, s = s + Math.imul(k, V) | 0, i = i + Math.imul(R, W) | 0, n = (n = n + Math.imul(R, G) | 0) + Math.imul(T, W) | 0, s = s + Math.imul(T, G) | 0, i = i + Math.imul(O, Y) | 0, n = (n = n + Math.imul(O, J) | 0) + Math.imul(C, Y) | 0, s = s + Math.imul(C, J) | 0, i = i + Math.imul(P, Z) | 0, n = (n = n + Math.imul(P, tt) | 0) + Math.imul(M, Z) | 0, s = s + Math.imul(M, tt) | 0, i = i + Math.imul(E, rt) | 0, n = (n = n + Math.imul(E, it) | 0) + Math.imul(S, rt) | 0, s = s + Math.imul(S, it) | 0, i = i + Math.imul(b, st) | 0, n = (n = n + Math.imul(b, ot) | 0) + Math.imul(_, st) | 0, s = s + Math.imul(_, ot) | 0, i = i + Math.imul(y, ht) | 0, n = (n = n + Math.imul(y, ct) | 0) + Math.imul(v, ht) | 0, s = s + Math.imul(v, ct) | 0, i = i + Math.imul(p, lt) | 0, n = (n = n + Math.imul(p, ft) | 0) + Math.imul(g, lt) | 0, s = s + Math.imul(g, ft) | 0;
                        var It = (c + (i = i + Math.imul(l, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(l, gt) | 0) + Math.imul(f, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(f, gt) | 0) + (n >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, i = Math.imul(L, K), n = (n = Math.imul(L, V)) + Math.imul(q, K) | 0, s = Math.imul(q, V), i = i + Math.imul(D, W) | 0, n = (n = n + Math.imul(D, G) | 0) + Math.imul(k, W) | 0, s = s + Math.imul(k, G) | 0, i = i + Math.imul(R, Y) | 0, n = (n = n + Math.imul(R, J) | 0) + Math.imul(T, Y) | 0, s = s + Math.imul(T, J) | 0, i = i + Math.imul(O, Z) | 0, n = (n = n + Math.imul(O, tt) | 0) + Math.imul(C, Z) | 0, s = s + Math.imul(C, tt) | 0, i = i + Math.imul(P, rt) | 0, n = (n = n + Math.imul(P, it) | 0) + Math.imul(M, rt) | 0, s = s + Math.imul(M, it) | 0, i = i + Math.imul(E, st) | 0, n = (n = n + Math.imul(E, ot) | 0) + Math.imul(S, st) | 0, s = s + Math.imul(S, ot) | 0, i = i + Math.imul(b, ht) | 0, n = (n = n + Math.imul(b, ct) | 0) + Math.imul(_, ht) | 0, s = s + Math.imul(_, ct) | 0, i = i + Math.imul(y, lt) | 0, n = (n = n + Math.imul(y, ft) | 0) + Math.imul(v, lt) | 0, s = s + Math.imul(v, ft) | 0;
                        var Pt = (c + (i = i + Math.imul(p, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(p, gt) | 0) + Math.imul(g, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(g, gt) | 0) + (n >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, i = Math.imul(L, W), n = (n = Math.imul(L, G)) + Math.imul(q, W) | 0, s = Math.imul(q, G), i = i + Math.imul(D, Y) | 0, n = (n = n + Math.imul(D, J) | 0) + Math.imul(k, Y) | 0, s = s + Math.imul(k, J) | 0, i = i + Math.imul(R, Z) | 0, n = (n = n + Math.imul(R, tt) | 0) + Math.imul(T, Z) | 0, s = s + Math.imul(T, tt) | 0, i = i + Math.imul(O, rt) | 0, n = (n = n + Math.imul(O, it) | 0) + Math.imul(C, rt) | 0, s = s + Math.imul(C, it) | 0, i = i + Math.imul(P, st) | 0, n = (n = n + Math.imul(P, ot) | 0) + Math.imul(M, st) | 0, s = s + Math.imul(M, ot) | 0, i = i + Math.imul(E, ht) | 0, n = (n = n + Math.imul(E, ct) | 0) + Math.imul(S, ht) | 0, s = s + Math.imul(S, ct) | 0, i = i + Math.imul(b, lt) | 0, n = (n = n + Math.imul(b, ft) | 0) + Math.imul(_, lt) | 0, s = s + Math.imul(_, ft) | 0;
                        var Mt = (c + (i = i + Math.imul(y, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(y, gt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(v, gt) | 0) + (n >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, i = Math.imul(L, Y), n = (n = Math.imul(L, J)) + Math.imul(q, Y) | 0, s = Math.imul(q, J), i = i + Math.imul(D, Z) | 0, n = (n = n + Math.imul(D, tt) | 0) + Math.imul(k, Z) | 0, s = s + Math.imul(k, tt) | 0, i = i + Math.imul(R, rt) | 0, n = (n = n + Math.imul(R, it) | 0) + Math.imul(T, rt) | 0, s = s + Math.imul(T, it) | 0, i = i + Math.imul(O, st) | 0, n = (n = n + Math.imul(O, ot) | 0) + Math.imul(C, st) | 0, s = s + Math.imul(C, ot) | 0, i = i + Math.imul(P, ht) | 0, n = (n = n + Math.imul(P, ct) | 0) + Math.imul(M, ht) | 0, s = s + Math.imul(M, ct) | 0, i = i + Math.imul(E, lt) | 0, n = (n = n + Math.imul(E, ft) | 0) + Math.imul(S, lt) | 0, s = s + Math.imul(S, ft) | 0;
                        var xt = (c + (i = i + Math.imul(b, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(b, gt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(_, gt) | 0) + (n >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, i = Math.imul(L, Z), n = (n = Math.imul(L, tt)) + Math.imul(q, Z) | 0, s = Math.imul(q, tt), i = i + Math.imul(D, rt) | 0, n = (n = n + Math.imul(D, it) | 0) + Math.imul(k, rt) | 0, s = s + Math.imul(k, it) | 0, i = i + Math.imul(R, st) | 0, n = (n = n + Math.imul(R, ot) | 0) + Math.imul(T, st) | 0, s = s + Math.imul(T, ot) | 0, i = i + Math.imul(O, ht) | 0, n = (n = n + Math.imul(O, ct) | 0) + Math.imul(C, ht) | 0, s = s + Math.imul(C, ct) | 0, i = i + Math.imul(P, lt) | 0, n = (n = n + Math.imul(P, ft) | 0) + Math.imul(M, lt) | 0, s = s + Math.imul(M, ft) | 0;
                        var Ot = (c + (i = i + Math.imul(E, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(E, gt) | 0) + Math.imul(S, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(S, gt) | 0) + (n >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, i = Math.imul(L, rt), n = (n = Math.imul(L, it)) + Math.imul(q, rt) | 0, s = Math.imul(q, it), i = i + Math.imul(D, st) | 0, n = (n = n + Math.imul(D, ot) | 0) + Math.imul(k, st) | 0, s = s + Math.imul(k, ot) | 0, i = i + Math.imul(R, ht) | 0, n = (n = n + Math.imul(R, ct) | 0) + Math.imul(T, ht) | 0, s = s + Math.imul(T, ct) | 0, i = i + Math.imul(O, lt) | 0, n = (n = n + Math.imul(O, ft) | 0) + Math.imul(C, lt) | 0, s = s + Math.imul(C, ft) | 0;
                        var Ct = (c + (i = i + Math.imul(P, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(P, gt) | 0) + Math.imul(M, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(M, gt) | 0) + (n >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, i = Math.imul(L, st), n = (n = Math.imul(L, ot)) + Math.imul(q, st) | 0, s = Math.imul(q, ot), i = i + Math.imul(D, ht) | 0, n = (n = n + Math.imul(D, ct) | 0) + Math.imul(k, ht) | 0, s = s + Math.imul(k, ct) | 0, i = i + Math.imul(R, lt) | 0, n = (n = n + Math.imul(R, ft) | 0) + Math.imul(T, lt) | 0, s = s + Math.imul(T, ft) | 0;
                        var Nt = (c + (i = i + Math.imul(O, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(O, gt) | 0) + Math.imul(C, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(C, gt) | 0) + (n >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, i = Math.imul(L, ht), n = (n = Math.imul(L, ct)) + Math.imul(q, ht) | 0, s = Math.imul(q, ct), i = i + Math.imul(D, lt) | 0, n = (n = n + Math.imul(D, ft) | 0) + Math.imul(k, lt) | 0, s = s + Math.imul(k, ft) | 0;
                        var Rt = (c + (i = i + Math.imul(R, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(R, gt) | 0) + Math.imul(T, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(T, gt) | 0) + (n >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, i = Math.imul(L, lt), n = (n = Math.imul(L, ft)) + Math.imul(q, lt) | 0, s = Math.imul(q, ft);
                        var Tt = (c + (i = i + Math.imul(D, pt) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(D, gt) | 0) + Math.imul(k, pt) | 0)) << 13) | 0;
                        c = ((s = s + Math.imul(k, gt) | 0) + (n >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863;
                        var Ut = (c + (i = Math.imul(L, pt)) | 0) + ((8191 & (n = (n = Math.imul(L, gt)) + Math.imul(q, pt) | 0)) << 13) | 0;
                        return c = ((s = Math.imul(q, gt)) + (n >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, h[0] = mt, h[1] = yt, h[2] = vt, h[3] = wt, h[4] = bt, h[5] = _t, h[6] = At, h[7] = Et, h[8] = St, h[9] = It, h[10] = Pt, h[11] = Mt, h[12] = xt, h[13] = Ot, h[14] = Ct, h[15] = Nt, h[16] = Rt, h[17] = Tt, h[18] = Ut, 0 !== c && (h[19] = c, r.length++), r
                    };

                    function m(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var i = 0, n = 0, s = 0; s < r.length - 1; s++) {
                            var o = n;
                            n = 0;
                            for (var a = 67108863 & i, h = Math.min(s, e.length - 1), c = Math.max(0, s - t.length + 1); c <= h; c++) {
                                var u = s - c,
                                    l = (0 | t.words[u]) * (0 | e.words[c]),
                                    f = 67108863 & l;
                                a = 67108863 & (f = f + a | 0), n += (o = (o = o + (l / 67108864 | 0) | 0) + (f >>> 26) | 0) >>> 26, o &= 67108863
                            }
                            r.words[s] = a, i = o, o = n
                        }
                        return 0 !== i ? r.words[s] = i : r.length--, r._strip()
                    }

                    function y(t, e, r) {
                        return m(t, e, r)
                    }
                    Math.imul || (g = p), n.prototype.mulTo = function(t, e) {
                        var r = this.length + t.length;
                        return 10 === this.length && 10 === t.length ? g(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? m(this, t, e) : y(this, t, e)
                    }, n.prototype.mul = function(t) {
                        var e = new n(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, n.prototype.mulf = function(t) {
                        var e = new n(null);
                        return e.words = new Array(this.length + t.length), y(this, t, e)
                    }, n.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, n.prototype.imuln = function(t) {
                        var e = t < 0;
                        e && (t = -t), r("number" == typeof t), r(t < 67108864);
                        for (var i = 0, n = 0; n < this.length; n++) {
                            var s = (0 | this.words[n]) * t,
                                o = (67108863 & s) + (67108863 & i);
                            i >>= 26, i += s / 67108864 | 0, i += o >>> 26, this.words[n] = 67108863 & o
                        }
                        return 0 !== i && (this.words[n] = i, this.length++), e ? this.ineg() : this
                    }, n.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, n.prototype.sqr = function() {
                        return this.mul(this)
                    }, n.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, n.prototype.pow = function(t) {
                        var e = function(t) {
                            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                                var i = r / 26 | 0,
                                    n = r % 26;
                                e[r] = t.words[i] >>> n & 1
                            }
                            return e
                        }(t);
                        if (0 === e.length) return new n(1);
                        for (var r = this, i = 0; i < e.length && 0 === e[i]; i++, r = r.sqr());
                        if (++i < e.length)
                            for (var s = r.sqr(); i < e.length; i++, s = s.sqr()) 0 !== e[i] && (r = r.mul(s));
                        return r
                    }, n.prototype.iushln = function(t) {
                        r("number" == typeof t && t >= 0);
                        var e, i = t % 26,
                            n = (t - i) / 26,
                            s = 67108863 >>> 26 - i << 26 - i;
                        if (0 !== i) {
                            var o = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & s,
                                    h = (0 | this.words[e]) - a << i;
                                this.words[e] = h | o, o = a >>> 26 - i
                            }
                            o && (this.words[e] = o, this.length++)
                        }
                        if (0 !== n) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                            for (e = 0; e < n; e++) this.words[e] = 0;
                            this.length += n
                        }
                        return this._strip()
                    }, n.prototype.ishln = function(t) {
                        return r(0 === this.negative), this.iushln(t)
                    }, n.prototype.iushrn = function(t, e, i) {
                        var n;
                        r("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                        var s = t % 26,
                            o = Math.min((t - s) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> s << s,
                            h = i;
                        if (n -= o, n = Math.max(0, n), h) {
                            for (var c = 0; c < o; c++) h.words[c] = this.words[c];
                            h.length = o
                        }
                        if (0 !== o)
                            if (this.length > o)
                                for (this.length -= o, c = 0; c < this.length; c++) this.words[c] = this.words[c + o];
                            else this.words[0] = 0, this.length = 1;
                        var u = 0;
                        for (c = this.length - 1; c >= 0 && (0 !== u || c >= n); c--) {
                            var l = 0 | this.words[c];
                            this.words[c] = u << 26 - s | l >>> s, u = l & a
                        }
                        return h && 0 !== u && (h.words[h.length++] = u), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                    }, n.prototype.ishrn = function(t, e, i) {
                        return r(0 === this.negative), this.iushrn(t, e, i)
                    }, n.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, n.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, n.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, n.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, n.prototype.testn = function(t) {
                        r("number" == typeof t && t >= 0);
                        var e = t % 26,
                            i = (t - e) / 26,
                            n = 1 << e;
                        return !(this.length <= i) && !!(this.words[i] & n)
                    }, n.prototype.imaskn = function(t) {
                        r("number" == typeof t && t >= 0);
                        var e = t % 26,
                            i = (t - e) / 26;
                        if (r(0 === this.negative, "imaskn works only with positive numbers"), this.length <= i) return this;
                        if (0 !== e && i++, this.length = Math.min(i, this.length), 0 !== e) {
                            var n = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= n
                        }
                        return this._strip()
                    }, n.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, n.prototype.iaddn = function(t) {
                        return r("number" == typeof t), r(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, n.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, n.prototype.isubn = function(t) {
                        if (r("number" == typeof t), r(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this._strip()
                    }, n.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, n.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, n.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, n.prototype.abs = function() {
                        return this.clone().iabs()
                    }, n.prototype._ishlnsubmul = function(t, e, i) {
                        var n, s = t.length + i;
                        this._expand(s);
                        var o, a = 0;
                        for (n = 0; n < t.length; n++) {
                            o = (0 | this.words[n + i]) + a;
                            var h = (0 | t.words[n]) * e;
                            a = ((o -= 67108863 & h) >> 26) - (h / 67108864 | 0), this.words[n + i] = 67108863 & o
                        }
                        for (; n < this.length - i; n++) a = (o = (0 | this.words[n + i]) + a) >> 26, this.words[n + i] = 67108863 & o;
                        if (0 === a) return this._strip();
                        for (r(-1 === a), a = 0, n = 0; n < this.length; n++) a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
                        return this.negative = 1, this._strip()
                    }, n.prototype._wordDiv = function(t, e) {
                        var r = (this.length, t.length),
                            i = this.clone(),
                            s = t,
                            o = 0 | s.words[s.length - 1];
                        0 !== (r = 26 - this._countBits(o)) && (s = s.ushln(r), i.iushln(r), o = 0 | s.words[s.length - 1]);
                        var a, h = i.length - s.length;
                        if ("mod" !== e) {
                            (a = new n(null)).length = h + 1, a.words = new Array(a.length);
                            for (var c = 0; c < a.length; c++) a.words[c] = 0
                        }
                        var u = i.clone()._ishlnsubmul(s, 1, h);
                        0 === u.negative && (i = u, a && (a.words[h] = 1));
                        for (var l = h - 1; l >= 0; l--) {
                            var f = 67108864 * (0 | i.words[s.length + l]) + (0 | i.words[s.length + l - 1]);
                            for (f = Math.min(f / o | 0, 67108863), i._ishlnsubmul(s, f, l); 0 !== i.negative;) f--, i.negative = 0, i._ishlnsubmul(s, 1, l), i.isZero() || (i.negative ^= 1);
                            a && (a.words[l] = f)
                        }
                        return a && a._strip(), i._strip(), "div" !== e && 0 !== r && i.iushrn(r), {
                            div: a || null,
                            mod: i
                        }
                    }, n.prototype.divmod = function(t, e, i) {
                        return r(!t.isZero()), this.isZero() ? {
                            div: new n(0),
                            mod: new n(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (s = a.div.neg()), "div" !== e && (o = a.mod.neg(), i && 0 !== o.negative && o.iadd(t)), {
                            div: s,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (s = a.div.neg()), {
                            div: s,
                            mod: a.mod
                        }) : this.negative & t.negative ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), i && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new n(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new n(this.modrn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new n(this.modrn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var s, o, a
                    }, n.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, n.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, n.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, n.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            i = t.ushrn(1),
                            n = t.andln(1),
                            s = r.cmp(i);
                        return s < 0 || 1 === n && 0 === s ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, n.prototype.modrn = function(t) {
                        var e = t < 0;
                        e && (t = -t), r(t <= 67108863);
                        for (var i = (1 << 26) % t, n = 0, s = this.length - 1; s >= 0; s--) n = (i * n + (0 | this.words[s])) % t;
                        return e ? -n : n
                    }, n.prototype.modn = function(t) {
                        return this.modrn(t)
                    }, n.prototype.idivn = function(t) {
                        var e = t < 0;
                        e && (t = -t), r(t <= 67108863);
                        for (var i = 0, n = this.length - 1; n >= 0; n--) {
                            var s = (0 | this.words[n]) + 67108864 * i;
                            this.words[n] = s / t | 0, i = s % t
                        }
                        return this._strip(), e ? this.ineg() : this
                    }, n.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, n.prototype.egcd = function(t) {
                        r(0 === t.negative), r(!t.isZero());
                        var e = this,
                            i = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        for (var s = new n(1), o = new n(0), a = new n(0), h = new n(1), c = 0; e.isEven() && i.isEven();) e.iushrn(1), i.iushrn(1), ++c;
                        for (var u = i.clone(), l = e.clone(); !e.isZero();) {
                            for (var f = 0, d = 1; !(e.words[0] & d) && f < 26; ++f, d <<= 1);
                            if (f > 0)
                                for (e.iushrn(f); f-- > 0;)(s.isOdd() || o.isOdd()) && (s.iadd(u), o.isub(l)), s.iushrn(1), o.iushrn(1);
                            for (var p = 0, g = 1; !(i.words[0] & g) && p < 26; ++p, g <<= 1);
                            if (p > 0)
                                for (i.iushrn(p); p-- > 0;)(a.isOdd() || h.isOdd()) && (a.iadd(u), h.isub(l)), a.iushrn(1), h.iushrn(1);
                            e.cmp(i) >= 0 ? (e.isub(i), s.isub(a), o.isub(h)) : (i.isub(e), a.isub(s), h.isub(o))
                        }
                        return {
                            a: a,
                            b: h,
                            gcd: i.iushln(c)
                        }
                    }, n.prototype._invmp = function(t) {
                        r(0 === t.negative), r(!t.isZero());
                        var e, i = this,
                            s = t.clone();
                        i = 0 !== i.negative ? i.umod(t) : i.clone();
                        for (var o = new n(1), a = new n(0), h = s.clone(); i.cmpn(1) > 0 && s.cmpn(1) > 0;) {
                            for (var c = 0, u = 1; !(i.words[0] & u) && c < 26; ++c, u <<= 1);
                            if (c > 0)
                                for (i.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(h), o.iushrn(1);
                            for (var l = 0, f = 1; !(s.words[0] & f) && l < 26; ++l, f <<= 1);
                            if (l > 0)
                                for (s.iushrn(l); l-- > 0;) a.isOdd() && a.iadd(h), a.iushrn(1);
                            i.cmp(s) >= 0 ? (i.isub(s), o.isub(a)) : (s.isub(i), a.isub(o))
                        }
                        return (e = 0 === i.cmpn(1) ? o : a).cmpn(0) < 0 && e.iadd(t), e
                    }, n.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var i = 0; e.isEven() && r.isEven(); i++) e.iushrn(1), r.iushrn(1);
                        for (;;) {
                            for (; e.isEven();) e.iushrn(1);
                            for (; r.isEven();) r.iushrn(1);
                            var n = e.cmp(r);
                            if (n < 0) {
                                var s = e;
                                e = r, r = s
                            } else if (0 === n || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        }
                        return r.iushln(i)
                    }, n.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, n.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, n.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, n.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, n.prototype.bincn = function(t) {
                        r("number" == typeof t);
                        var e = t % 26,
                            i = (t - e) / 26,
                            n = 1 << e;
                        if (this.length <= i) return this._expand(i + 1), this.words[i] |= n, this;
                        for (var s = n, o = i; 0 !== s && o < this.length; o++) {
                            var a = 0 | this.words[o];
                            s = (a += s) >>> 26, a &= 67108863, this.words[o] = a
                        }
                        return 0 !== s && (this.words[o] = s, this.length++), this
                    }, n.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, n.prototype.cmpn = function(t) {
                        var e, i = t < 0;
                        if (0 !== this.negative && !i) return -1;
                        if (0 === this.negative && i) return 1;
                        if (this._strip(), this.length > 1) e = 1;
                        else {
                            i && (t = -t), r(t <= 67108863, "Number is too big");
                            var n = 0 | this.words[0];
                            e = n === t ? 0 : n < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, n.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, n.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = 0 | this.words[r],
                                n = 0 | t.words[r];
                            if (i !== n) {
                                i < n ? e = -1 : i > n && (e = 1);
                                break
                            }
                        }
                        return e
                    }, n.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, n.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, n.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, n.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, n.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, n.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, n.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, n.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, n.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, n.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, n.red = function(t) {
                        return new S(t)
                    }, n.prototype.toRed = function(t) {
                        return r(!this.red, "Already a number in reduction context"), r(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, n.prototype.fromRed = function() {
                        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, n.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, n.prototype.forceRed = function(t) {
                        return r(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, n.prototype.redAdd = function(t) {
                        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, n.prototype.redIAdd = function(t) {
                        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, n.prototype.redSub = function(t) {
                        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, n.prototype.redISub = function(t) {
                        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, n.prototype.redShl = function(t) {
                        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, n.prototype.redMul = function(t) {
                        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, n.prototype.redIMul = function(t) {
                        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, n.prototype.redSqr = function() {
                        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, n.prototype.redISqr = function() {
                        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, n.prototype.redSqrt = function() {
                        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, n.prototype.redInvm = function() {
                        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, n.prototype.redNeg = function() {
                        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, n.prototype.redPow = function(t) {
                        return r(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var v = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function w(t, e) {
                        this.name = t, this.p = new n(e, 16), this.n = this.p.bitLength(), this.k = new n(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function b() {
                        w.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function _() {
                        w.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function A() {
                        w.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function E() {
                        w.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function S(t) {
                        if ("string" == typeof t) {
                            var e = n._prime(t);
                            this.m = e.p, this.prime = e
                        } else r(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function I(t) {
                        S.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new n(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    w.prototype._tmp = function() {
                        var t = new n(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, w.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                        } while (e > this.n);
                        var i = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === i ? (r.words[0] = 0, r.length = 1) : i > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, w.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, w.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(b, w), b.prototype.split = function(t, e) {
                        for (var r = 4194303, i = Math.min(t.length, 9), n = 0; n < i; n++) e.words[n] = t.words[n];
                        if (e.length = i, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var s = t.words[9];
                        for (e.words[e.length++] = s & r, n = 10; n < t.length; n++) {
                            var o = 0 | t.words[n];
                            t.words[n - 10] = (o & r) << 4 | s >>> 22, s = o
                        }
                        s >>>= 22, t.words[n - 10] = s, 0 === s && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, b.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var i = 0 | t.words[r];
                            e += 977 * i, t.words[r] = 67108863 & e, e = 64 * i + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(_, w), i(A, w), i(E, w), E.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var i = 19 * (0 | t.words[r]) + e,
                                n = 67108863 & i;
                            i >>>= 26, t.words[r] = n, e = i
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, n._prime = function(t) {
                        if (v[t]) return v[t];
                        var e;
                        if ("k256" === t) e = new b;
                        else if ("p224" === t) e = new _;
                        else if ("p192" === t) e = new A;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new E
                        }
                        return v[t] = e, e
                    }, S.prototype._verify1 = function(t) {
                        r(0 === t.negative, "red works only with positives"), r(t.red, "red works only with red numbers")
                    }, S.prototype._verify2 = function(t, e) {
                        r(0 === (t.negative | e.negative), "red works only with positives"), r(t.red && t.red === e.red, "red works only with red numbers")
                    }, S.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : (c(t, t.umod(this.m)._forceRed(this)), t)
                    }, S.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, S.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, S.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, S.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, S.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, S.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, S.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, S.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, S.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, S.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, S.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (r(e % 2 === 1), 3 === e) {
                            var i = this.m.add(new n(1)).iushrn(2);
                            return this.pow(t, i)
                        }
                        for (var s = this.m.subn(1), o = 0; !s.isZero() && 0 === s.andln(1);) o++, s.iushrn(1);
                        r(!s.isZero());
                        var a = new n(1).toRed(this),
                            h = a.redNeg(),
                            c = this.m.subn(1).iushrn(1),
                            u = this.m.bitLength();
                        for (u = new n(2 * u * u).toRed(this); 0 !== this.pow(u, c).cmp(h);) u.redIAdd(h);
                        for (var l = this.pow(u, s), f = this.pow(t, s.addn(1).iushrn(1)), d = this.pow(t, s), p = o; 0 !== d.cmp(a);) {
                            for (var g = d, m = 0; 0 !== g.cmp(a); m++) g = g.redSqr();
                            r(m < p);
                            var y = this.pow(l, new n(1).iushln(p - m - 1));
                            f = f.redMul(y), l = y.redSqr(), d = d.redMul(l), p = m
                        }
                        return f
                    }, S.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, S.prototype.pow = function(t, e) {
                        if (e.isZero()) return new n(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = new Array(16);
                        r[0] = new n(1).toRed(this), r[1] = t;
                        for (var i = 2; i < r.length; i++) r[i] = this.mul(r[i - 1], t);
                        var s = r[0],
                            o = 0,
                            a = 0,
                            h = e.bitLength() % 26;
                        for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {
                            for (var c = e.words[i], u = h - 1; u >= 0; u--) {
                                var l = c >> u & 1;
                                (s !== r[0] && (s = this.sqr(s)), 0 !== l || 0 !== o) ? (o <<= 1, o |= l, (4 === ++a || 0 === i && 0 === u) && (s = this.mul(s, r[o]), a = 0, o = 0)) : a = 0
                            }
                            h = 26
                        }
                        return s
                    }, S.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, S.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, n.mont = function(t) {
                        return new I(t)
                    }, i(I, S), I.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, I.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, I.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            n = r.isub(i).iushrn(this.shift),
                            s = n;
                        return n.cmp(this.m) >= 0 ? s = n.isub(this.m) : n.cmpn(0) < 0 && (s = n.iadd(this.m)), s._forceRed(this)
                    }, I.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new n(0)._forceRed(this);
                        var r = t.mul(e),
                            i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            s = r.isub(i).iushrn(this.shift),
                            o = s;
                        return s.cmp(this.m) >= 0 ? o = s.isub(this.m) : s.cmpn(0) < 0 && (o = s.iadd(this.m)), o._forceRed(this)
                    }, I.prototype.invm = function(t) {
                        return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                    }
                }(t, Pr)
            }(Xr);
            var ti = Xr.exports;
            const ei = "bignumber/5.7.0";
            var ri = ti.BN;
            const ii = new Lr(ei),
                ni = {},
                si = 9007199254740991;
            let oi = !1;
            class ai {
                constructor(t, e) {
                    t !== ni && ii.throwError("cannot call constructor directly; use BigNumber.from", Lr.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(t) {
                    return ci(ui(this).fromTwos(t))
                }
                toTwos(t) {
                    return ci(ui(this).toTwos(t))
                }
                abs() {
                    return "-" === this._hex[0] ? ai.from(this._hex.substring(1)) : this
                }
                add(t) {
                    return ci(ui(this).add(ui(t)))
                }
                sub(t) {
                    return ci(ui(this).sub(ui(t)))
                }
                div(t) {
                    return ai.from(t).isZero() && li("division-by-zero", "div"), ci(ui(this).div(ui(t)))
                }
                mul(t) {
                    return ci(ui(this).mul(ui(t)))
                }
                mod(t) {
                    const e = ui(t);
                    return e.isNeg() && li("division-by-zero", "mod"), ci(ui(this).umod(e))
                }
                pow(t) {
                    const e = ui(t);
                    return e.isNeg() && li("negative-power", "pow"), ci(ui(this).pow(e))
                }
                and(t) {
                    const e = ui(t);
                    return (this.isNegative() || e.isNeg()) && li("unbound-bitwise-result", "and"), ci(ui(this).and(e))
                }
                or(t) {
                    const e = ui(t);
                    return (this.isNegative() || e.isNeg()) && li("unbound-bitwise-result", "or"), ci(ui(this).or(e))
                }
                xor(t) {
                    const e = ui(t);
                    return (this.isNegative() || e.isNeg()) && li("unbound-bitwise-result", "xor"), ci(ui(this).xor(e))
                }
                mask(t) {
                    return (this.isNegative() || t < 0) && li("negative-width", "mask"), ci(ui(this).maskn(t))
                }
                shl(t) {
                    return (this.isNegative() || t < 0) && li("negative-width", "shl"), ci(ui(this).shln(t))
                }
                shr(t) {
                    return (this.isNegative() || t < 0) && li("negative-width", "shr"), ci(ui(this).shrn(t))
                }
                eq(t) {
                    return ui(this).eq(ui(t))
                }
                lt(t) {
                    return ui(this).lt(ui(t))
                }
                lte(t) {
                    return ui(this).lte(ui(t))
                }
                gt(t) {
                    return ui(this).gt(ui(t))
                }
                gte(t) {
                    return ui(this).gte(ui(t))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return ui(this).isZero()
                }
                toNumber() {
                    try {
                        return ui(this).toNumber()
                    } catch {
                        li("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch {}
                    return ii.throwError("this platform does not support BigInt", Lr.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? oi || (oi = !0, ii.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? ii.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Lr.errors.UNEXPECTED_ARGUMENT, {}) : ii.throwError("BigNumber.toString does not accept parameters", Lr.errors.UNEXPECTED_ARGUMENT, {})), ui(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(t) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(t) {
                    if (t instanceof ai) return t;
                    if ("string" == typeof t) return t.match(/^-?0x[0-9a-f]+$/i) ? new ai(ni, hi(t)) : t.match(/^-?[0-9]+$/) ? new ai(ni, hi(new ri(t))) : ii.throwArgumentError("invalid BigNumber string", "value", t);
                    if ("number" == typeof t) return t % 1 && li("underflow", "BigNumber.from", t), (t >= si || t <= -si) && li("overflow", "BigNumber.from", t), ai.from(String(t));
                    const e = t;
                    if ("bigint" == typeof e) return ai.from(e.toString());
                    if (Hr(e)) return ai.from(Wr(e));
                    if (e)
                        if (e.toHexString) {
                            const t = e.toHexString();
                            if ("string" == typeof t) return ai.from(t)
                        } else {
                            let t = e._hex;
                            if (null == t && "BigNumber" === e.type && (t = e.hex), "string" == typeof t && (Vr(t) || "-" === t[0] && Vr(t.substring(1)))) return ai.from(t)
                        }
                    return ii.throwArgumentError("invalid BigNumber value", "value", t)
                }
                static isBigNumber(t) {
                    return !(!t || !t._isBigNumber)
                }
            }

            function hi(t) {
                if ("string" != typeof t) return hi(t.toString(16));
                if ("-" === t[0]) return "-" === (t = t.substring(1))[0] && ii.throwArgumentError("invalid hex", "value", t), "0x00" === (t = hi(t)) ? t : "-" + t;
                if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
                for (t.length % 2 && (t = "0x0" + t.substring(2)); t.length > 4 && "0x00" === t.substring(0, 4);) t = "0x" + t.substring(4);
                return t
            }

            function ci(t) {
                return ai.from(hi(t))
            }

            function ui(t) {
                const e = ai.from(t).toHexString();
                return "-" === e[0] ? new ri("-" + e.substring(3), 16) : new ri(e.substring(2), 16)
            }

            function li(t, e, r) {
                const i = {
                    fault: t,
                    operation: e
                };
                return null != r && (i.value = r), ii.throwError(t, Lr.errors.NUMERIC_FAULT, i)
            }
            const fi = new Lr(ei),
                di = {},
                pi = ai.from(0),
                gi = ai.from(-1);

            function mi(t, e, r, i) {
                const n = {
                    fault: e,
                    operation: r
                };
                return void 0 !== i && (n.value = i), fi.throwError(t, Lr.errors.NUMERIC_FAULT, n)
            }
            let yi = "0";
            for (; yi.length < 256;) yi += yi;

            function vi(t) {
                if ("number" != typeof t) try {
                    t = ai.from(t).toNumber()
                } catch {}
                return "number" == typeof t && t >= 0 && t <= 256 && !(t % 1) ? "1" + yi.substring(0, t) : fi.throwArgumentError("invalid decimal size", "decimals", t)
            }

            function wi(t, e) {
                null == e && (e = 0);
                const r = vi(e),
                    i = (t = ai.from(t)).lt(pi);
                i && (t = t.mul(gi));
                let n = t.mod(r).toString();
                for (; n.length < r.length - 1;) n = "0" + n;
                n = n.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                const s = t.div(r).toString();
                return t = 1 === r.length ? s : s + "." + n, i && (t = "-" + t), t
            }

            function bi(t, e) {
                null == e && (e = 0);
                const r = vi(e);
                ("string" != typeof t || !t.match(/^-?[0-9.]+$/)) && fi.throwArgumentError("invalid decimal value", "value", t);
                const i = "-" === t.substring(0, 1);
                i && (t = t.substring(1)), "." === t && fi.throwArgumentError("missing value", "value", t);
                const n = t.split(".");
                n.length > 2 && fi.throwArgumentError("too many decimal points", "value", t);
                let s = n[0],
                    o = n[1];
                for (s || (s = "0"), o || (o = "0");
                    "0" === o[o.length - 1];) o = o.substring(0, o.length - 1);
                for (o.length > r.length - 1 && mi("fractional component exceeds decimals", "underflow", "parseFixed"), "" === o && (o = "0"); o.length < r.length - 1;) o += "0";
                const a = ai.from(s),
                    h = ai.from(o);
                let c = a.mul(r).add(h);
                return i && (c = c.mul(gi)), c
            }
            class _i {
                constructor(t, e, r, i) {
                    t !== di && fi.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Lr.errors.UNSUPPORTED_OPERATION, {
                        operation: "new FixedFormat"
                    }), this.signed = e, this.width = r, this.decimals = i, this.name = (e ? "" : "u") + "fixed" + String(r) + "x" + String(i), this._multiplier = vi(i), Object.freeze(this)
                }
                static from(t) {
                    if (t instanceof _i) return t;
                    "number" == typeof t && (t = `fixed128x${t}`);
                    let e = !0,
                        r = 128,
                        i = 18;
                    if ("string" == typeof t) {
                        if ("fixed" !== t)
                            if ("ufixed" === t) e = !1;
                            else {
                                const n = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                                n || fi.throwArgumentError("invalid fixed format", "format", t), e = "u" !== n[1], r = parseInt(n[2]), i = parseInt(n[3])
                            }
                    } else if (t) {
                        const n = (e, r, i) => null == t[e] ? i : (typeof t[e] !== r && fi.throwArgumentError("invalid fixed format (" + e + " not " + r + ")", "format." + e, t[e]), t[e]);
                        e = n("signed", "boolean", e), r = n("width", "number", r), i = n("decimals", "number", i)
                    }
                    return r % 8 && fi.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r), i > 80 && fi.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", i), new _i(di, e, r, i)
                }
            }
            class Ai {
                constructor(t, e, r, i) {
                    t !== di && fi.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Lr.errors.UNSUPPORTED_OPERATION, {
                        operation: "new FixedFormat"
                    }), this.format = i, this._hex = e, this._value = r, this._isFixedNumber = !0, Object.freeze(this)
                }
                _checkFormat(t) {
                    this.format.name !== t.format.name && fi.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t)
                }
                addUnsafe(t) {
                    this._checkFormat(t);
                    const e = bi(this._value, this.format.decimals),
                        r = bi(t._value, t.format.decimals);
                    return Ai.fromValue(e.add(r), this.format.decimals, this.format)
                }
                subUnsafe(t) {
                    this._checkFormat(t);
                    const e = bi(this._value, this.format.decimals),
                        r = bi(t._value, t.format.decimals);
                    return Ai.fromValue(e.sub(r), this.format.decimals, this.format)
                }
                mulUnsafe(t) {
                    this._checkFormat(t);
                    const e = bi(this._value, this.format.decimals),
                        r = bi(t._value, t.format.decimals);
                    return Ai.fromValue(e.mul(r).div(this.format._multiplier), this.format.decimals, this.format)
                }
                divUnsafe(t) {
                    this._checkFormat(t);
                    const e = bi(this._value, this.format.decimals),
                        r = bi(t._value, t.format.decimals);
                    return Ai.fromValue(e.mul(this.format._multiplier).div(r), this.format.decimals, this.format)
                }
                floor() {
                    const t = this.toString().split(".");
                    1 === t.length && t.push("0");
                    let e = Ai.from(t[0], this.format);
                    const r = !t[1].match(/^(0*)$/);
                    return this.isNegative() && r && (e = e.subUnsafe(Ei.toFormat(e.format))), e
                }
                ceiling() {
                    const t = this.toString().split(".");
                    1 === t.length && t.push("0");
                    let e = Ai.from(t[0], this.format);
                    const r = !t[1].match(/^(0*)$/);
                    return !this.isNegative() && r && (e = e.addUnsafe(Ei.toFormat(e.format))), e
                }
                round(t) {
                    null == t && (t = 0);
                    const e = this.toString().split(".");
                    if (1 === e.length && e.push("0"), (t < 0 || t > 80 || t % 1) && fi.throwArgumentError("invalid decimal count", "decimals", t), e[1].length <= t) return this;
                    const r = Ai.from("1" + yi.substring(0, t), this.format),
                        i = Si.toFormat(this.format);
                    return this.mulUnsafe(r).addUnsafe(i).floor().divUnsafe(r)
                }
                isZero() {
                    return "0.0" === this._value || "0" === this._value
                }
                isNegative() {
                    return "-" === this._value[0]
                }
                toString() {
                    return this._value
                }
                toHexString(t) {
                    if (null == t) return this._hex;
                    t % 8 && fi.throwArgumentError("invalid byte width", "width", t);
                    return Qr(ai.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString(), t / 8)
                }
                toUnsafeFloat() {
                    return parseFloat(this.toString())
                }
                toFormat(t) {
                    return Ai.fromString(this._value, t)
                }
                static fromValue(t, e, r) {
                    return null == r && null != e && ! function(t) {
                        return null != t && (ai.isBigNumber(t) || "number" == typeof t && t % 1 === 0 || "string" == typeof t && !!t.match(/^-?[0-9]+$/) || Vr(t) || "bigint" == typeof t || Hr(t))
                    }(e) && (r = e, e = null), null == e && (e = 0), null == r && (r = "fixed"), Ai.fromString(wi(t, e), _i.from(r))
                }
                static fromString(t, e) {
                    null == e && (e = "fixed");
                    const r = _i.from(e),
                        i = bi(t, r.decimals);
                    !r.signed && i.lt(pi) && mi("unsigned value cannot be negative", "overflow", "value", t);
                    let n = null;
                    r.signed ? n = i.toTwos(r.width).toHexString() : (n = i.toHexString(), n = Qr(n, r.width / 8));
                    const s = wi(i, r.decimals);
                    return new Ai(di, n, s, r)
                }
                static fromBytes(t, e) {
                    null == e && (e = "fixed");
                    const r = _i.from(e);
                    if (Kr(t).length > r.width / 8) throw new Error("overflow");
                    let i = ai.from(t);
                    r.signed && (i = i.fromTwos(r.width));
                    const n = i.toTwos((r.signed ? 0 : 1) + r.width).toHexString(),
                        s = wi(i, r.decimals);
                    return new Ai(di, n, s, r)
                }
                static from(t, e) {
                    if ("string" == typeof t) return Ai.fromString(t, e);
                    if (Hr(t)) return Ai.fromBytes(t, e);
                    try {
                        return Ai.fromValue(t, 0, e)
                    } catch (Cc) {
                        if (Cc.code !== Lr.errors.INVALID_ARGUMENT) throw Cc
                    }
                    return fi.throwArgumentError("invalid FixedNumber value", "value", t)
                }
                static isFixedNumber(t) {
                    return !(!t || !t._isFixedNumber)
                }
            }
            const Ei = Ai.from(1),
                Si = Ai.from("0.5"),
                Ii = new Lr("strings/5.7.0");
            var Pi, Mi;

            function xi(t, e, r, i, n) {
                if (t === Mi.BAD_PREFIX || t === Mi.UNEXPECTED_CONTINUE) {
                    let t = 0;
                    for (let i = e + 1; i < r.length && r[i] >> 6 === 2; i++) t++;
                    return t
                }
                return t === Mi.OVERRUN ? r.length - e - 1 : 0
            }

            function Oi(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Pi.current;
                e != Pi.current && (Ii.checkNormalize(), t = t.normalize(e));
                let r = [];
                for (let i = 0; i < t.length; i++) {
                    const e = t.charCodeAt(i);
                    if (e < 128) r.push(e);
                    else if (e < 2048) r.push(e >> 6 | 192), r.push(63 & e | 128);
                    else if (55296 == (64512 & e)) {
                        i++;
                        const n = t.charCodeAt(i);
                        if (i >= t.length || 56320 !== (64512 & n)) throw new Error("invalid utf-8 string");
                        const s = 65536 + ((1023 & e) << 10) + (1023 & n);
                        r.push(s >> 18 | 240), r.push(s >> 12 & 63 | 128), r.push(s >> 6 & 63 | 128), r.push(63 & s | 128)
                    } else r.push(e >> 12 | 224), r.push(e >> 6 & 63 | 128), r.push(63 & e | 128)
                }
                return Kr(r)
            }

            function Ci(t, e) {
                e || (e = function(t) {
                    return [parseInt(t, 16)]
                });
                let r = 0,
                    i = {};
                return t.split(",").forEach((t => {
                    let n = t.split(":");
                    r += parseInt(n[0], 16), i[r] = e(n[1])
                })), i
            }

            function Ni(t) {
                let e = 0;
                return t.split(",").map((t => {
                    let r = t.split("-");
                    1 === r.length ? r[1] = "0" : "" === r[1] && (r[1] = "1");
                    let i = e + parseInt(r[0], 16);
                    return e = parseInt(r[1], 16), {
                        l: i,
                        h: e
                    }
                }))
            }! function(t) {
                t.current = "", t.NFC = "NFC", t.NFD = "NFD", t.NFKC = "NFKC", t.NFKD = "NFKD"
            }(Pi || (Pi = {})),
            function(t) {
                t.UNEXPECTED_CONTINUE = "unexpected continuation byte", t.BAD_PREFIX = "bad codepoint prefix", t.OVERRUN = "string overrun", t.MISSING_CONTINUE = "missing continuation byte", t.OUT_OF_RANGE = "out of UTF-8 range", t.UTF16_SURROGATE = "UTF-16 surrogate", t.OVERLONG = "overlong representation"
            }(Mi || (Mi = {})), Object.freeze({
                error: function(t, e, r, i, n) {
                    return Ii.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
                },
                ignore: xi,
                replace: function(t, e, r, i, n) {
                    return t === Mi.OVERLONG ? (i.push(n), 0) : (i.push(65533), xi(t, e, r))
                }
            }), Ni("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((t => parseInt(t, 16))), Ci("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), Ci("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), Ci("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", (function(t) {
                if (t.length % 4 !== 0) throw new Error("bad data");
                let e = [];
                for (let r = 0; r < t.length; r += 4) e.push(parseInt(t.substring(r, r + 4), 16));
                return e
            })), Ni("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
            const Ri = "hash/5.7.0";

            function Ti(t, e) {
                null == e && (e = 1);
                const r = [],
                    i = r.forEach,
                    n = function(t, e) {
                        i.call(t, (function(t) {
                            e > 0 && Array.isArray(t) ? n(t, e - 1) : r.push(t)
                        }))
                    };
                return n(t, e), r
            }

            function Ui(t) {
                return function(t) {
                    let e = 0;
                    return () => t[e++]
                }(function(t) {
                    let e = 0;

                    function r() {
                        return t[e++] << 8 | t[e++]
                    }
                    let i = r(),
                        n = 1,
                        s = [0, 1];
                    for (let b = 1; b < i; b++) s.push(n += r());
                    let o = r(),
                        a = e;
                    e += o;
                    let h = 0,
                        c = 0;

                    function u() {
                        return 0 == h && (c = c << 8 | t[e++], h = 8), c >> --h & 1
                    }
                    const l = Math.pow(2, 31),
                        f = l >>> 1,
                        d = f >> 1,
                        p = l - 1;
                    let g = 0;
                    for (let b = 0; b < 31; b++) g = g << 1 | u();
                    let m = [],
                        y = 0,
                        v = l;
                    for (;;) {
                        let t = Math.floor(((g - y + 1) * n - 1) / v),
                            e = 0,
                            r = i;
                        for (; r - e > 1;) {
                            let i = e + r >>> 1;
                            t < s[i] ? r = i : e = i
                        }
                        if (0 == e) break;
                        m.push(e);
                        let o = y + Math.floor(v * s[e] / n),
                            a = y + Math.floor(v * s[e + 1] / n) - 1;
                        for (; !((o ^ a) & f);) g = g << 1 & p | u(), o = o << 1 & p, a = a << 1 & p | 1;
                        for (; o & ~a & d;) g = g & f | g << 1 & p >>> 1 | u(), o = o << 1 ^ f, a = (a ^ f) << 1 | f | 1;
                        y = o, v = 1 + a - o
                    }
                    let w = i - 4;
                    return m.map((e => {
                        switch (e - w) {
                            case 3:
                                return w + 65792 + (t[a++] << 16 | t[a++] << 8 | t[a++]);
                            case 2:
                                return w + 256 + (t[a++] << 8 | t[a++]);
                            case 1:
                                return w + t[a++];
                            default:
                                return e - 1
                        }
                    }))
                }(t))
            }

            function Di(t) {
                return 1 & t ? ~t >> 1 : t >> 1
            }

            function ki(t, e) {
                let r = Array(t);
                for (let i = 0, n = -1; i < t; i++) r[i] = n += 1 + e();
                return r
            }

            function Bi(t, e) {
                let r = Array(t);
                for (let i = 0, n = 0; i < t; i++) r[i] = n += Di(e());
                return r
            }

            function Li(t, e) {
                let r = ki(t(), t),
                    i = t(),
                    n = ki(i, t),
                    s = function(t, e) {
                        let r = Array(t);
                        for (let i = 0; i < t; i++) r[i] = 1 + e();
                        return r
                    }(i, t);
                for (let o = 0; o < i; o++)
                    for (let t = 0; t < s[o]; t++) r.push(n[o] + t);
                return e ? r.map((t => e[t])) : r
            }

            function qi(t, e, r) {
                let i = Array(t).fill(void 0).map((() => []));
                for (let n = 0; n < e; n++) Bi(t, r).forEach(((t, e) => i[e].push(t)));
                return i
            }

            function ji(t, e) {
                let r = 1 + e(),
                    i = e(),
                    n = function(t) {
                        let e = [];
                        for (;;) {
                            let r = t();
                            if (0 == r) break;
                            e.push(r)
                        }
                        return e
                    }(e);
                return Ti(qi(n.length, 1 + t, e).map(((t, e) => {
                    const s = t[0],
                        o = t.slice(1);
                    return Array(n[e]).fill(void 0).map(((t, e) => {
                        let n = e * i;
                        return [s + e * r, o.map((t => t + n))]
                    }))
                })))
            }

            function zi(t, e) {
                return qi(1 + e(), 1 + t, e).map((t => [t[0], t.slice(1)]))
            }
            const Fi = Ui(function(t) {
                t = atob(t);
                const e = [];
                for (let r = 0; r < t.length; r++) e.push(t.charCodeAt(r));
                return Kr(e)
            }(""));
            new Set(Li(Fi)), new Set(Li(Fi)),
                function(t) {
                    let e = [];
                    for (;;) {
                        let r = t();
                        if (0 == r) break;
                        e.push(ji(r, t))
                    }
                    for (;;) {
                        let r = t() - 1;
                        if (r < 0) break;
                        e.push(zi(r, t))
                    }(function(t) {
                        const e = {};
                        for (let r = 0; r < t.length; r++) {
                            const i = t[r];
                            e[i[0]] = i[1]
                        }
                    })(Ti(e))
                }(Fi),
                function(t) {
                    let e = Li(t).sort(((t, e) => t - e));
                    (function r() {
                        let i = [];
                        for (;;) {
                            let n = Li(t, e);
                            if (0 == n.length) break;
                            i.push({
                                set: new Set(n),
                                node: r()
                            })
                        }
                        i.sort(((t, e) => e.set.size - t.set.size));
                        let n = t(),
                            s = n % 3;
                        n = n / 3 | 0;
                        let o = !!(1 & n);
                        n >>= 1;
                        let a = 1 == n,
                            h = 2 == n;
                        return {
                            branches: i,
                            valid: s,
                            fe0f: o,
                            save: a,
                            check: h
                        }
                    })()
                }(Fi), new Lr(Ri);
            new Uint8Array(32).fill(0);
            const Hi = "\x19Ethereum Signed Message:\n";

            function Ki(t) {
                return "string" == typeof t && (t = Oi(t)), Jr(function(t) {
                    const e = t.map((t => Kr(t))),
                        r = e.reduce(((t, e) => t + e.length), 0),
                        i = new Uint8Array(r);
                    return e.reduce(((t, e) => (i.set(e, t), t + e.length)), 0), zr(i)
                }([Oi(Hi), Oi(String(t.length)), t]))
            }
            new Lr("rlp/5.7.0");
            const Vi = new Lr("address/5.7.0");

            function $i(t) {
                Vr(t, 20) || Vi.throwArgumentError("invalid address", "address", t);
                const e = (t = t.toLowerCase()).substring(2).split(""),
                    r = new Uint8Array(40);
                for (let n = 0; n < 40; n++) r[n] = e[n].charCodeAt(0);
                const i = Kr(Jr(r));
                for (let n = 0; n < 40; n += 2) i[n >> 1] >> 4 >= 8 && (e[n] = e[n].toUpperCase()), (15 & i[n >> 1]) >= 8 && (e[n + 1] = e[n + 1].toUpperCase());
                return "0x" + e.join("")
            }
            const Wi = {};
            for (let lw = 0; lw < 10; lw++) Wi[String(lw)] = String(lw);
            for (let lw = 0; lw < 26; lw++) Wi[String.fromCharCode(65 + lw)] = String(10 + lw);
            const Gi = Math.floor(function(t) {
                return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
            }(9007199254740991));

            function Qi(t) {
                let e = null;
                if ("string" != typeof t && Vi.throwArgumentError("invalid address", "address", t), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== t.substring(0, 2) && (t = "0x" + t), e = $i(t), t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && Vi.throwArgumentError("bad address checksum", "address", t);
                else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (t.substring(2, 4) !== function(t) {
                            let e = (t = (t = t.toUpperCase()).substring(4) + t.substring(0, 2) + "00").split("").map((t => Wi[t])).join("");
                            for (; e.length >= Gi;) {
                                let t = e.substring(0, Gi);
                                e = parseInt(t, 10) % 97 + e.substring(t.length)
                            }
                            let r = String(98 - parseInt(e, 10) % 97);
                            for (; r.length < 2;) r = "0" + r;
                            return r
                        }(t) && Vi.throwArgumentError("bad icap checksum", "address", t), e = function(t) {
                            return new ri(t, 36).toString(16)
                        }(t.substring(4)); e.length < 40;) e = "0" + e;
                    e = $i("0x" + e)
                } else Vi.throwArgumentError("invalid address", "address", t);
                return e
            }

            function Yi(t, e, r) {
                Object.defineProperty(t, e, {
                    enumerable: !0,
                    value: r,
                    writable: !1
                })
            }
            new Lr("properties/5.7.0"), new Lr(Ri);
            new Uint8Array(32).fill(0), ai.from(-1);
            const Ji = ai.from(0),
                Xi = ai.from(1);
            ai.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), Qr(Xi.toHexString(), 32), Qr(Ji.toHexString(), 32);
            var Zi = {},
                tn = {},
                en = rn;

            function rn(t, e) {
                if (!t) throw new Error(e || "Assertion failed")
            }
            rn.equal = function(t, e, r) {
                if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e)
            };
            var nn = {
                exports: {}
            };
            "function" == typeof Object.create ? nn.exports = function(t, e) {
                e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }))
            } : nn.exports = function(t, e) {
                if (e) {
                    t.super_ = e;
                    var r = function() {};
                    r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                }
            };
            var sn = en,
                on = nn.exports;

            function an(t, e) {
                return !(55296 !== (64512 & t.charCodeAt(e)) || e < 0 || e + 1 >= t.length) && 56320 === (64512 & t.charCodeAt(e + 1))
            }

            function hn(t) {
                return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0
            }

            function cn(t) {
                return 1 === t.length ? "0" + t : t
            }

            function un(t) {
                return 7 === t.length ? "0" + t : 6 === t.length ? "00" + t : 5 === t.length ? "000" + t : 4 === t.length ? "0000" + t : 3 === t.length ? "00000" + t : 2 === t.length ? "000000" + t : 1 === t.length ? "0000000" + t : t
            }
            tn.inherits = on, tn.toArray = function(t, e) {
                if (Array.isArray(t)) return t.slice();
                if (!t) return [];
                var r = [];
                if ("string" == typeof t)
                    if (e) {
                        if ("hex" === e)
                            for ((t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 !== 0 && (t = "0" + t), n = 0; n < t.length; n += 2) r.push(parseInt(t[n] + t[n + 1], 16))
                    } else
                        for (var i = 0, n = 0; n < t.length; n++) {
                            var s = t.charCodeAt(n);
                            s < 128 ? r[i++] = s : s < 2048 ? (r[i++] = s >> 6 | 192, r[i++] = 63 & s | 128) : an(t, n) ? (s = 65536 + ((1023 & s) << 10) + (1023 & t.charCodeAt(++n)), r[i++] = s >> 18 | 240, r[i++] = s >> 12 & 63 | 128, r[i++] = s >> 6 & 63 | 128, r[i++] = 63 & s | 128) : (r[i++] = s >> 12 | 224, r[i++] = s >> 6 & 63 | 128, r[i++] = 63 & s | 128)
                        } else
                            for (n = 0; n < t.length; n++) r[n] = 0 | t[n];
                return r
            }, tn.toHex = function(t) {
                for (var e = "", r = 0; r < t.length; r++) e += cn(t[r].toString(16));
                return e
            }, tn.htonl = hn, tn.toHex32 = function(t, e) {
                for (var r = "", i = 0; i < t.length; i++) {
                    var n = t[i];
                    "little" === e && (n = hn(n)), r += un(n.toString(16))
                }
                return r
            }, tn.zero2 = cn, tn.zero8 = un, tn.join32 = function(t, e, r, i) {
                var n = r - e;
                sn(n % 4 === 0);
                for (var s = new Array(n / 4), o = 0, a = e; o < s.length; o++, a += 4) {
                    var h;
                    h = "big" === i ? t[a] << 24 | t[a + 1] << 16 | t[a + 2] << 8 | t[a + 3] : t[a + 3] << 24 | t[a + 2] << 16 | t[a + 1] << 8 | t[a], s[o] = h >>> 0
                }
                return s
            }, tn.split32 = function(t, e) {
                for (var r = new Array(4 * t.length), i = 0, n = 0; i < t.length; i++, n += 4) {
                    var s = t[i];
                    "big" === e ? (r[n] = s >>> 24, r[n + 1] = s >>> 16 & 255, r[n + 2] = s >>> 8 & 255, r[n + 3] = 255 & s) : (r[n + 3] = s >>> 24, r[n + 2] = s >>> 16 & 255, r[n + 1] = s >>> 8 & 255, r[n] = 255 & s)
                }
                return r
            }, tn.rotr32 = function(t, e) {
                return t >>> e | t << 32 - e
            }, tn.rotl32 = function(t, e) {
                return t << e | t >>> 32 - e
            }, tn.sum32 = function(t, e) {
                return t + e >>> 0
            }, tn.sum32_3 = function(t, e, r) {
                return t + e + r >>> 0
            }, tn.sum32_4 = function(t, e, r, i) {
                return t + e + r + i >>> 0
            }, tn.sum32_5 = function(t, e, r, i, n) {
                return t + e + r + i + n >>> 0
            }, tn.sum64 = function(t, e, r, i) {
                var n = t[e],
                    s = i + t[e + 1] >>> 0,
                    o = (s < i ? 1 : 0) + r + n;
                t[e] = o >>> 0, t[e + 1] = s
            }, tn.sum64_hi = function(t, e, r, i) {
                return (e + i >>> 0 < e ? 1 : 0) + t + r >>> 0
            }, tn.sum64_lo = function(t, e, r, i) {
                return e + i >>> 0
            }, tn.sum64_4_hi = function(t, e, r, i, n, s, o, a) {
                var h = 0,
                    c = e;
                return h += (c = c + i >>> 0) < e ? 1 : 0, h += (c = c + s >>> 0) < s ? 1 : 0, t + r + n + o + (h += (c = c + a >>> 0) < a ? 1 : 0) >>> 0
            }, tn.sum64_4_lo = function(t, e, r, i, n, s, o, a) {
                return e + i + s + a >>> 0
            }, tn.sum64_5_hi = function(t, e, r, i, n, s, o, a, h, c) {
                var u = 0,
                    l = e;
                return u += (l = l + i >>> 0) < e ? 1 : 0, u += (l = l + s >>> 0) < s ? 1 : 0, u += (l = l + a >>> 0) < a ? 1 : 0, t + r + n + o + h + (u += (l = l + c >>> 0) < c ? 1 : 0) >>> 0
            }, tn.sum64_5_lo = function(t, e, r, i, n, s, o, a, h, c) {
                return e + i + s + a + c >>> 0
            }, tn.rotr64_hi = function(t, e, r) {
                return (e << 32 - r | t >>> r) >>> 0
            }, tn.rotr64_lo = function(t, e, r) {
                return (t << 32 - r | e >>> r) >>> 0
            }, tn.shr64_hi = function(t, e, r) {
                return t >>> r
            }, tn.shr64_lo = function(t, e, r) {
                return (t << 32 - r | e >>> r) >>> 0
            };
            var ln = {},
                fn = tn,
                dn = en;

            function pn() {
                this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32
            }
            ln.BlockHash = pn, pn.prototype.update = function(t, e) {
                if (t = fn.toArray(t, e), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
                    var r = (t = this.pending).length % this._delta8;
                    this.pending = t.slice(t.length - r, t.length), 0 === this.pending.length && (this.pending = null), t = fn.join32(t, 0, t.length - r, this.endian);
                    for (var i = 0; i < t.length; i += this._delta32) this._update(t, i, i + this._delta32)
                }
                return this
            }, pn.prototype.digest = function(t) {
                return this.update(this._pad()), dn(null === this.pending), this._digest(t)
            }, pn.prototype._pad = function() {
                var t = this.pendingTotal,
                    e = this._delta8,
                    r = e - (t + this.padLength) % e,
                    i = new Array(r + this.padLength);
                i[0] = 128;
                for (var n = 1; n < r; n++) i[n] = 0;
                if (t <<= 3, "big" === this.endian) {
                    for (var s = 8; s < this.padLength; s++) i[n++] = 0;
                    i[n++] = 0, i[n++] = 0, i[n++] = 0, i[n++] = 0, i[n++] = t >>> 24 & 255, i[n++] = t >>> 16 & 255, i[n++] = t >>> 8 & 255, i[n++] = 255 & t
                } else
                    for (i[n++] = 255 & t, i[n++] = t >>> 8 & 255, i[n++] = t >>> 16 & 255, i[n++] = t >>> 24 & 255, i[n++] = 0, i[n++] = 0, i[n++] = 0, i[n++] = 0, s = 8; s < this.padLength; s++) i[n++] = 0;
                return i
            };
            var gn = {},
                mn = {},
                yn = tn.rotr32;

            function vn(t, e, r) {
                return t & e ^ ~t & r
            }

            function wn(t, e, r) {
                return t & e ^ t & r ^ e & r
            }

            function bn(t, e, r) {
                return t ^ e ^ r
            }
            mn.ft_1 = function(t, e, r, i) {
                return 0 === t ? vn(e, r, i) : 1 === t || 3 === t ? bn(e, r, i) : 2 === t ? wn(e, r, i) : void 0
            }, mn.ch32 = vn, mn.maj32 = wn, mn.p32 = bn, mn.s0_256 = function(t) {
                return yn(t, 2) ^ yn(t, 13) ^ yn(t, 22)
            }, mn.s1_256 = function(t) {
                return yn(t, 6) ^ yn(t, 11) ^ yn(t, 25)
            }, mn.g0_256 = function(t) {
                return yn(t, 7) ^ yn(t, 18) ^ t >>> 3
            }, mn.g1_256 = function(t) {
                return yn(t, 17) ^ yn(t, 19) ^ t >>> 10
            };
            var _n = tn,
                An = ln,
                En = mn,
                Sn = _n.rotl32,
                In = _n.sum32,
                Pn = _n.sum32_5,
                Mn = En.ft_1,
                xn = An.BlockHash,
                On = [1518500249, 1859775393, 2400959708, 3395469782];

            function Cn() {
                if (!(this instanceof Cn)) return new Cn;
                xn.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80)
            }
            _n.inherits(Cn, xn);
            var Nn = Cn;
            Cn.blockSize = 512, Cn.outSize = 160, Cn.hmacStrength = 80, Cn.padLength = 64, Cn.prototype._update = function(t, e) {
                for (var r = this.W, i = 0; i < 16; i++) r[i] = t[e + i];
                for (; i < r.length; i++) r[i] = Sn(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);
                var n = this.h[0],
                    s = this.h[1],
                    o = this.h[2],
                    a = this.h[3],
                    h = this.h[4];
                for (i = 0; i < r.length; i++) {
                    var c = ~~(i / 20),
                        u = Pn(Sn(n, 5), Mn(c, s, o, a), h, r[i], On[c]);
                    h = a, a = o, o = Sn(s, 30), s = n, n = u
                }
                this.h[0] = In(this.h[0], n), this.h[1] = In(this.h[1], s), this.h[2] = In(this.h[2], o), this.h[3] = In(this.h[3], a), this.h[4] = In(this.h[4], h)
            }, Cn.prototype._digest = function(t) {
                return "hex" === t ? _n.toHex32(this.h, "big") : _n.split32(this.h, "big")
            };
            var Rn = tn,
                Tn = ln,
                Un = mn,
                Dn = en,
                kn = Rn.sum32,
                Bn = Rn.sum32_4,
                Ln = Rn.sum32_5,
                qn = Un.ch32,
                jn = Un.maj32,
                zn = Un.s0_256,
                Fn = Un.s1_256,
                Hn = Un.g0_256,
                Kn = Un.g1_256,
                Vn = Tn.BlockHash,
                $n = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

            function Wn() {
                if (!(this instanceof Wn)) return new Wn;
                Vn.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = $n, this.W = new Array(64)
            }
            Rn.inherits(Wn, Vn);
            var Gn = Wn;
            Wn.blockSize = 512, Wn.outSize = 256, Wn.hmacStrength = 192, Wn.padLength = 64, Wn.prototype._update = function(t, e) {
                for (var r = this.W, i = 0; i < 16; i++) r[i] = t[e + i];
                for (; i < r.length; i++) r[i] = Bn(Kn(r[i - 2]), r[i - 7], Hn(r[i - 15]), r[i - 16]);
                var n = this.h[0],
                    s = this.h[1],
                    o = this.h[2],
                    a = this.h[3],
                    h = this.h[4],
                    c = this.h[5],
                    u = this.h[6],
                    l = this.h[7];
                for (Dn(this.k.length === r.length), i = 0; i < r.length; i++) {
                    var f = Ln(l, Fn(h), qn(h, c, u), this.k[i], r[i]),
                        d = kn(zn(n), jn(n, s, o));
                    l = u, u = c, c = h, h = kn(a, f), a = o, o = s, s = n, n = kn(f, d)
                }
                this.h[0] = kn(this.h[0], n), this.h[1] = kn(this.h[1], s), this.h[2] = kn(this.h[2], o), this.h[3] = kn(this.h[3], a), this.h[4] = kn(this.h[4], h), this.h[5] = kn(this.h[5], c), this.h[6] = kn(this.h[6], u), this.h[7] = kn(this.h[7], l)
            }, Wn.prototype._digest = function(t) {
                return "hex" === t ? Rn.toHex32(this.h, "big") : Rn.split32(this.h, "big")
            };
            var Qn = tn,
                Yn = Gn;

            function Jn() {
                if (!(this instanceof Jn)) return new Jn;
                Yn.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
            }
            Qn.inherits(Jn, Yn);
            var Xn = Jn;
            Jn.blockSize = 512, Jn.outSize = 224, Jn.hmacStrength = 192, Jn.padLength = 64, Jn.prototype._digest = function(t) {
                return "hex" === t ? Qn.toHex32(this.h.slice(0, 7), "big") : Qn.split32(this.h.slice(0, 7), "big")
            };
            var Zn = tn,
                ts = ln,
                es = en,
                rs = Zn.rotr64_hi,
                is = Zn.rotr64_lo,
                ns = Zn.shr64_hi,
                ss = Zn.shr64_lo,
                os = Zn.sum64,
                as = Zn.sum64_hi,
                hs = Zn.sum64_lo,
                cs = Zn.sum64_4_hi,
                us = Zn.sum64_4_lo,
                ls = Zn.sum64_5_hi,
                fs = Zn.sum64_5_lo,
                ds = ts.BlockHash,
                ps = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];

            function gs() {
                if (!(this instanceof gs)) return new gs;
                ds.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = ps, this.W = new Array(160)
            }
            Zn.inherits(gs, ds);
            var ms = gs;

            function ys(t, e, r, i, n) {
                var s = t & r ^ ~t & n;
                return s < 0 && (s += 4294967296), s
            }

            function vs(t, e, r, i, n, s) {
                var o = e & i ^ ~e & s;
                return o < 0 && (o += 4294967296), o
            }

            function ws(t, e, r, i, n) {
                var s = t & r ^ t & n ^ r & n;
                return s < 0 && (s += 4294967296), s
            }

            function bs(t, e, r, i, n, s) {
                var o = e & i ^ e & s ^ i & s;
                return o < 0 && (o += 4294967296), o
            }

            function _s(t, e) {
                var r = rs(t, e, 28) ^ rs(e, t, 2) ^ rs(e, t, 7);
                return r < 0 && (r += 4294967296), r
            }

            function As(t, e) {
                var r = is(t, e, 28) ^ is(e, t, 2) ^ is(e, t, 7);
                return r < 0 && (r += 4294967296), r
            }

            function Es(t, e) {
                var r = rs(t, e, 14) ^ rs(t, e, 18) ^ rs(e, t, 9);
                return r < 0 && (r += 4294967296), r
            }

            function Ss(t, e) {
                var r = is(t, e, 14) ^ is(t, e, 18) ^ is(e, t, 9);
                return r < 0 && (r += 4294967296), r
            }

            function Is(t, e) {
                var r = rs(t, e, 1) ^ rs(t, e, 8) ^ ns(t, e, 7);
                return r < 0 && (r += 4294967296), r
            }

            function Ps(t, e) {
                var r = is(t, e, 1) ^ is(t, e, 8) ^ ss(t, e, 7);
                return r < 0 && (r += 4294967296), r
            }

            function Ms(t, e) {
                var r = rs(t, e, 19) ^ rs(e, t, 29) ^ ns(t, e, 6);
                return r < 0 && (r += 4294967296), r
            }

            function xs(t, e) {
                var r = is(t, e, 19) ^ is(e, t, 29) ^ ss(t, e, 6);
                return r < 0 && (r += 4294967296), r
            }
            gs.blockSize = 1024, gs.outSize = 512, gs.hmacStrength = 192, gs.padLength = 128, gs.prototype._prepareBlock = function(t, e) {
                for (var r = this.W, i = 0; i < 32; i++) r[i] = t[e + i];
                for (; i < r.length; i += 2) {
                    var n = Ms(r[i - 4], r[i - 3]),
                        s = xs(r[i - 4], r[i - 3]),
                        o = r[i - 14],
                        a = r[i - 13],
                        h = Is(r[i - 30], r[i - 29]),
                        c = Ps(r[i - 30], r[i - 29]),
                        u = r[i - 32],
                        l = r[i - 31];
                    r[i] = cs(n, s, o, a, h, c, u, l), r[i + 1] = us(n, s, o, a, h, c, u, l)
                }
            }, gs.prototype._update = function(t, e) {
                this._prepareBlock(t, e);
                var r = this.W,
                    i = this.h[0],
                    n = this.h[1],
                    s = this.h[2],
                    o = this.h[3],
                    a = this.h[4],
                    h = this.h[5],
                    c = this.h[6],
                    u = this.h[7],
                    l = this.h[8],
                    f = this.h[9],
                    d = this.h[10],
                    p = this.h[11],
                    g = this.h[12],
                    m = this.h[13],
                    y = this.h[14],
                    v = this.h[15];
                es(this.k.length === r.length);
                for (var w = 0; w < r.length; w += 2) {
                    var b = y,
                        _ = v,
                        A = Es(l, f),
                        E = Ss(l, f),
                        S = ys(l, f, d, p, g),
                        I = vs(l, f, d, p, g, m),
                        P = this.k[w],
                        M = this.k[w + 1],
                        x = r[w],
                        O = r[w + 1],
                        C = ls(b, _, A, E, S, I, P, M, x, O),
                        N = fs(b, _, A, E, S, I, P, M, x, O);
                    b = _s(i, n), _ = As(i, n), A = ws(i, n, s, o, a), E = bs(i, n, s, o, a, h);
                    var R = as(b, _, A, E),
                        T = hs(b, _, A, E);
                    y = g, v = m, g = d, m = p, d = l, p = f, l = as(c, u, C, N), f = hs(u, u, C, N), c = a, u = h, a = s, h = o, s = i, o = n, i = as(C, N, R, T), n = hs(C, N, R, T)
                }
                os(this.h, 0, i, n), os(this.h, 2, s, o), os(this.h, 4, a, h), os(this.h, 6, c, u), os(this.h, 8, l, f), os(this.h, 10, d, p), os(this.h, 12, g, m), os(this.h, 14, y, v)
            }, gs.prototype._digest = function(t) {
                return "hex" === t ? Zn.toHex32(this.h, "big") : Zn.split32(this.h, "big")
            };
            var Os = tn,
                Cs = ms;

            function Ns() {
                if (!(this instanceof Ns)) return new Ns;
                Cs.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
            }
            Os.inherits(Ns, Cs);
            var Rs = Ns;
            Ns.blockSize = 1024, Ns.outSize = 384, Ns.hmacStrength = 192, Ns.padLength = 128, Ns.prototype._digest = function(t) {
                return "hex" === t ? Os.toHex32(this.h.slice(0, 12), "big") : Os.split32(this.h.slice(0, 12), "big")
            }, gn.sha1 = Nn, gn.sha224 = Xn, gn.sha256 = Gn, gn.sha384 = Rs, gn.sha512 = ms;
            var Ts = {},
                Us = tn,
                Ds = ln,
                ks = Us.rotl32,
                Bs = Us.sum32,
                Ls = Us.sum32_3,
                qs = Us.sum32_4,
                js = Ds.BlockHash;

            function zs() {
                if (!(this instanceof zs)) return new zs;
                js.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little"
            }

            function Fs(t, e, r, i) {
                return t <= 15 ? e ^ r ^ i : t <= 31 ? e & r | ~e & i : t <= 47 ? (e | ~r) ^ i : t <= 63 ? e & i | r & ~i : e ^ (r | ~i)
            }

            function Hs(t) {
                return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838
            }

            function Ks(t) {
                return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0
            }
            Us.inherits(zs, js), Ts.ripemd160 = zs, zs.blockSize = 512, zs.outSize = 160, zs.hmacStrength = 192, zs.padLength = 64, zs.prototype._update = function(t, e) {
                for (var r = this.h[0], i = this.h[1], n = this.h[2], s = this.h[3], o = this.h[4], a = r, h = i, c = n, u = s, l = o, f = 0; f < 80; f++) {
                    var d = Bs(ks(qs(r, Fs(f, i, n, s), t[Vs[f] + e], Hs(f)), Ws[f]), o);
                    r = o, o = s, s = ks(n, 10), n = i, i = d, d = Bs(ks(qs(a, Fs(79 - f, h, c, u), t[$s[f] + e], Ks(f)), Gs[f]), l), a = l, l = u, u = ks(c, 10), c = h, h = d
                }
                d = Ls(this.h[1], n, u), this.h[1] = Ls(this.h[2], s, l), this.h[2] = Ls(this.h[3], o, a), this.h[3] = Ls(this.h[4], r, h), this.h[4] = Ls(this.h[0], i, c), this.h[0] = d
            }, zs.prototype._digest = function(t) {
                return "hex" === t ? Us.toHex32(this.h, "little") : Us.split32(this.h, "little")
            };
            var Vs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
                $s = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
                Ws = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
                Gs = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11],
                Qs = tn,
                Ys = en;

            function Js(t, e, r) {
                if (!(this instanceof Js)) return new Js(t, e, r);
                this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(Qs.toArray(e, r))
            }
            var Xs = Js;

            function Zs(t, e, r) {
                return r = {
                    path: e,
                    exports: {},
                    require: function(t, e) {
                        return function() {
                            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }(e ? ? r.path)
                    }
                }, t(r, r.exports), r.exports
            }
            Js.prototype._init = function(t) {
                    t.length > this.blockSize && (t = (new this.Hash).update(t).digest()), Ys(t.length <= this.blockSize);
                    for (var e = t.length; e < this.blockSize; e++) t.push(0);
                    for (e = 0; e < t.length; e++) t[e] ^= 54;
                    for (this.inner = (new this.Hash).update(t), e = 0; e < t.length; e++) t[e] ^= 106;
                    this.outer = (new this.Hash).update(t)
                }, Js.prototype.update = function(t, e) {
                    return this.inner.update(t, e), this
                }, Js.prototype.digest = function(t) {
                    return this.outer.update(this.inner.digest()), this.outer.digest(t)
                },
                function(t) {
                    var e = t;
                    e.utils = tn, e.common = ln, e.sha = gn, e.ripemd = Ts, e.hmac = Xs, e.sha1 = e.sha.sha1, e.sha256 = e.sha.sha256, e.sha224 = e.sha.sha224, e.sha384 = e.sha.sha384, e.sha512 = e.sha.sha512, e.ripemd160 = e.ripemd.ripemd160
                }(Zi);
            var to = eo;

            function eo(t, e) {
                if (!t) throw new Error(e || "Assertion failed")
            }
            eo.equal = function(t, e, r) {
                if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e)
            };
            var ro = Zs((function(t, e) {
                    var r = e;

                    function i(t) {
                        return 1 === t.length ? "0" + t : t
                    }

                    function n(t) {
                        for (var e = "", r = 0; r < t.length; r++) e += i(t[r].toString(16));
                        return e
                    }
                    r.toArray = function(t, e) {
                        if (Array.isArray(t)) return t.slice();
                        if (!t) return [];
                        var r = [];
                        if ("string" != typeof t) {
                            for (var i = 0; i < t.length; i++) r[i] = 0 | t[i];
                            return r
                        }
                        if ("hex" === e) {
                            (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 !== 0 && (t = "0" + t);
                            for (i = 0; i < t.length; i += 2) r.push(parseInt(t[i] + t[i + 1], 16))
                        } else
                            for (i = 0; i < t.length; i++) {
                                var n = t.charCodeAt(i),
                                    s = n >> 8,
                                    o = 255 & n;
                                s ? r.push(s, o) : r.push(o)
                            }
                        return r
                    }, r.zero2 = i, r.toHex = n, r.encode = function(t, e) {
                        return "hex" === e ? n(t) : t
                    }
                })),
                io = Zs((function(t, e) {
                    var r = e;
                    r.assert = to, r.toArray = ro.toArray, r.zero2 = ro.zero2, r.toHex = ro.toHex, r.encode = ro.encode, r.getNAF = function(t, e, r) {
                        var i = new Array(Math.max(t.bitLength(), r) + 1);
                        i.fill(0);
                        for (var n = 1 << e + 1, s = t.clone(), o = 0; o < i.length; o++) {
                            var a, h = s.andln(n - 1);
                            s.isOdd() ? (a = h > (n >> 1) - 1 ? (n >> 1) - h : h, s.isubn(a)) : a = 0, i[o] = a, s.iushrn(1)
                        }
                        return i
                    }, r.getJSF = function(t, e) {
                        var r = [
                            [],
                            []
                        ];
                        t = t.clone(), e = e.clone();
                        for (var i, n = 0, s = 0; t.cmpn(-n) > 0 || e.cmpn(-s) > 0;) {
                            var o, a, h = t.andln(3) + n & 3,
                                c = e.andln(3) + s & 3;
                            3 === h && (h = -1), 3 === c && (c = -1), 1 & h ? o = 3 !== (i = t.andln(7) + n & 7) && 5 !== i || 2 !== c ? h : -h : o = 0, r[0].push(o), 1 & c ? a = 3 !== (i = e.andln(7) + s & 7) && 5 !== i || 2 !== h ? c : -c : a = 0, r[1].push(a), 2 * n === o + 1 && (n = 1 - n), 2 * s === a + 1 && (s = 1 - s), t.iushrn(1), e.iushrn(1)
                        }
                        return r
                    }, r.cachedProperty = function(t, e, r) {
                        var i = "_" + e;
                        t.prototype[e] = function() {
                            return void 0 !== this[i] ? this[i] : this[i] = r.call(this)
                        }
                    }, r.parseBytes = function(t) {
                        return "string" == typeof t ? r.toArray(t, "hex") : t
                    }, r.intFromLE = function(t) {
                        return new ti(t, "hex", "le")
                    }
                })),
                no = io.getNAF,
                so = io.getJSF,
                oo = io.assert;

            function ao(t, e) {
                this.type = t, this.p = new ti(e.p, 16), this.red = e.prime ? ti.red(e.prime) : ti.mont(this.p), this.zero = new ti(0).toRed(this.red), this.one = new ti(1).toRed(this.red), this.two = new ti(2).toRed(this.red), this.n = e.n && new ti(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                var r = this.n && this.p.div(this.n);
                !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }
            var ho = ao;

            function co(t, e) {
                this.curve = t, this.type = e, this.precomputed = null
            }
            ao.prototype.point = function() {
                throw new Error("Not implemented")
            }, ao.prototype.validate = function() {
                throw new Error("Not implemented")
            }, ao.prototype._fixedNafMul = function(t, e) {
                oo(t.precomputed);
                var r = t._getDoubles(),
                    i = no(e, 1, this._bitLength),
                    n = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
                n /= 3;
                var s, o, a = [];
                for (s = 0; s < i.length; s += r.step) {
                    o = 0;
                    for (var h = s + r.step - 1; h >= s; h--) o = (o << 1) + i[h];
                    a.push(o)
                }
                for (var c = this.jpoint(null, null, null), u = this.jpoint(null, null, null), l = n; l > 0; l--) {
                    for (s = 0; s < a.length; s++)(o = a[s]) === l ? u = u.mixedAdd(r.points[s]) : o === -l && (u = u.mixedAdd(r.points[s].neg()));
                    c = c.add(u)
                }
                return c.toP()
            }, ao.prototype._wnafMul = function(t, e) {
                var r = 4,
                    i = t._getNAFPoints(r);
                r = i.wnd;
                for (var n = i.points, s = no(e, r, this._bitLength), o = this.jpoint(null, null, null), a = s.length - 1; a >= 0; a--) {
                    for (var h = 0; a >= 0 && 0 === s[a]; a--) h++;
                    if (a >= 0 && h++, o = o.dblp(h), a < 0) break;
                    var c = s[a];
                    oo(0 !== c), o = "affine" === t.type ? c > 0 ? o.mixedAdd(n[c - 1 >> 1]) : o.mixedAdd(n[-c - 1 >> 1].neg()) : c > 0 ? o.add(n[c - 1 >> 1]) : o.add(n[-c - 1 >> 1].neg())
                }
                return "affine" === t.type ? o.toP() : o
            }, ao.prototype._wnafMulAdd = function(t, e, r, i, n) {
                var s, o, a, h = this._wnafT1,
                    c = this._wnafT2,
                    u = this._wnafT3,
                    l = 0;
                for (s = 0; s < i; s++) {
                    var f = (a = e[s])._getNAFPoints(t);
                    h[s] = f.wnd, c[s] = f.points
                }
                for (s = i - 1; s >= 1; s -= 2) {
                    var d = s - 1,
                        p = s;
                    if (1 === h[d] && 1 === h[p]) {
                        var g = [e[d], null, null, e[p]];
                        0 === e[d].y.cmp(e[p].y) ? (g[1] = e[d].add(e[p]), g[2] = e[d].toJ().mixedAdd(e[p].neg())) : 0 === e[d].y.cmp(e[p].y.redNeg()) ? (g[1] = e[d].toJ().mixedAdd(e[p]), g[2] = e[d].add(e[p].neg())) : (g[1] = e[d].toJ().mixedAdd(e[p]), g[2] = e[d].toJ().mixedAdd(e[p].neg()));
                        var m = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            y = so(r[d], r[p]);
                        for (l = Math.max(y[0].length, l), u[d] = new Array(l), u[p] = new Array(l), o = 0; o < l; o++) {
                            var v = 0 | y[0][o],
                                w = 0 | y[1][o];
                            u[d][o] = m[3 * (v + 1) + (w + 1)], u[p][o] = 0, c[d] = g
                        }
                    } else u[d] = no(r[d], h[d], this._bitLength), u[p] = no(r[p], h[p], this._bitLength), l = Math.max(u[d].length, l), l = Math.max(u[p].length, l)
                }
                var b = this.jpoint(null, null, null),
                    _ = this._wnafT4;
                for (s = l; s >= 0; s--) {
                    for (var A = 0; s >= 0;) {
                        var E = !0;
                        for (o = 0; o < i; o++) _[o] = 0 | u[o][s], 0 !== _[o] && (E = !1);
                        if (!E) break;
                        A++, s--
                    }
                    if (s >= 0 && A++, b = b.dblp(A), s < 0) break;
                    for (o = 0; o < i; o++) {
                        var S = _[o];
                        0 !== S && (S > 0 ? a = c[o][S - 1 >> 1] : S < 0 && (a = c[o][-S - 1 >> 1].neg()), b = "affine" === a.type ? b.mixedAdd(a) : b.add(a))
                    }
                }
                for (s = 0; s < i; s++) c[s] = null;
                return n ? b : b.toP()
            }, ao.BasePoint = co, co.prototype.eq = function() {
                throw new Error("Not implemented")
            }, co.prototype.validate = function() {
                return this.curve.validate(this)
            }, ao.prototype.decodePoint = function(t, e) {
                t = io.toArray(t, e);
                var r = this.p.byteLength();
                if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 === 2 * r) return 6 === t[0] ? oo(t[t.length - 1] % 2 === 0) : 7 === t[0] && oo(t[t.length - 1] % 2 === 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                throw new Error("Unknown point format")
            }, co.prototype.encodeCompressed = function(t) {
                return this.encode(t, !0)
            }, co.prototype._encode = function(t) {
                var e = this.curve.p.byteLength(),
                    r = this.getX().toArray("be", e);
                return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
            }, co.prototype.encode = function(t, e) {
                return io.encode(this._encode(e), t)
            }, co.prototype.precompute = function(t) {
                if (this.precomputed) return this;
                var e = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this
            }, co.prototype._hasDoubles = function(t) {
                if (!this.precomputed) return !1;
                var e = this.precomputed.doubles;
                return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
            }, co.prototype._getDoubles = function(t, e) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var r = [this], i = this, n = 0; n < e; n += t) {
                    for (var s = 0; s < t; s++) i = i.dbl();
                    r.push(i)
                }
                return {
                    step: t,
                    points: r
                }
            }, co.prototype._getNAFPoints = function(t) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var e = [this], r = (1 << t) - 1, i = 1 === r ? null : this.dbl(), n = 1; n < r; n++) e[n] = e[n - 1].add(i);
                return {
                    wnd: t,
                    points: e
                }
            }, co.prototype._getBeta = function() {
                return null
            }, co.prototype.dblp = function(t) {
                for (var e = this, r = 0; r < t; r++) e = e.dbl();
                return e
            };
            var uo = Zs((function(t) {
                    "function" == typeof Object.create ? t.exports = function(t, e) {
                        e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                            constructor: {
                                value: t,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : t.exports = function(t, e) {
                        if (e) {
                            t.super_ = e;
                            var r = function() {};
                            r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                        }
                    }
                })),
                lo = io.assert;

            function fo(t) {
                ho.call(this, "short", t), this.a = new ti(t.a, 16).toRed(this.red), this.b = new ti(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
            }
            uo(fo, ho);
            var po = fo;

            function go(t, e, r, i) {
                ho.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new ti(e, 16), this.y = new ti(r, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function mo(t, e, r, i) {
                ho.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === i ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new ti(0)) : (this.x = new ti(e, 16), this.y = new ti(r, 16), this.z = new ti(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            fo.prototype._getEndomorphism = function(t) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var e, r, i;
                    if (t.beta) e = new ti(t.beta, 16).toRed(this.red);
                    else {
                        var n = this._getEndoRoots(this.p);
                        e = (e = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                    }
                    if (t.lambda) r = new ti(t.lambda, 16);
                    else {
                        var s = this._getEndoRoots(this.n);
                        0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(e)) ? r = s[0] : (r = s[1], lo(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                    }
                    return i = t.basis ? t.basis.map((function(t) {
                        return {
                            a: new ti(t.a, 16),
                            b: new ti(t.b, 16)
                        }
                    })) : this._getEndoBasis(r), {
                        beta: e,
                        lambda: r,
                        basis: i
                    }
                }
            }, fo.prototype._getEndoRoots = function(t) {
                var e = t === this.p ? this.red : ti.mont(t),
                    r = new ti(2).toRed(e).redInvm(),
                    i = r.redNeg(),
                    n = new ti(3).toRed(e).redNeg().redSqrt().redMul(r);
                return [i.redAdd(n).fromRed(), i.redSub(n).fromRed()]
            }, fo.prototype._getEndoBasis = function(t) {
                for (var e, r, i, n, s, o, a, h, c, u = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), l = t, f = this.n.clone(), d = new ti(1), p = new ti(0), g = new ti(0), m = new ti(1), y = 0; 0 !== l.cmpn(0);) {
                    var v = f.div(l);
                    h = f.sub(v.mul(l)), c = g.sub(v.mul(d));
                    var w = m.sub(v.mul(p));
                    if (!i && h.cmp(u) < 0) e = a.neg(), r = d, i = h.neg(), n = c;
                    else if (i && 2 === ++y) break;
                    a = h, f = l, l = h, g = d, d = c, m = p, p = w
                }
                s = h.neg(), o = c;
                var b = i.sqr().add(n.sqr());
                return s.sqr().add(o.sqr()).cmp(b) >= 0 && (s = e, o = r), i.negative && (i = i.neg(), n = n.neg()), s.negative && (s = s.neg(), o = o.neg()), [{
                    a: i,
                    b: n
                }, {
                    a: s,
                    b: o
                }]
            }, fo.prototype._endoSplit = function(t) {
                var e = this.endo.basis,
                    r = e[0],
                    i = e[1],
                    n = i.b.mul(t).divRound(this.n),
                    s = r.b.neg().mul(t).divRound(this.n),
                    o = n.mul(r.a),
                    a = s.mul(i.a),
                    h = n.mul(r.b),
                    c = s.mul(i.b);
                return {
                    k1: t.sub(o).sub(a),
                    k2: h.add(c).neg()
                }
            }, fo.prototype.pointFromX = function(t, e) {
                (t = new ti(t, 16)).red || (t = t.toRed(this.red));
                var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
                    i = r.redSqrt();
                if (0 !== i.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                var n = i.fromRed().isOdd();
                return (e && !n || !e && n) && (i = i.redNeg()), this.point(t, i)
            }, fo.prototype.validate = function(t) {
                if (t.inf) return !0;
                var e = t.x,
                    r = t.y,
                    i = this.a.redMul(e),
                    n = e.redSqr().redMul(e).redIAdd(i).redIAdd(this.b);
                return 0 === r.redSqr().redISub(n).cmpn(0)
            }, fo.prototype._endoWnafMulAdd = function(t, e, r) {
                for (var i = this._endoWnafT1, n = this._endoWnafT2, s = 0; s < t.length; s++) {
                    var o = this._endoSplit(e[s]),
                        a = t[s],
                        h = a._getBeta();
                    o.k1.negative && (o.k1.ineg(), a = a.neg(!0)), o.k2.negative && (o.k2.ineg(), h = h.neg(!0)), i[2 * s] = a, i[2 * s + 1] = h, n[2 * s] = o.k1, n[2 * s + 1] = o.k2
                }
                for (var c = this._wnafMulAdd(1, i, n, 2 * s, r), u = 0; u < 2 * s; u++) i[u] = null, n[u] = null;
                return c
            }, uo(go, ho.BasePoint), fo.prototype.point = function(t, e, r) {
                return new go(this, t, e, r)
            }, fo.prototype.pointFromJSON = function(t, e) {
                return go.fromJSON(this, t, e)
            }, go.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var t = this.precomputed;
                    if (t && t.beta) return t.beta;
                    var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (t) {
                        var r = this.curve,
                            i = function(t) {
                                return r.point(t.x.redMul(r.endo.beta), t.y)
                            };
                        t.beta = e, e.precomputed = {
                            beta: null,
                            naf: t.naf && {
                                wnd: t.naf.wnd,
                                points: t.naf.points.map(i)
                            },
                            doubles: t.doubles && {
                                step: t.doubles.step,
                                points: t.doubles.points.map(i)
                            }
                        }
                    }
                    return e
                }
            }, go.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, go.fromJSON = function(t, e, r) {
                "string" == typeof e && (e = JSON.parse(e));
                var i = t.point(e[0], e[1], r);
                if (!e[2]) return i;

                function n(e) {
                    return t.point(e[0], e[1], r)
                }
                var s = e[2];
                return i.precomputed = {
                    beta: null,
                    doubles: s.doubles && {
                        step: s.doubles.step,
                        points: [i].concat(s.doubles.points.map(n))
                    },
                    naf: s.naf && {
                        wnd: s.naf.wnd,
                        points: [i].concat(s.naf.points.map(n))
                    }
                }, i
            }, go.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, go.prototype.isInfinity = function() {
                return this.inf
            }, go.prototype.add = function(t) {
                if (this.inf) return t;
                if (t.inf) return this;
                if (this.eq(t)) return this.dbl();
                if (this.neg().eq(t)) return this.curve.point(null, null);
                if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
                var e = this.y.redSub(t.y);
                0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                var r = e.redSqr().redISub(this.x).redISub(t.x),
                    i = e.redMul(this.x.redSub(r)).redISub(this.y);
                return this.curve.point(r, i)
            }, go.prototype.dbl = function() {
                if (this.inf) return this;
                var t = this.y.redAdd(this.y);
                if (0 === t.cmpn(0)) return this.curve.point(null, null);
                var e = this.curve.a,
                    r = this.x.redSqr(),
                    i = t.redInvm(),
                    n = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(i),
                    s = n.redSqr().redISub(this.x.redAdd(this.x)),
                    o = n.redMul(this.x.redSub(s)).redISub(this.y);
                return this.curve.point(s, o)
            }, go.prototype.getX = function() {
                return this.x.fromRed()
            }, go.prototype.getY = function() {
                return this.y.fromRed()
            }, go.prototype.mul = function(t) {
                return t = new ti(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
            }, go.prototype.mulAdd = function(t, e, r) {
                var i = [this, e],
                    n = [t, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(i, n) : this.curve._wnafMulAdd(1, i, n, 2)
            }, go.prototype.jmulAdd = function(t, e, r) {
                var i = [this, e],
                    n = [t, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(i, n, !0) : this.curve._wnafMulAdd(1, i, n, 2, !0)
            }, go.prototype.eq = function(t) {
                return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
            }, go.prototype.neg = function(t) {
                if (this.inf) return this;
                var e = this.curve.point(this.x, this.y.redNeg());
                if (t && this.precomputed) {
                    var r = this.precomputed,
                        i = function(t) {
                            return t.neg()
                        };
                    e.precomputed = {
                        naf: r.naf && {
                            wnd: r.naf.wnd,
                            points: r.naf.points.map(i)
                        },
                        doubles: r.doubles && {
                            step: r.doubles.step,
                            points: r.doubles.points.map(i)
                        }
                    }
                }
                return e
            }, go.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, uo(mo, ho.BasePoint), fo.prototype.jpoint = function(t, e, r) {
                return new mo(this, t, e, r)
            }, mo.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var t = this.z.redInvm(),
                    e = t.redSqr(),
                    r = this.x.redMul(e),
                    i = this.y.redMul(e).redMul(t);
                return this.curve.point(r, i)
            }, mo.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, mo.prototype.add = function(t) {
                if (this.isInfinity()) return t;
                if (t.isInfinity()) return this;
                var e = t.z.redSqr(),
                    r = this.z.redSqr(),
                    i = this.x.redMul(e),
                    n = t.x.redMul(r),
                    s = this.y.redMul(e.redMul(t.z)),
                    o = t.y.redMul(r.redMul(this.z)),
                    a = i.redSub(n),
                    h = s.redSub(o);
                if (0 === a.cmpn(0)) return 0 !== h.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = a.redSqr(),
                    u = c.redMul(a),
                    l = i.redMul(c),
                    f = h.redSqr().redIAdd(u).redISub(l).redISub(l),
                    d = h.redMul(l.redISub(f)).redISub(s.redMul(u)),
                    p = this.z.redMul(t.z).redMul(a);
                return this.curve.jpoint(f, d, p)
            }, mo.prototype.mixedAdd = function(t) {
                if (this.isInfinity()) return t.toJ();
                if (t.isInfinity()) return this;
                var e = this.z.redSqr(),
                    r = this.x,
                    i = t.x.redMul(e),
                    n = this.y,
                    s = t.y.redMul(e).redMul(this.z),
                    o = r.redSub(i),
                    a = n.redSub(s);
                if (0 === o.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var h = o.redSqr(),
                    c = h.redMul(o),
                    u = r.redMul(h),
                    l = a.redSqr().redIAdd(c).redISub(u).redISub(u),
                    f = a.redMul(u.redISub(l)).redISub(n.redMul(c)),
                    d = this.z.redMul(o);
                return this.curve.jpoint(l, f, d)
            }, mo.prototype.dblp = function(t) {
                if (0 === t) return this;
                if (this.isInfinity()) return this;
                if (!t) return this.dbl();
                var e;
                if (this.curve.zeroA || this.curve.threeA) {
                    var r = this;
                    for (e = 0; e < t; e++) r = r.dbl();
                    return r
                }
                var i = this.curve.a,
                    n = this.curve.tinv,
                    s = this.x,
                    o = this.y,
                    a = this.z,
                    h = a.redSqr().redSqr(),
                    c = o.redAdd(o);
                for (e = 0; e < t; e++) {
                    var u = s.redSqr(),
                        l = c.redSqr(),
                        f = l.redSqr(),
                        d = u.redAdd(u).redIAdd(u).redIAdd(i.redMul(h)),
                        p = s.redMul(l),
                        g = d.redSqr().redISub(p.redAdd(p)),
                        m = p.redISub(g),
                        y = d.redMul(m);
                    y = y.redIAdd(y).redISub(f);
                    var v = c.redMul(a);
                    e + 1 < t && (h = h.redMul(f)), s = g, a = v, c = y
                }
                return this.curve.jpoint(s, c.redMul(n), a)
            }, mo.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, mo.prototype._zeroDbl = function() {
                var t, e, r;
                if (this.zOne) {
                    var i = this.x.redSqr(),
                        n = this.y.redSqr(),
                        s = n.redSqr(),
                        o = this.x.redAdd(n).redSqr().redISub(i).redISub(s);
                    o = o.redIAdd(o);
                    var a = i.redAdd(i).redIAdd(i),
                        h = a.redSqr().redISub(o).redISub(o),
                        c = s.redIAdd(s);
                    c = (c = c.redIAdd(c)).redIAdd(c), t = h, e = a.redMul(o.redISub(h)).redISub(c), r = this.y.redAdd(this.y)
                } else {
                    var u = this.x.redSqr(),
                        l = this.y.redSqr(),
                        f = l.redSqr(),
                        d = this.x.redAdd(l).redSqr().redISub(u).redISub(f);
                    d = d.redIAdd(d);
                    var p = u.redAdd(u).redIAdd(u),
                        g = p.redSqr(),
                        m = f.redIAdd(f);
                    m = (m = m.redIAdd(m)).redIAdd(m), t = g.redISub(d).redISub(d), e = p.redMul(d.redISub(t)).redISub(m), r = (r = this.y.redMul(this.z)).redIAdd(r)
                }
                return this.curve.jpoint(t, e, r)
            }, mo.prototype._threeDbl = function() {
                var t, e, r;
                if (this.zOne) {
                    var i = this.x.redSqr(),
                        n = this.y.redSqr(),
                        s = n.redSqr(),
                        o = this.x.redAdd(n).redSqr().redISub(i).redISub(s);
                    o = o.redIAdd(o);
                    var a = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),
                        h = a.redSqr().redISub(o).redISub(o);
                    t = h;
                    var c = s.redIAdd(s);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = a.redMul(o.redISub(h)).redISub(c), r = this.y.redAdd(this.y)
                } else {
                    var u = this.z.redSqr(),
                        l = this.y.redSqr(),
                        f = this.x.redMul(l),
                        d = this.x.redSub(u).redMul(this.x.redAdd(u));
                    d = d.redAdd(d).redIAdd(d);
                    var p = f.redIAdd(f),
                        g = (p = p.redIAdd(p)).redAdd(p);
                    t = d.redSqr().redISub(g), r = this.y.redAdd(this.z).redSqr().redISub(l).redISub(u);
                    var m = l.redSqr();
                    m = (m = (m = m.redIAdd(m)).redIAdd(m)).redIAdd(m), e = d.redMul(p.redISub(t)).redISub(m)
                }
                return this.curve.jpoint(t, e, r)
            }, mo.prototype._dbl = function() {
                var t = this.curve.a,
                    e = this.x,
                    r = this.y,
                    i = this.z,
                    n = i.redSqr().redSqr(),
                    s = e.redSqr(),
                    o = r.redSqr(),
                    a = s.redAdd(s).redIAdd(s).redIAdd(t.redMul(n)),
                    h = e.redAdd(e),
                    c = (h = h.redIAdd(h)).redMul(o),
                    u = a.redSqr().redISub(c.redAdd(c)),
                    l = c.redISub(u),
                    f = o.redSqr();
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var d = a.redMul(l).redISub(f),
                    p = r.redAdd(r).redMul(i);
                return this.curve.jpoint(u, d, p)
            }, mo.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var t = this.x.redSqr(),
                    e = this.y.redSqr(),
                    r = this.z.redSqr(),
                    i = e.redSqr(),
                    n = t.redAdd(t).redIAdd(t),
                    s = n.redSqr(),
                    o = this.x.redAdd(e).redSqr().redISub(t).redISub(i),
                    a = (o = (o = (o = o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr(),
                    h = i.redIAdd(i);
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var c = n.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(h),
                    u = e.redMul(c);
                u = (u = u.redIAdd(u)).redIAdd(u);
                var l = this.x.redMul(a).redISub(u);
                l = (l = l.redIAdd(l)).redIAdd(l);
                var f = this.y.redMul(c.redMul(h.redISub(c)).redISub(o.redMul(a)));
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var d = this.z.redAdd(o).redSqr().redISub(r).redISub(a);
                return this.curve.jpoint(l, f, d)
            }, mo.prototype.mul = function(t, e) {
                return t = new ti(t, e), this.curve._wnafMul(this, t)
            }, mo.prototype.eq = function(t) {
                if ("affine" === t.type) return this.eq(t.toJ());
                if (this === t) return !0;
                var e = this.z.redSqr(),
                    r = t.z.redSqr();
                if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
                var i = e.redMul(this.z),
                    n = r.redMul(t.z);
                return 0 === this.y.redMul(n).redISub(t.y.redMul(i)).cmpn(0)
            }, mo.prototype.eqXToP = function(t) {
                var e = this.z.redSqr(),
                    r = t.toRed(this.curve.red).redMul(e);
                if (0 === this.x.cmp(r)) return !0;
                for (var i = t.clone(), n = this.curve.redN.redMul(e);;) {
                    if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0) return !1;
                    if (r.redIAdd(n), 0 === this.x.cmp(r)) return !0
                }
            }, mo.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, mo.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var yo = Zs((function(t, e) {
                    var r = e;
                    r.base = ho, r.short = po, r.mont = null, r.edwards = null
                })),
                vo = Zs((function(t, e) {
                    var r, i = e,
                        n = io.assert;

                    function s(t) {
                        "short" === t.type ? this.curve = new yo.short(t) : "edwards" === t.type ? this.curve = new yo.edwards(t) : this.curve = new yo.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, n(this.g.validate(), "Invalid curve"), n(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function o(t, e) {
                        Object.defineProperty(i, t, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var r = new s(e);
                                return Object.defineProperty(i, t, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: r
                                }), r
                            }
                        })
                    }
                    i.PresetCurve = s, o("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: Zi.sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), o("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: Zi.sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), o("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: Zi.sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), o("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: Zi.sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), o("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: Zi.sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), o("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: Zi.sha256,
                        gRed: !1,
                        g: ["9"]
                    }), o("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: Zi.sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        r = null.crash()
                    } catch {
                        r = void 0
                    }
                    o("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: Zi.sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                    })
                }));

            function wo(t) {
                if (!(this instanceof wo)) return new wo(t);
                this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var e = ro.toArray(t.entropy, t.entropyEnc || "hex"),
                    r = ro.toArray(t.nonce, t.nonceEnc || "hex"),
                    i = ro.toArray(t.pers, t.persEnc || "hex");
                to(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, i)
            }
            var bo = wo;
            wo.prototype._init = function(t, e, r) {
                var i = t.concat(e).concat(r);
                this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                for (var n = 0; n < this.V.length; n++) this.K[n] = 0, this.V[n] = 1;
                this._update(i), this._reseed = 1, this.reseedInterval = 281474976710656
            }, wo.prototype._hmac = function() {
                return new Zi.hmac(this.hash, this.K)
            }, wo.prototype._update = function(t) {
                var e = this._hmac().update(this.V).update([0]);
                t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest())
            }, wo.prototype.reseed = function(t, e, r, i) {
                "string" != typeof e && (i = r, r = e, e = null), t = ro.toArray(t, e), r = ro.toArray(r, i), to(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1
            }, wo.prototype.generate = function(t, e, r, i) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" != typeof e && (i = r, r = e, e = null), r && (r = ro.toArray(r, i || "hex"), this._update(r));
                for (var n = []; n.length < t;) this.V = this._hmac().update(this.V).digest(), n = n.concat(this.V);
                var s = n.slice(0, t);
                return this._update(r), this._reseed++, ro.encode(s, e)
            };
            var _o = io.assert;

            function Ao(t, e) {
                this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc)
            }
            var Eo = Ao;
            Ao.fromPublic = function(t, e, r) {
                return e instanceof Ao ? e : new Ao(t, {
                    pub: e,
                    pubEnc: r
                })
            }, Ao.fromPrivate = function(t, e, r) {
                return e instanceof Ao ? e : new Ao(t, {
                    priv: e,
                    privEnc: r
                })
            }, Ao.prototype.validate = function() {
                var t = this.getPublic();
                return t.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, Ao.prototype.getPublic = function(t, e) {
                return "string" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub
            }, Ao.prototype.getPrivate = function(t) {
                return "hex" === t ? this.priv.toString(16, 2) : this.priv
            }, Ao.prototype._importPrivate = function(t, e) {
                this.priv = new ti(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, Ao.prototype._importPublic = function(t, e) {
                if (t.x || t.y) return "mont" === this.ec.curve.type ? _o(t.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && _o(t.x && t.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(t.x, t.y));
                this.pub = this.ec.curve.decodePoint(t, e)
            }, Ao.prototype.derive = function(t) {
                return t.validate() || _o(t.validate(), "public point not validated"), t.mul(this.priv).getX()
            }, Ao.prototype.sign = function(t, e, r) {
                return this.ec.sign(t, this, e, r)
            }, Ao.prototype.verify = function(t, e) {
                return this.ec.verify(t, e, this)
            }, Ao.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var So = io.assert;

            function Io(t, e) {
                if (t instanceof Io) return t;
                this._importDER(t, e) || (So(t.r && t.s, "Signature without r or s"), this.r = new ti(t.r, 16), this.s = new ti(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
            }
            var Po = Io;

            function Mo() {
                this.place = 0
            }

            function xo(t, e) {
                var r = t[e.place++];
                if (!(128 & r)) return r;
                var i = 15 & r;
                if (0 === i || i > 4) return !1;
                for (var n = 0, s = 0, o = e.place; s < i; s++, o++) n <<= 8, n |= t[o], n >>>= 0;
                return !(n <= 127) && (e.place = o, n)
            }

            function Oo(t) {
                for (var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;) e++;
                return 0 === e ? t : t.slice(e)
            }

            function Co(t, e) {
                if (e < 128) t.push(e);
                else {
                    var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                    for (t.push(128 | r); --r;) t.push(e >>> (r << 3) & 255);
                    t.push(e)
                }
            }
            Io.prototype._importDER = function(t, e) {
                t = io.toArray(t, e);
                var r = new Mo;
                if (48 !== t[r.place++]) return !1;
                var i = xo(t, r);
                if (!1 === i || i + r.place !== t.length || 2 !== t[r.place++]) return !1;
                var n = xo(t, r);
                if (!1 === n) return !1;
                var s = t.slice(r.place, n + r.place);
                if (r.place += n, 2 !== t[r.place++]) return !1;
                var o = xo(t, r);
                if (!1 === o || t.length !== o + r.place) return !1;
                var a = t.slice(r.place, o + r.place);
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1)
                }
                if (0 === a[0]) {
                    if (!(128 & a[1])) return !1;
                    a = a.slice(1)
                }
                return this.r = new ti(s), this.s = new ti(a), this.recoveryParam = null, !0
            }, Io.prototype.toDER = function(t) {
                var e = this.r.toArray(),
                    r = this.s.toArray();
                for (128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = Oo(e), r = Oo(r); !r[0] && !(128 & r[1]);) r = r.slice(1);
                var i = [2];
                Co(i, e.length), (i = i.concat(e)).push(2), Co(i, r.length);
                var n = i.concat(r),
                    s = [48];
                return Co(s, n.length), s = s.concat(n), io.encode(s, t)
            };
            var No = function() {
                    throw new Error("unsupported")
                },
                Ro = io.assert;

            function To(t) {
                if (!(this instanceof To)) return new To(t);
                "string" == typeof t && (Ro(Object.prototype.hasOwnProperty.call(vo, t), "Unknown curve " + t), t = vo[t]), t instanceof vo.PresetCurve && (t = {
                    curve: t
                }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash
            }
            var Uo = To;
            To.prototype.keyPair = function(t) {
                return new Eo(this, t)
            }, To.prototype.keyFromPrivate = function(t, e) {
                return Eo.fromPrivate(this, t, e)
            }, To.prototype.keyFromPublic = function(t, e) {
                return Eo.fromPublic(this, t, e)
            }, To.prototype.genKeyPair = function(t) {
                t || (t = {});
                for (var e = new bo({
                        hash: this.hash,
                        pers: t.pers,
                        persEnc: t.persEnc || "utf8",
                        entropy: t.entropy || No(this.hash.hmacStrength),
                        entropyEnc: t.entropy && t.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), r = this.n.byteLength(), i = this.n.sub(new ti(2));;) {
                    var n = new ti(e.generate(r));
                    if (!(n.cmp(i) > 0)) return n.iaddn(1), this.keyFromPrivate(n)
                }
            }, To.prototype._truncateToN = function(t, e) {
                var r = 8 * t.byteLength() - this.n.bitLength();
                return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
            }, To.prototype.sign = function(t, e, r, i) {
                "object" == typeof r && (i = r, r = null), i || (i = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new ti(t, 16));
                for (var n = this.n.byteLength(), s = e.getPrivate().toArray("be", n), o = t.toArray("be", n), a = new bo({
                        hash: this.hash,
                        entropy: s,
                        nonce: o,
                        pers: i.pers,
                        persEnc: i.persEnc || "utf8"
                    }), h = this.n.sub(new ti(1)), c = 0;; c++) {
                    var u = i.k ? i.k(c) : new ti(a.generate(this.n.byteLength()));
                    if (!((u = this._truncateToN(u, !0)).cmpn(1) <= 0 || u.cmp(h) >= 0)) {
                        var l = this.g.mul(u);
                        if (!l.isInfinity()) {
                            var f = l.getX(),
                                d = f.umod(this.n);
                            if (0 !== d.cmpn(0)) {
                                var p = u.invm(this.n).mul(d.mul(e.getPrivate()).iadd(t));
                                if (0 !== (p = p.umod(this.n)).cmpn(0)) {
                                    var g = (l.getY().isOdd() ? 1 : 0) | (0 !== f.cmp(d) ? 2 : 0);
                                    return i.canonical && p.cmp(this.nh) > 0 && (p = this.n.sub(p), g ^= 1), new Po({
                                        r: d,
                                        s: p,
                                        recoveryParam: g
                                    })
                                }
                            }
                        }
                    }
                }
            }, To.prototype.verify = function(t, e, r, i) {
                t = this._truncateToN(new ti(t, 16)), r = this.keyFromPublic(r, i);
                var n = (e = new Po(e, "hex")).r,
                    s = e.s;
                if (n.cmpn(1) < 0 || n.cmp(this.n) >= 0 || s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                var o, a = s.invm(this.n),
                    h = a.mul(t).umod(this.n),
                    c = a.mul(n).umod(this.n);
                return this.curve._maxwellTrick ? !(o = this.g.jmulAdd(h, r.getPublic(), c)).isInfinity() && o.eqXToP(n) : !(o = this.g.mulAdd(h, r.getPublic(), c)).isInfinity() && 0 === o.getX().umod(this.n).cmp(n)
            }, To.prototype.recoverPubKey = function(t, e, r, i) {
                Ro((3 & r) === r, "The recovery param is more than two bits"), e = new Po(e, i);
                var n = this.n,
                    s = new ti(t),
                    o = e.r,
                    a = e.s,
                    h = 1 & r,
                    c = r >> 1;
                if (o.cmp(this.curve.p.umod(this.curve.n)) >= 0 && c) throw new Error("Unable to find sencond key candinate");
                o = c ? this.curve.pointFromX(o.add(this.curve.n), h) : this.curve.pointFromX(o, h);
                var u = e.r.invm(n),
                    l = n.sub(s).mul(u).umod(n),
                    f = a.mul(u).umod(n);
                return this.g.mulAdd(l, o, f)
            }, To.prototype.getKeyRecoveryParam = function(t, e, r, i) {
                if (null !== (e = new Po(e, i)).recoveryParam) return e.recoveryParam;
                for (var n = 0; n < 4; n++) {
                    var s;
                    try {
                        s = this.recoverPubKey(t, e, n)
                    } catch {
                        continue
                    }
                    if (s.eq(r)) return n
                }
                throw new Error("Unable to find valid recovery factor")
            };
            var Do = Zs((function(t, e) {
                    var r = e;
                    r.version = "6.5.4", r.utils = io, r.rand = function() {
                        throw new Error("unsupported")
                    }, r.curve = yo, r.curves = vo, r.ec = Uo, r.eddsa = null
                })),
                ko = Do.ec;
            const Bo = new Lr("signing-key/5.7.0");
            let Lo = null;

            function qo() {
                return Lo || (Lo = new ko("secp256k1")), Lo
            }
            class jo {
                constructor(t) {
                    Yi(this, "curve", "secp256k1"), Yi(this, "privateKey", Wr(t)), 32 !== function(t) {
                        if ("string" != typeof t) t = Wr(t);
                        else if (!Vr(t) || t.length % 2) return null;
                        return (t.length - 2) / 2
                    }(this.privateKey) && Bo.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    const e = qo().keyFromPrivate(Kr(this.privateKey));
                    Yi(this, "publicKey", "0x" + e.getPublic(!1, "hex")), Yi(this, "compressedPublicKey", "0x" + e.getPublic(!0, "hex")), Yi(this, "_isSigningKey", !0)
                }
                _addPoint(t) {
                    const e = qo().keyFromPublic(Kr(this.publicKey)),
                        r = qo().keyFromPublic(Kr(t));
                    return "0x" + e.pub.add(r.pub).encodeCompressed("hex")
                }
                signDigest(t) {
                    const e = qo().keyFromPrivate(Kr(this.privateKey)),
                        r = Kr(t);
                    32 !== r.length && Bo.throwArgumentError("bad digest length", "digest", t);
                    const i = e.sign(r, {
                        canonical: !0
                    });
                    return Yr({
                        recoveryParam: i.recoveryParam,
                        r: Qr("0x" + i.r.toString(16), 32),
                        s: Qr("0x" + i.s.toString(16), 32)
                    })
                }
                computeSharedSecret(t) {
                    const e = qo().keyFromPrivate(Kr(this.privateKey)),
                        r = qo().keyFromPublic(Kr(zo(t)));
                    return Qr("0x" + e.derive(r.getPublic()).toString(16), 32)
                }
                static isSigningKey(t) {
                    return !(!t || !t._isSigningKey)
                }
            }

            function zo(t, e) {
                const r = Kr(t);
                if (32 === r.length) {
                    const t = new jo(r);
                    return e ? "0x" + qo().keyFromPrivate(r).getPublic(!0, "hex") : t.publicKey
                }
                return 33 === r.length ? e ? Wr(r) : "0x" + qo().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? e ? "0x" + qo().keyFromPublic(r).getPublic(!0, "hex") : Wr(r) : Bo.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
            var Fo;

            function Ho(t, e) {
                return function(t) {
                    return Qi(Gr(Jr(Gr(zo(t), 1)), 12))
                }(function(t, e) {
                    const r = Yr(e),
                        i = {
                            r: Kr(r.r),
                            s: Kr(r.s)
                        };
                    return "0x" + qo().recoverPubKey(Kr(t), i, r.recoveryParam).encode("hex", !1)
                }(Kr(t), e))
            }
            new Lr("transactions/5.7.0"),
                function(t) {
                    t[t.legacy = 0] = "legacy", t[t.eip2930 = 1] = "eip2930", t[t.eip1559 = 2] = "eip1559"
                }(Fo || (Fo = {}));
            const Ko = "https://rpc.walletconnect.com/v1";
            async function Vo(t, e, r, i, n, s) {
                switch (r.t) {
                    case "eip191":
                        return function(t, e, r) {
                            return Ho(Ki(e), r).toLowerCase() === t.toLowerCase()
                        }(t, e, r.s);
                    case "eip1271":
                        return await async function(t, e, r, i, n, s) {
                            try {
                                const o = "0x1626ba7e",
                                    a = "0000000000000000000000000000000000000000000000000000000000000040",
                                    h = "0000000000000000000000000000000000000000000000000000000000000041",
                                    c = r.substring(2),
                                    u = o + Ki(e).substring(2) + a + h + c,
                                    l = await fetch(`${s||Ko}/?chainId=${i}&projectId=${n}`, {
                                        method: "POST",
                                        body: JSON.stringify({
                                            id: $o(),
                                            jsonrpc: "2.0",
                                            method: "eth_call",
                                            params: [{
                                                to: t,
                                                data: u
                                            }, "latest"]
                                        })
                                    }),
                                    {
                                        result: f
                                    } = await l.json();
                                return !!f && f.slice(0, o.length).toLowerCase() === o.toLowerCase()
                            } catch (o) {
                                return console.error("isValidEip1271Signature: ", o), !1
                            }
                        }(t, e, r.s, i, n, s);
                    default:
                        throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`)
                }
            }

            function $o() {
                return Date.now() + Math.floor(1e3 * Math.random())
            }
            var Wo = Object.defineProperty,
                Go = Object.defineProperties,
                Qo = Object.getOwnPropertyDescriptors,
                Yo = Object.getOwnPropertySymbols,
                Jo = Object.prototype.hasOwnProperty,
                Xo = Object.prototype.propertyIsEnumerable,
                Zo = (t, e, r) => e in t ? Wo(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                ta = (t, e) => {
                    for (var r in e || (e = {})) Jo.call(e, r) && Zo(t, r, e[r]);
                    if (Yo)
                        for (var r of Yo(e)) Xo.call(e, r) && Zo(t, r, e[r]);
                    return t
                },
                ea = (t, e) => Go(t, Qo(e));
            const ra = t => t ? .split(":"),
                ia = t => {
                    const e = t && ra(t);
                    if (e) return t.includes("did:pkh:") ? e[3] : e[1]
                },
                na = t => {
                    const e = t && ra(t);
                    if (e) return e[2] + ":" + e[3]
                },
                sa = t => {
                    const e = t && ra(t);
                    if (e) return e.pop()
                };
            async function oa(t) {
                const {
                    cacao: e,
                    projectId: r
                } = t, {
                    s: i,
                    p: n
                } = e, s = aa(n, n.iss), o = sa(n.iss);
                return await Vo(o, s, i, ia(n.iss), r)
            }
            const aa = (t, e) => {
                const r = `${t.domain} wants you to sign in with your Ethereum account:`,
                    i = sa(e);
                if (!t.aud && !t.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
                let n = t.statement || void 0;
                const s = `URI: ${t.aud||t.uri}`,
                    o = `Version: ${t.version}`,
                    a = `Chain ID: ${ia(e)}`,
                    h = `Nonce: ${t.nonce}`,
                    c = `Issued At: ${t.iat}`,
                    u = t.exp ? `Expiration Time: ${t.exp}` : void 0,
                    l = t.nbf ? `Not Before: ${t.nbf}` : void 0,
                    f = t.requestId ? `Request ID: ${t.requestId}` : void 0,
                    d = t.resources ? `Resources:${t.resources.map((t=>`\n- ${t}`)).join("")}` : void 0,
                    p = va(t.resources);
                if (p) {
                    n = ga(n, la(p))
                }
                return [r, i, "", n, "", s, o, a, h, c, u, l, f, d].filter((t => null != t)).join("\n")
            };

            function ha(t) {
                if (!t) throw new Error("No recap provided, value is undefined");
                if (!t.att) throw new Error("No `att` property found");
                const e = Object.keys(t.att);
                if (null == e || !e.length) throw new Error("No resources found in `att` property");
                e.forEach((e => {
                    const r = t.att[e];
                    if (Array.isArray(r)) throw new Error(`Resource must be an object: ${e}`);
                    if ("object" != typeof r) throw new Error(`Resource must be an object: ${e}`);
                    if (!Object.keys(r).length) throw new Error(`Resource object is empty: ${e}`);
                    Object.keys(r).forEach((t => {
                        const e = r[t];
                        if (!Array.isArray(e)) throw new Error(`Ability limits ${t} must be an array of objects, found: ${e}`);
                        if (!e.length) throw new Error(`Value of ${t} is empty array, must be an array with objects`);
                        e.forEach((e => {
                            if ("object" != typeof e) throw new Error(`Ability limits (${t}) must be an array of objects, found: ${e}`)
                        }))
                    }))
                }))
            }

            function ca(t, e) {
                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                e = e ? .sort(((t, e) => t.localeCompare(e)));
                const i = e.map((e => ({
                    [`${t}/${e}`]: [r]
                })));
                return Object.assign({}, ...i)
            }

            function ua(t) {
                return ha(t), `urn:recap:${function(t){return Qe.from(JSON.stringify(t)).toString("base64")}(t).replace(/=/g,"")}`
            }

            function la(t) {
                const e = function(t) {
                    return JSON.parse(Qe.from(t, "base64").toString("utf-8"))
                }(t.replace("urn:recap:", ""));
                return ha(e), e
            }

            function fa(t, e, r) {
                const i = function(t, e, r) {
                    let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                    return r ? .sort(((t, e) => t.localeCompare(e))), {
                        att: {
                            [t]: ca(e, r, i)
                        }
                    }
                }(t, e, r);
                return ua(i)
            }

            function da(t) {
                return t && t.includes("urn:recap:")
            }

            function pa(t, e) {
                const r = function(t, e) {
                    ha(t), ha(e);
                    const r = Object.keys(t.att).concat(Object.keys(e.att)).sort(((t, e) => t.localeCompare(e))),
                        i = {
                            att: {}
                        };
                    return r.forEach((r => {
                        var n, s;
                        Object.keys((null == (n = t.att) ? void 0 : n[r]) || {}).concat(Object.keys((null == (s = e.att) ? void 0 : s[r]) || {})).sort(((t, e) => t.localeCompare(e))).forEach((n => {
                            var s, o;
                            i.att[r] = ea(ta({}, i.att[r]), {
                                [n]: (null == (s = t.att[r]) ? void 0 : s[n]) || (null == (o = e.att[r]) ? void 0 : o[n])
                            })
                        }))
                    })), i
                }(la(t), la(e));
                return ua(r)
            }

            function ga() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                    e = arguments.length > 1 ? arguments[1] : void 0;
                ha(e);
                const r = "I further authorize the stated URI to perform the following actions on my behalf: ";
                if (t.includes(r)) return t;
                const i = [];
                let n = 0;
                Object.keys(e.att).forEach((t => {
                    const r = Object.keys(e.att[t]).map((t => ({
                        ability: t.split("/")[0],
                        action: t.split("/")[1]
                    })));
                    r.sort(((t, e) => t.action.localeCompare(e.action)));
                    const s = {};
                    r.forEach((t => {
                        s[t.ability] || (s[t.ability] = []), s[t.ability].push(t.action)
                    }));
                    const o = Object.keys(s).map((e => (n++, `(${n}) '${e}': '${s[e].join("', '")}' for '${t}'.`)));
                    i.push(o.join(", ").replace(".,", "."))
                }));
                return `${t?t+" ":""}${`${r}${i.join(" ")}`}`
            }

            function ma(t) {
                var e;
                const r = la(t);
                ha(r);
                const i = null == (e = r.att) ? void 0 : e.eip155;
                return i ? Object.keys(i).map((t => t.split("/")[1])) : []
            }

            function ya(t) {
                const e = la(t);
                ha(e);
                const r = [];
                return Object.values(e.att).forEach((t => {
                    Object.values(t).forEach((t => {
                        var e;
                        null != (e = t ? .[0]) && e.chains && r.push(t[0].chains)
                    }))
                })), [...new Set(r.flat())]
            }

            function va(t) {
                if (!t) return;
                const e = t ? .[t.length - 1];
                return da(e) ? e : void 0
            }
            const wa = "base10",
                ba = "base16",
                _a = "base64pad",
                Aa = "utf8",
                Ea = 0,
                Sa = 1,
                Ia = 0,
                Pa = 1,
                Ma = 12,
                xa = 32;

            function Oa() {
                return $e((0, dt.randomBytes)(xa), ba)
            }

            function Ca(t) {
                return $e((0, pt.tW)(Ve(t, ba)), ba)
            }

            function Na(t) {
                return $e((0, pt.tW)(Ve(t, Aa)), ba)
            }

            function Ra(t) {
                return Number($e(t, wa))
            }

            function Ta(t) {
                const e = function(t) {
                    return Ve(`${t}`, wa)
                }(typeof t.type < "u" ? t.type : Ea);
                if (Ra(e) === Sa && typeof t.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
                const r = typeof t.senderPublicKey < "u" ? Ve(t.senderPublicKey, ba) : void 0,
                    i = typeof t.iv < "u" ? Ve(t.iv, ba) : (0, dt.randomBytes)(Ma);
                return function(t) {
                    if (Ra(t.type) === Sa) {
                        if (typeof t.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
                        return $e(yt([t.type, t.senderPublicKey, t.iv, t.sealed]), _a)
                    }
                    return $e(yt([t.type, t.iv, t.sealed]), _a)
                }({
                    type: e,
                    sealed: new lt.g6(Ve(t.symKey, ba)).seal(i, Ve(t.message, Aa)),
                    iv: i,
                    senderPublicKey: r
                })
            }

            function Ua(t) {
                const e = Ve(t, _a),
                    r = e.slice(Ia, Pa),
                    i = Pa;
                if (Ra(r) === Sa) {
                    const t = i + xa,
                        n = t + Ma,
                        s = e.slice(i, t),
                        o = e.slice(t, n);
                    return {
                        type: r,
                        sealed: e.slice(n),
                        iv: o,
                        senderPublicKey: s
                    }
                }
                const n = i + Ma,
                    s = e.slice(i, n);
                return {
                    type: r,
                    sealed: e.slice(n),
                    iv: s
                }
            }

            function Da(t) {
                const e = t ? .type || Ea;
                if (e === Sa) {
                    if (typeof t ? .senderPublicKey > "u") throw new Error("missing sender public key");
                    if (typeof t ? .receiverPublicKey > "u") throw new Error("missing receiver public key")
                }
                return {
                    type: e,
                    senderPublicKey: t ? .senderPublicKey,
                    receiverPublicKey: t ? .receiverPublicKey
                }
            }

            function ka(t) {
                return t.type === Sa && "string" == typeof t.senderPublicKey && "string" == typeof t.receiverPublicKey
            }

            function Ba(t) {
                return t ? .relay || {
                    protocol: "irn"
                }
            }

            function La(t) {
                const e = We[t];
                if (typeof e > "u") throw new Error(`Relay Protocol not supported: ${t}`);
                return e
            }
            var qa = Object.defineProperty,
                ja = Object.defineProperties,
                za = Object.getOwnPropertyDescriptors,
                Fa = Object.getOwnPropertySymbols,
                Ha = Object.prototype.hasOwnProperty,
                Ka = Object.prototype.propertyIsEnumerable,
                Va = (t, e, r) => e in t ? qa(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                $a = (t, e) => {
                    for (var r in e || (e = {})) Ha.call(e, r) && Va(t, r, e[r]);
                    if (Fa)
                        for (var r of Fa(e)) Ka.call(e, r) && Va(t, r, e[r]);
                    return t
                };

            function Wa(t) {
                const e = {},
                    r = "relay" + (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "-");
                return Object.keys(t).forEach((i => {
                    if (i.startsWith(r)) {
                        const n = i.replace(r, ""),
                            s = t[i];
                        e[n] = s
                    }
                })), e
            }

            function Ga(t) {
                const e = (t = (t = t.includes("wc://") ? t.replace("wc://", "") : t).includes("wc:") ? t.replace("wc:", "") : t).indexOf(":"),
                    r = -1 !== t.indexOf("?") ? t.indexOf("?") : void 0,
                    i = t.substring(0, e),
                    n = t.substring(e + 1, r).split("@"),
                    s = typeof r < "u" ? t.substring(r) : "",
                    o = ut.parse(s),
                    a = "string" == typeof o.methods ? o.methods.split(",") : void 0;
                return {
                    protocol: i,
                    topic: Qa(n[0]),
                    version: parseInt(n[1], 10),
                    symKey: o.symKey,
                    relay: Wa(o),
                    methods: a,
                    expiryTimestamp: o.expiryTimestamp ? parseInt(o.expiryTimestamp, 10) : void 0
                }
            }

            function Qa(t) {
                return t.startsWith("//") ? t.substring(2) : t
            }

            function Ya(t) {
                return `${t.protocol}:${t.topic}@${t.version}?` + ut.stringify($a(((t, e) => ja(t, za(e)))($a({
                    symKey: t.symKey
                }, function(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "-";
                    const r = {};
                    return Object.keys(t).forEach((i => {
                        const n = "relay" + e + i;
                        t[i] && (r[n] = t[i])
                    })), r
                }(t.relay)), {
                    expiryTimestamp: t.expiryTimestamp
                }), t.methods ? {
                    methods: t.methods.join(",")
                } : {}))
            }
            Object.defineProperty, Object.defineProperties, Object.getOwnPropertyDescriptors, Object.getOwnPropertySymbols, Object.prototype.hasOwnProperty, Object.prototype.propertyIsEnumerable;

            function Ja(t) {
                const e = [];
                return t.forEach((t => {
                    const [r, i] = t.split(":");
                    e.push(`${r}:${i}`)
                })), e
            }

            function Xa(t) {
                return t.includes(":")
            }

            function Za(t) {
                return Xa(t) ? t.split(":")[0] : t
            }

            function th(t, e) {
                e = e.map((t => t.replace("did:pkh:", "")));
                const r = function(t) {
                    const e = {};
                    return t ? .forEach((t => {
                        const [r, i] = t.split(":");
                        e[r] || (e[r] = {
                            accounts: [],
                            chains: [],
                            events: []
                        }), e[r].accounts.push(t), e[r].chains.push(`${r}:${i}`)
                    })), e
                }(e);
                for (const [i, n] of Object.entries(r)) n.methods ? n.methods = Ir(n.methods, t) : n.methods = t, n.events = ["chainChanged", "accountsChanged"];
                return r
            }
            const eh = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                },
                rh = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };

            function ih(t, e) {
                const {
                    message: r,
                    code: i
                } = rh[t];
                return {
                    message: e ? `${r} ${e}` : r,
                    code: i
                }
            }

            function nh(t, e) {
                const {
                    message: r,
                    code: i
                } = eh[t];
                return {
                    message: e ? `${r} ${e}` : r,
                    code: i
                }
            }

            function sh(t, e) {
                return !!Array.isArray(t) && (!(typeof e < "u" && t.length) || t.every(e))
            }

            function oh(t) {
                return Object.getPrototypeOf(t) === Object.prototype && Object.keys(t).length
            }

            function ah(t) {
                return typeof t > "u"
            }

            function hh(t, e) {
                return !(!e || !ah(t)) || "string" == typeof t && !!t.trim().length
            }

            function ch(t, e) {
                return !(!e || !ah(t)) || "number" == typeof t && !isNaN(t)
            }

            function uh(t) {
                return !(!hh(t, !1) || !t.includes(":")) && 2 === t.split(":").length
            }

            function lh(t) {
                let e = !0;
                return sh(t) ? t.length && (e = t.every((t => hh(t, !1)))) : e = !1, e
            }

            function fh(t, e, r) {
                let i = null;
                return Object.entries(t).forEach((t => {
                    let [n, s] = t;
                    if (i) return;
                    const o = function(t, e, r) {
                        let i = null;
                        return sh(e) && e.length ? e.forEach((t => {
                            i || uh(t) || (i = nh("UNSUPPORTED_CHAINS", `${r}, chain ${t} should be a string and conform to "namespace:chainId" format`))
                        })) : uh(t) || (i = nh("UNSUPPORTED_CHAINS", `${r}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), i
                    }(n, Ze(n, s), `${e} ${r}`);
                    o && (i = o)
                })), i
            }

            function dh(t, e) {
                let r = null;
                return sh(t) ? t.forEach((t => {
                    r || function(t) {
                        if (hh(t, !1) && t.includes(":")) {
                            const e = t.split(":");
                            if (3 === e.length) {
                                const t = e[0] + ":" + e[1];
                                return !!e[2] && uh(t)
                            }
                        }
                        return !1
                    }(t) || (r = nh("UNSUPPORTED_ACCOUNTS", `${e}, account ${t} should be a string and conform to "namespace:chainId:address" format`))
                })) : r = nh("UNSUPPORTED_ACCOUNTS", `${e}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r
            }

            function ph(t, e) {
                let r = null;
                return Object.values(t).forEach((t => {
                    if (r) return;
                    const i = function(t, e) {
                        let r = null;
                        return lh(t ? .methods) ? lh(t ? .events) || (r = nh("UNSUPPORTED_EVENTS", `${e}, events should be an array of strings or empty array for no events`)) : r = nh("UNSUPPORTED_METHODS", `${e}, methods should be an array of strings or empty array for no methods`), r
                    }(t, `${e}, namespace`);
                    i && (r = i)
                })), r
            }

            function gh(t, e) {
                let r = null;
                if (t && oh(t)) {
                    const i = ph(t, e);
                    i && (r = i);
                    const n = function(t, e) {
                        let r = null;
                        return Object.values(t).forEach((t => {
                            if (r) return;
                            const i = dh(t ? .accounts, `${e} namespace`);
                            i && (r = i)
                        })), r
                    }(t, e);
                    n && (r = n)
                } else r = ih("MISSING_OR_INVALID", `${e}, namespaces should be an object with data`);
                return r
            }

            function mh(t) {
                return hh(t.protocol, !0)
            }

            function yh(t) {
                return typeof t < "u" && null !== typeof t
            }

            function vh(t, e) {
                return !(!uh(e) || ! function(t) {
                    const e = [];
                    return Object.values(t).forEach((t => {
                        e.push(...Ja(t.accounts))
                    })), e
                }(t).includes(e))
            }

            function wh(t, e, r) {
                return !!hh(r, !1) && function(t, e) {
                    const r = [];
                    return Object.values(t).forEach((t => {
                        Ja(t.accounts).includes(e) && r.push(...t.methods)
                    })), r
                }(t, e).includes(r)
            }

            function bh(t, e, r) {
                return !!hh(r, !1) && function(t, e) {
                    const r = [];
                    return Object.values(t).forEach((t => {
                        Ja(t.accounts).includes(e) && r.push(...t.events)
                    })), r
                }(t, e).includes(r)
            }

            function _h(t, e, r) {
                let i = null;
                const n = function(t) {
                        const e = {};
                        return Object.keys(t).forEach((r => {
                            var i;
                            r.includes(":") ? e[r] = t[r] : null == (i = t[r].chains) || i.forEach((i => {
                                e[i] = {
                                    methods: t[r].methods,
                                    events: t[r].events
                                }
                            }))
                        })), e
                    }(t),
                    s = function(t) {
                        const e = {};
                        return Object.keys(t).forEach((r => {
                            if (r.includes(":")) e[r] = t[r];
                            else {
                                const i = Ja(t[r].accounts);
                                i ? .forEach((i => {
                                    e[i] = {
                                        accounts: t[r].accounts.filter((t => t.includes(`${i}:`))),
                                        methods: t[r].methods,
                                        events: t[r].events
                                    }
                                }))
                            }
                        })), e
                    }(e),
                    o = Object.keys(n),
                    a = Object.keys(s),
                    h = Ah(Object.keys(t)),
                    c = Ah(Object.keys(e)),
                    u = h.filter((t => !c.includes(t)));
                return u.length && (i = ih("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${u.toString()}\n      Received: ${Object.keys(e).toString()}`)), gr(o, a) || (i = ih("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.\n      Required: ${o.toString()}\n      Approved: ${a.toString()}`)), Object.keys(e).forEach((t => {
                    if (!t.includes(":") || i) return;
                    const n = Ja(e[t].accounts);
                    n.includes(t) || (i = ih("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${t}\n        Required: ${t}\n        Approved: ${n.toString()}`))
                })), o.forEach((t => {
                    i || (gr(n[t].methods, s[t].methods) ? gr(n[t].events, s[t].events) || (i = ih("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${t}`)) : i = ih("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${t}`))
                })), i
            }

            function Ah(t) {
                return [...new Set(t.map((t => t.includes(":") ? t.split(":")[0] : t)))]
            }

            function Eh() {
                const t = fr();
                return new Promise((e => {
                    switch (t) {
                        case ar.browser:
                            e(lr() && navigator ? .onLine);
                            break;
                        case ar.reactNative:
                            e(async function() {
                                if (ur() && typeof r.g < "u" && null != r.g && r.g.NetInfo) {
                                    const t = await (null == r.g ? void 0 : r.g.NetInfo.fetch());
                                    return t ? .isConnected
                                }
                                return !0
                            }());
                            break;
                        case ar.node:
                        default:
                            e(!0)
                    }
                }))
            }

            function Sh(t) {
                switch (fr()) {
                    case ar.browser:
                        ! function(t) {
                            !ur() && lr() && (window.addEventListener("online", (() => t(!0))), window.addEventListener("offline", (() => t(!1))))
                        }(t);
                        break;
                    case ar.reactNative:
                        ! function(t) {
                            ur() && typeof r.g < "u" && null != r.g && r.g.NetInfo && r.g ? .NetInfo.addEventListener((e => t(e ? .isConnected)))
                        }(t);
                    case ar.node:
                }
            }
            const Ih = {};
            class Ph {
                static get(t) {
                    return Ih[t]
                }
                static set(t, e) {
                    Ih[t] = e
                }
                static delete(t) {
                    delete Ih[t]
                }
            }
            const Mh = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/,
                xh = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,
                Oh = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;

            function Ch(t, e) {
                if (!("__proto__" === t || "constructor" === t && e && "object" === typeof e && "prototype" in e)) return e;
                ! function(t) {
                    console.warn(`[destr] Dropping "${t}" key to prevent prototype pollution.`)
                }(t)
            }

            function Nh(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if ("string" !== typeof t) return t;
                const r = t.trim();
                if ('"' === t[0] && t.endsWith('"') && !t.includes("\\")) return r.slice(1, -1);
                if (r.length <= 9) {
                    const t = r.toLowerCase();
                    if ("true" === t) return !0;
                    if ("false" === t) return !1;
                    if ("undefined" === t) return;
                    if ("null" === t) return null;
                    if ("nan" === t) return Number.NaN;
                    if ("infinity" === t) return Number.POSITIVE_INFINITY;
                    if ("-infinity" === t) return Number.NEGATIVE_INFINITY
                }
                if (!Oh.test(t)) {
                    if (e.strict) throw new SyntaxError("[destr] Invalid JSON");
                    return t
                }
                try {
                    if (Mh.test(t) || xh.test(t)) {
                        if (e.strict) throw new Error("[destr] Possible prototype pollution");
                        return JSON.parse(t, Ch)
                    }
                    return JSON.parse(t)
                } catch (i) {
                    if (e.strict) throw i;
                    return t
                }
            }
            var Rh = r(88381).Buffer;

            function Th(t) {
                try {
                    for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++) r[i - 1] = arguments[i];
                    return (n = t(...r)) && "function" === typeof n.then ? n : Promise.resolve(n)
                } catch (s) {
                    return Promise.reject(s)
                }
                var n
            }

            function Uh(t) {
                if (function(t) {
                        const e = typeof t;
                        return null === t || "object" !== e && "function" !== e
                    }(t)) return String(t);
                if (function(t) {
                        const e = Object.getPrototypeOf(t);
                        return !e || e.isPrototypeOf(Object)
                    }(t) || Array.isArray(t)) return JSON.stringify(t);
                if ("function" === typeof t.toJSON) return Uh(t.toJSON());
                throw new Error("[unstorage] Cannot stringify value!")
            }

            function Dh() {
                if (void 0 === typeof Rh) throw new TypeError("[unstorage] Buffer is not supported!")
            }
            const kh = "base64:";

            function Bh(t) {
                return t ? t.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "") : ""
            }

            function Lh() {
                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                return Bh(e.join(":"))
            }

            function qh(t) {
                return (t = Bh(t)) ? t + ":" : ""
            }
            const jh = () => {
                const t = new Map;
                return {
                    name: "memory",
                    options: {},
                    hasItem: e => t.has(e),
                    getItem: e => t.get(e) ? ? null,
                    getItemRaw: e => t.get(e) ? ? null,
                    setItem(e, r) {
                        t.set(e, r)
                    },
                    setItemRaw(e, r) {
                        t.set(e, r)
                    },
                    removeItem(e) {
                        t.delete(e)
                    },
                    getKeys: () => Array.from(t.keys()),
                    clear() {
                        t.clear()
                    },
                    dispose() {
                        t.clear()
                    }
                }
            };

            function zh() {
                const t = {
                        mounts: {
                            "": (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).driver || jh()
                        },
                        mountpoints: [""],
                        watching: !1,
                        watchListeners: [],
                        unwatch: {}
                    },
                    e = e => {
                        for (const r of t.mountpoints)
                            if (e.startsWith(r)) return {
                                base: r,
                                relativeKey: e.slice(r.length),
                                driver: t.mounts[r]
                            };
                        return {
                            base: "",
                            relativeKey: e,
                            driver: t.mounts[""]
                        }
                    },
                    r = (e, r) => t.mountpoints.filter((t => t.startsWith(e) || r && e.startsWith(t))).map((r => ({
                        relativeBase: e.length > r.length ? e.slice(r.length) : void 0,
                        mountpoint: r,
                        driver: t.mounts[r]
                    }))),
                    i = (e, r) => {
                        if (t.watching) {
                            r = Bh(r);
                            for (const i of t.watchListeners) i(e, r)
                        }
                    },
                    n = async () => {
                        if (t.watching) {
                            for (const e in t.unwatch) await t.unwatch[e]();
                            t.unwatch = {}, t.watching = !1
                        }
                    },
                    s = (t, r, i) => {
                        const n = new Map,
                            s = t => {
                                let e = n.get(t.base);
                                return e || (e = {
                                    driver: t.driver,
                                    base: t.base,
                                    items: []
                                }, n.set(t.base, e)), e
                            };
                        for (const o of t) {
                            const t = "string" === typeof o,
                                i = Bh(t ? o : o.key),
                                n = t ? void 0 : o.value,
                                a = t || !o.options ? r : { ...r,
                                    ...o.options
                                },
                                h = e(i);
                            s(h).items.push({
                                key: i,
                                value: n,
                                relativeKey: h.relativeKey,
                                options: a
                            })
                        }
                        return Promise.all([...n.values()].map((t => i(t)))).then((t => t.flat()))
                    },
                    o = {
                        hasItem(t) {
                            let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t = Bh(t);
                            const {
                                relativeKey: i,
                                driver: n
                            } = e(t);
                            return Th(n.hasItem, i, r)
                        },
                        getItem(t) {
                            let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t = Bh(t);
                            const {
                                relativeKey: i,
                                driver: n
                            } = e(t);
                            return Th(n.getItem, i, r).then((t => Nh(t)))
                        },
                        getItems: (t, e) => s(t, e, (t => t.driver.getItems ? Th(t.driver.getItems, t.items.map((t => ({
                            key: t.relativeKey,
                            options: t.options
                        }))), e).then((e => e.map((e => ({
                            key: Lh(t.base, e.key),
                            value: Nh(e.value)
                        }))))) : Promise.all(t.items.map((e => Th(t.driver.getItem, e.relativeKey, e.options).then((t => ({
                            key: e.key,
                            value: Nh(t)
                        })))))))),
                        getItemRaw(t) {
                            let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t = Bh(t);
                            const {
                                relativeKey: i,
                                driver: n
                            } = e(t);
                            return n.getItemRaw ? Th(n.getItemRaw, i, r) : Th(n.getItem, i, r).then((t => function(t) {
                                return "string" !== typeof t ? t : t.startsWith(kh) ? (Dh(), Rh.from(t.slice(kh.length), "base64")) : t
                            }(t)))
                        },
                        async setItem(t, r) {
                            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                            if (void 0 === r) return o.removeItem(t);
                            t = Bh(t);
                            const {
                                relativeKey: s,
                                driver: a
                            } = e(t);
                            a.setItem && (await Th(a.setItem, s, Uh(r), n), a.watch || i("update", t))
                        },
                        async setItems(t, e) {
                            await s(t, e, (async t => {
                                if (t.driver.setItems) return Th(t.driver.setItems, t.items.map((t => ({
                                    key: t.relativeKey,
                                    value: Uh(t.value),
                                    options: t.options
                                }))), e);
                                t.driver.setItem && await Promise.all(t.items.map((e => Th(t.driver.setItem, e.relativeKey, Uh(e.value), e.options))))
                            }))
                        },
                        async setItemRaw(t, r) {
                            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                            if (void 0 === r) return o.removeItem(t, n);
                            t = Bh(t);
                            const {
                                relativeKey: s,
                                driver: a
                            } = e(t);
                            if (a.setItemRaw) await Th(a.setItemRaw, s, r, n);
                            else {
                                if (!a.setItem) return;
                                await Th(a.setItem, s, function(t) {
                                    if ("string" === typeof t) return t;
                                    Dh();
                                    const e = Rh.from(t).toString("base64");
                                    return kh + e
                                }(r), n)
                            }
                            a.watch || i("update", t)
                        },
                        async removeItem(t) {
                            let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            "boolean" === typeof r && (r = {
                                removeMeta: r
                            }), t = Bh(t);
                            const {
                                relativeKey: n,
                                driver: s
                            } = e(t);
                            s.removeItem && (await Th(s.removeItem, n, r), (r.removeMeta || r.removeMata) && await Th(s.removeItem, n + "$", r), s.watch || i("remove", t))
                        },
                        async getMeta(t) {
                            let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            "boolean" === typeof r && (r = {
                                nativeOnly: r
                            }), t = Bh(t);
                            const {
                                relativeKey: i,
                                driver: n
                            } = e(t), s = Object.create(null);
                            if (n.getMeta && Object.assign(s, await Th(n.getMeta, i, r)), !r.nativeOnly) {
                                const t = await Th(n.getItem, i + "$", r).then((t => Nh(t)));
                                t && "object" === typeof t && ("string" === typeof t.atime && (t.atime = new Date(t.atime)), "string" === typeof t.mtime && (t.mtime = new Date(t.mtime)), Object.assign(s, t))
                            }
                            return s
                        },
                        setMeta(t, e) {
                            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                            return this.setItem(t + "$", e, r)
                        },
                        removeMeta(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            return this.removeItem(t + "$", e)
                        },
                        async getKeys(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t = qh(t);
                            const i = r(t, !0);
                            let n = [];
                            const s = [];
                            for (const r of i) {
                                const t = (await Th(r.driver.getKeys, r.relativeBase, e)).map((t => r.mountpoint + Bh(t))).filter((t => !n.some((e => t.startsWith(e)))));
                                s.push(...t), n = [r.mountpoint, ...n.filter((t => !t.startsWith(r.mountpoint)))]
                            }
                            return t ? s.filter((e => e.startsWith(t) && !e.endsWith("$"))) : s.filter((t => !t.endsWith("$")))
                        },
                        async clear(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t = qh(t), await Promise.all(r(t, !1).map((async t => {
                                if (t.driver.clear) return Th(t.driver.clear, t.relativeBase, e);
                                if (t.driver.removeItem) {
                                    const r = await t.driver.getKeys(t.relativeBase || "", e);
                                    return Promise.all(r.map((r => t.driver.removeItem(r, e))))
                                }
                            })))
                        },
                        async dispose() {
                            await Promise.all(Object.values(t.mounts).map((t => Hh(t))))
                        },
                        watch: async e => (await (async () => {
                            if (!t.watching) {
                                t.watching = !0;
                                for (const e in t.mounts) t.unwatch[e] = await Fh(t.mounts[e], i, e)
                            }
                        })(), t.watchListeners.push(e), async () => {
                            t.watchListeners = t.watchListeners.filter((t => t !== e)), 0 === t.watchListeners.length && await n()
                        }),
                        async unwatch() {
                            t.watchListeners = [], await n()
                        },
                        mount(e, r) {
                            if ((e = qh(e)) && t.mounts[e]) throw new Error(`already mounted at ${e}`);
                            return e && (t.mountpoints.push(e), t.mountpoints.sort(((t, e) => e.length - t.length))), t.mounts[e] = r, t.watching && Promise.resolve(Fh(r, i, e)).then((r => {
                                t.unwatch[e] = r
                            })).catch(console.error), o
                        },
                        async unmount(e) {
                            let r = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                            (e = qh(e)) && t.mounts[e] && (t.watching && e in t.unwatch && (t.unwatch[e](), delete t.unwatch[e]), r && await Hh(t.mounts[e]), t.mountpoints = t.mountpoints.filter((t => t !== e)), delete t.mounts[e])
                        },
                        getMount() {
                            let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                            t = Bh(t) + ":";
                            const r = e(t);
                            return {
                                driver: r.driver,
                                base: r.base
                            }
                        },
                        getMounts() {
                            let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                                e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t = Bh(t);
                            return r(t, e.parents).map((t => ({
                                driver: t.driver,
                                base: t.mountpoint
                            })))
                        }
                    };
                return o
            }

            function Fh(t, e, r) {
                return t.watch ? t.watch(((t, i) => e(t, r + i))) : () => {}
            }
            async function Hh(t) {
                "function" === typeof t.dispose && await Th(t.dispose)
            }

            function Kh(t) {
                return new Promise(((e, r) => {
                    t.oncomplete = t.onsuccess = () => e(t.result), t.onabort = t.onerror = () => r(t.error)
                }))
            }

            function Vh(t, e) {
                const r = indexedDB.open(t);
                r.onupgradeneeded = () => r.result.createObjectStore(e);
                const i = Kh(r);
                return (t, r) => i.then((i => r(i.transaction(e, t).objectStore(e))))
            }
            let $h;

            function Wh() {
                return $h || ($h = Vh("keyval-store", "keyval")), $h
            }

            function Gh(t) {
                return (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Wh())("readonly", (e => Kh(e.get(t))))
            }

            function Qh(t, e) {
                return t.openCursor().onsuccess = function() {
                    this.result && (e(this.result), this.result.continue())
                }, Kh(t.transaction)
            }
            const Yh = t => JSON.stringify(t, ((t, e) => "bigint" === typeof e ? e.toString() + "n" : e)),
                Jh = t => {
                    const e = t.replace(/([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g, '$1"$2n"$3');
                    return JSON.parse(e, ((t, e) => "string" === typeof e && e.match(/^\d+n$/) ? BigInt(e.substring(0, e.length - 1)) : e))
                };

            function Xh(t) {
                if ("string" !== typeof t) throw new Error("Cannot safe json parse value of type " + typeof t);
                try {
                    return Jh(t)
                } catch (Vs) {
                    return t
                }
            }

            function Zh(t) {
                return "string" === typeof t ? t : Yh(t) || ""
            }
            var tc = function() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                const e = t.base && t.base.length > 0 ? `${t.base}:` : "",
                    r = t => e + t;
                let i;
                return t.dbName && t.storeName && (i = Vh(t.dbName, t.storeName)), {
                    name: "idb-keyval",
                    options: t,
                    hasItem: async t => !(typeof await Gh(r(t), i) > "u"),
                    getItem: async t => await Gh(r(t), i) ? ? null,
                    setItem: (t, e) => function(t, e) {
                        return (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Wh())("readwrite", (r => (r.put(e, t), Kh(r.transaction))))
                    }(r(t), e, i),
                    removeItem: t => function(t) {
                        return (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Wh())("readwrite", (e => (e.delete(t), Kh(e.transaction))))
                    }(r(t), i),
                    getKeys: () => function() {
                        return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Wh())("readonly", (t => {
                            if (t.getAllKeys) return Kh(t.getAllKeys());
                            const e = [];
                            return Qh(t, (t => e.push(t.key))).then((() => e))
                        }))
                    }(i),
                    clear: () => function() {
                        return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Wh())("readwrite", (t => (t.clear(), Kh(t.transaction))))
                    }(i)
                }
            };
            class ec {
                constructor() {
                    this.indexedDb = zh({
                        driver: tc({
                            dbName: "WALLET_CONNECT_V2_INDEXED_DB",
                            storeName: "keyvaluestorage"
                        })
                    })
                }
                async getKeys() {
                    return this.indexedDb.getKeys()
                }
                async getEntries() {
                    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t => [t.key, t.value]))
                }
                async getItem(t) {
                    const e = await this.indexedDb.getItem(t);
                    if (null !== e) return e
                }
                async setItem(t, e) {
                    await this.indexedDb.setItem(t, Zh(e))
                }
                async removeItem(t) {
                    await this.indexedDb.removeItem(t)
                }
            }
            var rc = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof r.g < "u" ? r.g : typeof self < "u" ? self : {},
                ic = {
                    exports: {}
                };

            function nc(t) {
                var e;
                return [t[0], Xh(null != (e = t[1]) ? e : "")]
            }! function() {
                let t;

                function e() {}
                t = e, t.prototype.getItem = function(t) {
                    return this.hasOwnProperty(t) ? String(this[t]) : null
                }, t.prototype.setItem = function(t, e) {
                    this[t] = String(e)
                }, t.prototype.removeItem = function(t) {
                    delete this[t]
                }, t.prototype.clear = function() {
                    const t = this;
                    Object.keys(t).forEach((function(e) {
                        t[e] = void 0, delete t[e]
                    }))
                }, t.prototype.key = function(t) {
                    return t = t || 0, Object.keys(this)[t]
                }, t.prototype.__defineGetter__("length", (function() {
                    return Object.keys(this).length
                })), typeof rc < "u" && rc.localStorage ? ic.exports = rc.localStorage : typeof window < "u" && window.localStorage ? ic.exports = window.localStorage : ic.exports = new e
            }();
            class sc {
                constructor() {
                    this.localStorage = ic.exports
                }
                async getKeys() {
                    return Object.keys(this.localStorage)
                }
                async getEntries() {
                    return Object.entries(this.localStorage).map(nc)
                }
                async getItem(t) {
                    const e = this.localStorage.getItem(t);
                    if (null !== e) return Xh(e)
                }
                async setItem(t, e) {
                    this.localStorage.setItem(t, Zh(e))
                }
                async removeItem(t) {
                    this.localStorage.removeItem(t)
                }
            }
            const oc = async (t, e) => {
                e.length && e.forEach((async e => {
                    await t.removeItem(e)
                }))
            };
            class ac {
                constructor() {
                    this.initialized = !1, this.setInitialized = t => {
                        this.storage = t, this.initialized = !0
                    };
                    const t = new sc;
                    this.storage = t;
                    try {
                        (async (t, e, r) => {
                            const i = "wc_storage_version",
                                n = await e.getItem(i);
                            if (n && n >= 1) return void r(e);
                            const s = await t.getKeys();
                            if (!s.length) return void r(e);
                            const o = [];
                            for (; s.length;) {
                                const r = s.shift();
                                if (!r) continue;
                                const i = r.toLowerCase();
                                if (i.includes("wc@") || i.includes("walletconnect") || i.includes("wc_") || i.includes("wallet_connect")) {
                                    const i = await t.getItem(r);
                                    await e.setItem(r, i), o.push(r)
                                }
                            }
                            await e.setItem(i, 1), r(e), oc(t, o)
                        })(t, new ec, this.setInitialized)
                    } catch {
                        this.initialized = !0
                    }
                }
                async getKeys() {
                    return await this.initialize(), this.storage.getKeys()
                }
                async getEntries() {
                    return await this.initialize(), this.storage.getEntries()
                }
                async getItem(t) {
                    return await this.initialize(), this.storage.getItem(t)
                }
                async setItem(t, e) {
                    return await this.initialize(), this.storage.setItem(t, e)
                }
                async removeItem(t) {
                    return await this.initialize(), this.storage.removeItem(t)
                }
                async initialize() {
                    this.initialized || await new Promise((t => {
                        const e = setInterval((() => {
                            this.initialized && (clearInterval(e), t())
                        }), 20)
                    }))
                }
            }
            class hc {}
            class cc extends hc {
                constructor(t) {
                    super()
                }
            }
            const uc = at.FIVE_SECONDS,
                lc = "heartbeat_pulse";
            class fc extends cc {
                constructor(t) {
                    super(t), this.events = new V.EventEmitter, this.interval = uc, this.interval = t ? .interval || uc
                }
                static async init(t) {
                    const e = new fc(t);
                    return await e.init(), e
                }
                async init() {
                    await this.initialize()
                }
                stop() {
                    clearInterval(this.intervalRef)
                }
                on(t, e) {
                    this.events.on(t, e)
                }
                once(t, e) {
                    this.events.once(t, e)
                }
                off(t, e) {
                    this.events.off(t, e)
                }
                removeListener(t, e) {
                    this.events.removeListener(t, e)
                }
                async initialize() {
                    this.intervalRef = setInterval((() => this.pulse()), (0, at.toMiliseconds)(this.interval))
                }
                pulse() {
                    this.events.emit(lc)
                }
            }
            var dc = r(37847),
                pc = r.n(dc);
            const gc = "info",
                mc = "custom_context",
                yc = 1024e3;
            class vc {
                constructor(t) {
                    this.nodeValue = t, this.sizeInBytes = (new TextEncoder).encode(this.nodeValue).length, this.next = null
                }
                get value() {
                    return this.nodeValue
                }
                get size() {
                    return this.sizeInBytes
                }
            }
            class wc {
                constructor(t) {
                    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = t, this.sizeInBytes = 0
                }
                append(t) {
                    const e = new vc(t);
                    if (e.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${t} with size ${e.size}`);
                    for (; this.size + e.size > this.maxSizeInBytes;) this.shift();
                    this.head ? (this.tail && (this.tail.next = e), this.tail = e) : (this.head = e, this.tail = e), this.lengthInNodes++, this.sizeInBytes += e.size
                }
                shift() {
                    if (!this.head) return;
                    const t = this.head;
                    this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= t.size
                }
                toArray() {
                    const t = [];
                    let e = this.head;
                    for (; null !== e;) t.push(e.value), e = e.next;
                    return t
                }
                get length() {
                    return this.lengthInNodes
                }
                get size() {
                    return this.sizeInBytes
                }
                toOrderedArray() {
                    return Array.from(this)
                }[Symbol.iterator]() {
                    let t = this.head;
                    return {
                        next: () => {
                            if (!t) return {
                                done: !0,
                                value: null
                            };
                            const e = t.value;
                            return t = t.next, {
                                done: !1,
                                value: e
                            }
                        }
                    }
                }
            }
            class bc {
                constructor(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : yc;
                    this.level = t ? ? "error", this.levelValue = dc.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = e, this.logs = new wc(this.MAX_LOG_SIZE_IN_BYTES)
                }
                forwardToConsole(t, e) {
                    e === dc.levels.values.error ? console.error(t) : e === dc.levels.values.warn ? console.warn(t) : e === dc.levels.values.debug ? console.debug(t) : e === dc.levels.values.trace ? console.trace(t) : console.log(t)
                }
                appendToLogs(t) {
                    this.logs.append(Zh({
                        timestamp: (new Date).toISOString(),
                        log: t
                    }));
                    const e = "string" == typeof t ? JSON.parse(t).level : t.level;
                    e >= this.levelValue && this.forwardToConsole(t, e)
                }
                getLogs() {
                    return this.logs
                }
                clearLogs() {
                    this.logs = new wc(this.MAX_LOG_SIZE_IN_BYTES)
                }
                getLogArray() {
                    return Array.from(this.logs)
                }
                logsToBlob(t) {
                    const e = this.getLogArray();
                    return e.push(Zh({
                        extraMetadata: t
                    })), new Blob(e, {
                        type: "application/json"
                    })
                }
            }
            class _c {
                constructor(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : yc;
                    this.baseChunkLogger = new bc(t, e)
                }
                write(t) {
                    this.baseChunkLogger.appendToLogs(t)
                }
                getLogs() {
                    return this.baseChunkLogger.getLogs()
                }
                clearLogs() {
                    this.baseChunkLogger.clearLogs()
                }
                getLogArray() {
                    return this.baseChunkLogger.getLogArray()
                }
                logsToBlob(t) {
                    return this.baseChunkLogger.logsToBlob(t)
                }
                downloadLogsBlobInBrowser(t) {
                    const e = URL.createObjectURL(this.logsToBlob(t)),
                        r = document.createElement("a");
                    r.href = e, r.download = `walletconnect-logs-${(new Date).toISOString()}.txt`, document.body.appendChild(r), r.click(), document.body.removeChild(r), URL.revokeObjectURL(e)
                }
            }
            class Ac {
                constructor(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : yc;
                    this.baseChunkLogger = new bc(t, e)
                }
                write(t) {
                    this.baseChunkLogger.appendToLogs(t)
                }
                getLogs() {
                    return this.baseChunkLogger.getLogs()
                }
                clearLogs() {
                    this.baseChunkLogger.clearLogs()
                }
                getLogArray() {
                    return this.baseChunkLogger.getLogArray()
                }
                logsToBlob(t) {
                    return this.baseChunkLogger.logsToBlob(t)
                }
            }
            var Ec = Object.defineProperty,
                Sc = Object.defineProperties,
                Ic = Object.getOwnPropertyDescriptors,
                Pc = Object.getOwnPropertySymbols,
                Mc = Object.prototype.hasOwnProperty,
                xc = Object.prototype.propertyIsEnumerable,
                Oc = (t, e, r) => e in t ? Ec(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Cc = (t, e) => {
                    for (var r in e || (e = {})) Mc.call(e, r) && Oc(t, r, e[r]);
                    if (Pc)
                        for (var r of Pc(e)) xc.call(e, r) && Oc(t, r, e[r]);
                    return t
                },
                Nc = (t, e) => Sc(t, Ic(e));

            function Rc(t) {
                return Nc(Cc({}, t), {
                    level: t ? .level || gc
                })
            }

            function Tc(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : mc,
                    r = "";
                return r = typeof t.bindings > "u" ? function(t) {
                    return t[arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : mc] || ""
                }(t, e) : t.bindings().context || "", r
            }

            function Uc(t, e) {
                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : mc;
                const i = function(t, e) {
                    const r = Tc(t, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : mc);
                    return r.trim() ? `${r}/${e}` : e
                }(t, e, r);
                return function(t, e) {
                    return t[arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : mc] = e, t
                }(t.child({
                    context: i
                }), i, r)
            }

            function Dc(t) {
                return typeof t.loggerOverride < "u" && "string" != typeof t.loggerOverride ? {
                    logger: t.loggerOverride,
                    chunkLoggerController: null
                } : typeof window < "u" ? function(t) {
                    var e, r;
                    const i = new _c(null == (e = t.opts) ? void 0 : e.level, t.maxSizeInBytes);
                    return {
                        logger: pc()(Nc(Cc({}, t.opts), {
                            level: "trace",
                            browser: Nc(Cc({}, null == (r = t.opts) ? void 0 : r.browser), {
                                write: t => i.write(t)
                            })
                        })),
                        chunkLoggerController: i
                    }
                }(t) : function(t) {
                    var e;
                    const r = new Ac(null == (e = t.opts) ? void 0 : e.level, t.maxSizeInBytes);
                    return {
                        logger: pc()(Nc(Cc({}, t.opts), {
                            level: "trace"
                        }), r),
                        chunkLoggerController: r
                    }
                }(t)
            }
            class kc extends hc {
                constructor(t) {
                    super(), this.opts = t, this.protocol = "wc", this.version = 2
                }
            }
            class Bc extends hc {
                constructor(t, e) {
                    super(), this.core = t, this.logger = e, this.records = new Map
                }
            }
            class Lc {
                constructor(t, e) {
                    this.logger = t, this.core = e
                }
            }
            class qc extends hc {
                constructor(t, e) {
                    super(), this.relayer = t, this.logger = e
                }
            }
            class jc extends hc {
                constructor(t) {
                    super()
                }
            }
            class zc {
                constructor(t, e, r, i) {
                    this.core = t, this.logger = e, this.name = r
                }
            }
            class Fc extends hc {
                constructor(t, e) {
                    super(), this.relayer = t, this.logger = e
                }
            }
            class Hc extends hc {
                constructor(t, e) {
                    super(), this.core = t, this.logger = e
                }
            }
            class Kc {
                constructor(t, e) {
                    this.projectId = t, this.logger = e
                }
            }
            class Vc {
                constructor(t, e) {
                    this.projectId = t, this.logger = e
                }
            }
            $();
            class $c {
                constructor(t) {
                    this.opts = t, this.protocol = "wc", this.version = 2
                }
            }
            V.EventEmitter;
            class Wc {
                constructor(t) {
                    this.client = t
                }
            }
            var Gc = r(62370);
            const Qc = ".",
                Yc = "base64url",
                Jc = "utf8",
                Xc = "utf8",
                Zc = ":",
                tu = "did",
                eu = "key",
                ru = "base58btc",
                iu = "z",
                nu = "K36";

            function su(t) {
                return null != globalThis.Buffer ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t
            }

            function ou() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? su(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t)
            }
            var au = function(t, e) {
                if (t.length >= 255) throw new TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), i = 0; i < r.length; i++) r[i] = 255;
                for (var n = 0; n < t.length; n++) {
                    var s = t.charAt(n),
                        o = s.charCodeAt(0);
                    if (255 !== r[o]) throw new TypeError(s + " is ambiguous");
                    r[o] = n
                }
                var a = t.length,
                    h = t.charAt(0),
                    c = Math.log(a) / Math.log(256),
                    u = Math.log(256) / Math.log(a);

                function l(t) {
                    if ("string" !== typeof t) throw new TypeError("Expected String");
                    if (0 === t.length) return new Uint8Array;
                    var e = 0;
                    if (" " !== t[e]) {
                        for (var i = 0, n = 0; t[e] === h;) i++, e++;
                        for (var s = (t.length - e) * c + 1 >>> 0, o = new Uint8Array(s); t[e];) {
                            var u = r[t.charCodeAt(e)];
                            if (255 === u) return;
                            for (var l = 0, f = s - 1;
                                (0 !== u || l < n) && -1 !== f; f--, l++) u += a * o[f] >>> 0, o[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                            if (0 !== u) throw new Error("Non-zero carry");
                            n = l, e++
                        }
                        if (" " !== t[e]) {
                            for (var d = s - n; d !== s && 0 === o[d];) d++;
                            for (var p = new Uint8Array(i + (s - d)), g = i; d !== s;) p[g++] = o[d++];
                            return p
                        }
                    }
                }
                return {
                    encode: function(e) {
                        if (e instanceof Uint8Array || (ArrayBuffer.isView(e) ? e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : Array.isArray(e) && (e = Uint8Array.from(e))), !(e instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                        if (0 === e.length) return "";
                        for (var r = 0, i = 0, n = 0, s = e.length; n !== s && 0 === e[n];) n++, r++;
                        for (var o = (s - n) * u + 1 >>> 0, c = new Uint8Array(o); n !== s;) {
                            for (var l = e[n], f = 0, d = o - 1;
                                (0 !== l || f < i) && -1 !== d; d--, f++) l += 256 * c[d] >>> 0, c[d] = l % a >>> 0, l = l / a >>> 0;
                            if (0 !== l) throw new Error("Non-zero carry");
                            i = f, n++
                        }
                        for (var p = o - i; p !== o && 0 === c[p];) p++;
                        for (var g = h.repeat(r); p < o; ++p) g += t.charAt(c[p]);
                        return g
                    },
                    decodeUnsafe: l,
                    decode: function(t) {
                        var r = l(t);
                        if (r) return r;
                        throw new Error(`Non-${e} character`)
                    }
                }
            };
            const hu = au,
                cu = (new Uint8Array(0), t => {
                    if (t instanceof Uint8Array && "Uint8Array" === t.constructor.name) return t;
                    if (t instanceof ArrayBuffer) return new Uint8Array(t);
                    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                    throw new Error("Unknown type, must be binary type")
                });
            class uu {
                constructor(t, e, r) {
                    this.name = t, this.prefix = e, this.baseEncode = r
                }
                encode(t) {
                    if (t instanceof Uint8Array) return `${this.prefix}${this.baseEncode(t)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class lu {
                constructor(t, e, r) {
                    if (this.name = t, this.prefix = e, void 0 === e.codePointAt(0)) throw new Error("Invalid prefix character");
                    this.prefixCodePoint = e.codePointAt(0), this.baseDecode = r
                }
                decode(t) {
                    if ("string" === typeof t) {
                        if (t.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(t.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(t) {
                    return du(this, t)
                }
            }
            class fu {
                constructor(t) {
                    this.decoders = t
                }
                or(t) {
                    return du(this, t)
                }
                decode(t) {
                    const e = t[0],
                        r = this.decoders[e];
                    if (r) return r.decode(t);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            const du = (t, e) => new fu({ ...t.decoders || {
                    [t.prefix]: t
                },
                ...e.decoders || {
                    [e.prefix]: e
                }
            });
            class pu {
                constructor(t, e, r, i) {
                    this.name = t, this.prefix = e, this.baseEncode = r, this.baseDecode = i, this.encoder = new uu(t, e, r), this.decoder = new lu(t, e, i)
                }
                encode(t) {
                    return this.encoder.encode(t)
                }
                decode(t) {
                    return this.decoder.decode(t)
                }
            }
            const gu = t => {
                    let {
                        name: e,
                        prefix: r,
                        encode: i,
                        decode: n
                    } = t;
                    return new pu(e, r, i, n)
                },
                mu = t => {
                    let {
                        prefix: e,
                        name: r,
                        alphabet: i
                    } = t;
                    const {
                        encode: n,
                        decode: s
                    } = hu(i, r);
                    return gu({
                        prefix: e,
                        name: r,
                        encode: n,
                        decode: t => cu(s(t))
                    })
                },
                yu = t => {
                    let {
                        name: e,
                        prefix: r,
                        bitsPerChar: i,
                        alphabet: n
                    } = t;
                    return gu({
                        prefix: r,
                        name: e,
                        encode: t => ((t, e, r) => {
                            const i = "=" === e[e.length - 1],
                                n = (1 << r) - 1;
                            let s = "",
                                o = 0,
                                a = 0;
                            for (let h = 0; h < t.length; ++h)
                                for (a = a << 8 | t[h], o += 8; o > r;) o -= r, s += e[n & a >> o];
                            if (o && (s += e[n & a << r - o]), i)
                                for (; s.length * r & 7;) s += "=";
                            return s
                        })(t, n, i),
                        decode: t => ((t, e, r, i) => {
                            const n = {};
                            for (let u = 0; u < e.length; ++u) n[e[u]] = u;
                            let s = t.length;
                            for (;
                                "=" === t[s - 1];) --s;
                            const o = new Uint8Array(s * r / 8 | 0);
                            let a = 0,
                                h = 0,
                                c = 0;
                            for (let u = 0; u < s; ++u) {
                                const e = n[t[u]];
                                if (void 0 === e) throw new SyntaxError(`Non-${i} character`);
                                h = h << r | e, a += r, a >= 8 && (a -= 8, o[c++] = 255 & h >> a)
                            }
                            if (a >= r || 255 & h << 8 - a) throw new SyntaxError("Unexpected end of data");
                            return o
                        })(t, n, i, e)
                    })
                },
                vu = gu({
                    prefix: "\0",
                    name: "identity",
                    encode: t => (t => (new TextDecoder).decode(t))(t),
                    decode: t => (t => (new TextEncoder).encode(t))(t)
                }),
                wu = yu({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                bu = yu({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                _u = mu({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                Au = yu({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                Eu = yu({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                Su = yu({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                Iu = yu({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                Pu = yu({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                Mu = yu({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                xu = yu({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                Ou = yu({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                Cu = yu({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                Nu = yu({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                Ru = yu({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                Tu = mu({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                Uu = mu({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                Du = mu({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                ku = mu({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                Bu = yu({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                Lu = yu({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                qu = yu({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                ju = yu({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                zu = Array.from("\ud83d\ude80\ud83e\ude90\u2604\ud83d\udef0\ud83c\udf0c\ud83c\udf11\ud83c\udf12\ud83c\udf13\ud83c\udf14\ud83c\udf15\ud83c\udf16\ud83c\udf17\ud83c\udf18\ud83c\udf0d\ud83c\udf0f\ud83c\udf0e\ud83d\udc09\u2600\ud83d\udcbb\ud83d\udda5\ud83d\udcbe\ud83d\udcbf\ud83d\ude02\u2764\ud83d\ude0d\ud83e\udd23\ud83d\ude0a\ud83d\ude4f\ud83d\udc95\ud83d\ude2d\ud83d\ude18\ud83d\udc4d\ud83d\ude05\ud83d\udc4f\ud83d\ude01\ud83d\udd25\ud83e\udd70\ud83d\udc94\ud83d\udc96\ud83d\udc99\ud83d\ude22\ud83e\udd14\ud83d\ude06\ud83d\ude44\ud83d\udcaa\ud83d\ude09\u263a\ud83d\udc4c\ud83e\udd17\ud83d\udc9c\ud83d\ude14\ud83d\ude0e\ud83d\ude07\ud83c\udf39\ud83e\udd26\ud83c\udf89\ud83d\udc9e\u270c\u2728\ud83e\udd37\ud83d\ude31\ud83d\ude0c\ud83c\udf38\ud83d\ude4c\ud83d\ude0b\ud83d\udc97\ud83d\udc9a\ud83d\ude0f\ud83d\udc9b\ud83d\ude42\ud83d\udc93\ud83e\udd29\ud83d\ude04\ud83d\ude00\ud83d\udda4\ud83d\ude03\ud83d\udcaf\ud83d\ude48\ud83d\udc47\ud83c\udfb6\ud83d\ude12\ud83e\udd2d\u2763\ud83d\ude1c\ud83d\udc8b\ud83d\udc40\ud83d\ude2a\ud83d\ude11\ud83d\udca5\ud83d\ude4b\ud83d\ude1e\ud83d\ude29\ud83d\ude21\ud83e\udd2a\ud83d\udc4a\ud83e\udd73\ud83d\ude25\ud83e\udd24\ud83d\udc49\ud83d\udc83\ud83d\ude33\u270b\ud83d\ude1a\ud83d\ude1d\ud83d\ude34\ud83c\udf1f\ud83d\ude2c\ud83d\ude43\ud83c\udf40\ud83c\udf37\ud83d\ude3b\ud83d\ude13\u2b50\u2705\ud83e\udd7a\ud83c\udf08\ud83d\ude08\ud83e\udd18\ud83d\udca6\u2714\ud83d\ude23\ud83c\udfc3\ud83d\udc90\u2639\ud83c\udf8a\ud83d\udc98\ud83d\ude20\u261d\ud83d\ude15\ud83c\udf3a\ud83c\udf82\ud83c\udf3b\ud83d\ude10\ud83d\udd95\ud83d\udc9d\ud83d\ude4a\ud83d\ude39\ud83d\udde3\ud83d\udcab\ud83d\udc80\ud83d\udc51\ud83c\udfb5\ud83e\udd1e\ud83d\ude1b\ud83d\udd34\ud83d\ude24\ud83c\udf3c\ud83d\ude2b\u26bd\ud83e\udd19\u2615\ud83c\udfc6\ud83e\udd2b\ud83d\udc48\ud83d\ude2e\ud83d\ude46\ud83c\udf7b\ud83c\udf43\ud83d\udc36\ud83d\udc81\ud83d\ude32\ud83c\udf3f\ud83e\udde1\ud83c\udf81\u26a1\ud83c\udf1e\ud83c\udf88\u274c\u270a\ud83d\udc4b\ud83d\ude30\ud83e\udd28\ud83d\ude36\ud83e\udd1d\ud83d\udeb6\ud83d\udcb0\ud83c\udf53\ud83d\udca2\ud83e\udd1f\ud83d\ude41\ud83d\udea8\ud83d\udca8\ud83e\udd2c\u2708\ud83c\udf80\ud83c\udf7a\ud83e\udd13\ud83d\ude19\ud83d\udc9f\ud83c\udf31\ud83d\ude16\ud83d\udc76\ud83e\udd74\u25b6\u27a1\u2753\ud83d\udc8e\ud83d\udcb8\u2b07\ud83d\ude28\ud83c\udf1a\ud83e\udd8b\ud83d\ude37\ud83d\udd7a\u26a0\ud83d\ude45\ud83d\ude1f\ud83d\ude35\ud83d\udc4e\ud83e\udd32\ud83e\udd20\ud83e\udd27\ud83d\udccc\ud83d\udd35\ud83d\udc85\ud83e\uddd0\ud83d\udc3e\ud83c\udf52\ud83d\ude17\ud83e\udd11\ud83c\udf0a\ud83e\udd2f\ud83d\udc37\u260e\ud83d\udca7\ud83d\ude2f\ud83d\udc86\ud83d\udc46\ud83c\udfa4\ud83d\ude47\ud83c\udf51\u2744\ud83c\udf34\ud83d\udca3\ud83d\udc38\ud83d\udc8c\ud83d\udccd\ud83e\udd40\ud83e\udd22\ud83d\udc45\ud83d\udca1\ud83d\udca9\ud83d\udc50\ud83d\udcf8\ud83d\udc7b\ud83e\udd10\ud83e\udd2e\ud83c\udfbc\ud83e\udd75\ud83d\udea9\ud83c\udf4e\ud83c\udf4a\ud83d\udc7c\ud83d\udc8d\ud83d\udce3\ud83e\udd42"),
                Fu = zu.reduce(((t, e, r) => (t[r] = e, t)), []),
                Hu = zu.reduce(((t, e, r) => (t[e.codePointAt(0)] = r, t)), []);
            const Ku = gu({
                prefix: "\ud83d\ude80",
                name: "base256emoji",
                encode: function(t) {
                    return t.reduce(((t, e) => t += Fu[e]), "")
                },
                decode: function(t) {
                    const e = [];
                    for (const r of t) {
                        const t = Hu[r.codePointAt(0)];
                        if (void 0 === t) throw new Error(`Non-base256emoji character: ${r}`);
                        e.push(t)
                    }
                    return new Uint8Array(e)
                }
            });
            var Vu = function t(e, r, i) {
                    r = r || [];
                    var n = i = i || 0;
                    for (; e >= Gu;) r[i++] = 255 & e | $u, e /= 128;
                    for (; e & Wu;) r[i++] = 255 & e | $u, e >>>= 7;
                    return r[i] = 0 | e, t.bytes = i - n + 1, r
                },
                $u = 128,
                Wu = -128,
                Gu = Math.pow(2, 31);
            var Qu = function t(e, r) {
                    var i, n = 0,
                        s = 0,
                        o = r = r || 0,
                        a = e.length;
                    do {
                        if (o >= a) throw t.bytes = 0, new RangeError("Could not decode varint");
                        i = e[o++], n += s < 28 ? (i & Ju) << s : (i & Ju) * Math.pow(2, s), s += 7
                    } while (i >= Yu);
                    return t.bytes = o - r, n
                },
                Yu = 128,
                Ju = 127;
            var Xu = Math.pow(2, 7),
                Zu = Math.pow(2, 14),
                tl = Math.pow(2, 21),
                el = Math.pow(2, 28),
                rl = Math.pow(2, 35),
                il = Math.pow(2, 42),
                nl = Math.pow(2, 49),
                sl = Math.pow(2, 56),
                ol = Math.pow(2, 63);
            const al = {
                    encode: Vu,
                    decode: Qu,
                    encodingLength: function(t) {
                        return t < Xu ? 1 : t < Zu ? 2 : t < tl ? 3 : t < el ? 4 : t < rl ? 5 : t < il ? 6 : t < nl ? 7 : t < sl ? 8 : t < ol ? 9 : 10
                    }
                },
                hl = function(t, e) {
                    let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    return al.encode(t, e, r), e
                },
                cl = t => al.encodingLength(t),
                ul = (t, e) => {
                    const r = e.byteLength,
                        i = cl(t),
                        n = i + cl(r),
                        s = new Uint8Array(n + r);
                    return hl(t, s, 0), hl(r, s, i), s.set(e, n), new ll(t, r, e, s)
                };
            class ll {
                constructor(t, e, r, i) {
                    this.code = t, this.size = e, this.digest = r, this.bytes = i
                }
            }
            const fl = t => {
                let {
                    name: e,
                    code: r,
                    encode: i
                } = t;
                return new dl(e, r, i)
            };
            class dl {
                constructor(t, e, r) {
                    this.name = t, this.code = e, this.encode = r
                }
                digest(t) {
                    if (t instanceof Uint8Array) {
                        const e = this.encode(t);
                        return e instanceof Uint8Array ? ul(this.code, e) : e.then((t => ul(this.code, t)))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            const pl = t => async e => new Uint8Array(await crypto.subtle.digest(t, e)),
                gl = fl({
                    name: "sha2-256",
                    code: 18,
                    encode: pl("SHA-256")
                }),
                ml = fl({
                    name: "sha2-512",
                    code: 19,
                    encode: pl("SHA-512")
                }),
                yl = cu,
                vl = {
                    code: 0,
                    name: "identity",
                    encode: yl,
                    digest: t => ul(0, yl(t))
                },
                wl = "raw",
                bl = 85,
                _l = t => cu(t),
                Al = t => cu(t),
                El = new TextEncoder,
                Sl = new TextDecoder,
                Il = "json",
                Pl = 512,
                Ml = t => El.encode(JSON.stringify(t)),
                xl = t => JSON.parse(Sl.decode(t));
            Symbol.toStringTag, Symbol.for("nodejs.util.inspect.custom");
            Symbol.for("@ipld/js-cid/CID");
            const Ol = { ...y,
                ...v,
                ...w,
                ...b,
                ..._,
                ...A,
                ...E,
                ...S,
                ...I,
                ...P
            };

            function Cl(t, e, r, i) {
                return {
                    name: t,
                    prefix: e,
                    encoder: {
                        name: t,
                        prefix: e,
                        encode: r
                    },
                    decoder: {
                        decode: i
                    }
                }
            }
            const Nl = Cl("utf8", "u", (t => "u" + new TextDecoder("utf8").decode(t)), (t => (new TextEncoder).encode(t.substring(1)))),
                Rl = Cl("ascii", "a", (t => {
                    let e = "a";
                    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
                    return e
                }), (t => {
                    const e = ou((t = t.substring(1)).length);
                    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
                    return e
                })),
                Tl = {
                    utf8: Nl,
                    "utf-8": Nl,
                    hex: Ol.base16,
                    latin1: Rl,
                    ascii: Rl,
                    binary: Rl,
                    ...Ol
                };

            function Ul(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8";
                const r = Tl[e];
                if (!r) throw new Error(`Unsupported encoding "${e}"`);
                return "utf8" !== e && "utf-8" !== e || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.encoder.encode(t).substring(1) : globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8")
            }

            function Dl(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8";
                const r = Tl[e];
                if (!r) throw new Error(`Unsupported encoding "${e}"`);
                return "utf8" !== e && "utf-8" !== e || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode(`${r.prefix}${t}`) : su(globalThis.Buffer.from(t, "utf-8"))
            }

            function kl(t) {
                return Ul(Dl(Zh(t), Jc), Yc)
            }

            function Bl(t) {
                const e = Dl(nu, ru),
                    r = iu + Ul(function(t, e) {
                        e || (e = t.reduce(((t, e) => t + e.length), 0));
                        const r = ou(e);
                        let i = 0;
                        for (const n of t) r.set(n, i), i += n.length;
                        return su(r)
                    }([e, t]), ru);
                return [tu, eu, r].join(Zc)
            }

            function Ll() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0, dt.randomBytes)(32);
                return Gc.K(t)
            }
            async function ql(t, e, r, i) {
                let n = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : (0, at.fromMiliseconds)(Date.now());
                const s = {
                        alg: "EdDSA",
                        typ: "JWT"
                    },
                    o = {
                        iss: Bl(i.publicKey),
                        sub: t,
                        aud: e,
                        iat: n,
                        exp: n + r
                    },
                    a = Dl([kl((h = {
                        header: s,
                        payload: o
                    }).header), kl(h.payload)].join(Qc), Xc);
                var h;
                return function(t) {
                    return [kl(t.header), kl(t.payload), (e = t.signature, Ul(e, Yc))].join(Qc);
                    var e
                }({
                    header: s,
                    payload: o,
                    signature: Gc._S(i.secretKey, a)
                })
            }
            r(79047);
            var jl = function(t, e) {
                if (t.length >= 255) throw new TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), i = 0; i < r.length; i++) r[i] = 255;
                for (var n = 0; n < t.length; n++) {
                    var s = t.charAt(n),
                        o = s.charCodeAt(0);
                    if (255 !== r[o]) throw new TypeError(s + " is ambiguous");
                    r[o] = n
                }
                var a = t.length,
                    h = t.charAt(0),
                    c = Math.log(a) / Math.log(256),
                    u = Math.log(256) / Math.log(a);

                function l(t) {
                    if ("string" !== typeof t) throw new TypeError("Expected String");
                    if (0 === t.length) return new Uint8Array;
                    var e = 0;
                    if (" " !== t[e]) {
                        for (var i = 0, n = 0; t[e] === h;) i++, e++;
                        for (var s = (t.length - e) * c + 1 >>> 0, o = new Uint8Array(s); t[e];) {
                            var u = r[t.charCodeAt(e)];
                            if (255 === u) return;
                            for (var l = 0, f = s - 1;
                                (0 !== u || l < n) && -1 !== f; f--, l++) u += a * o[f] >>> 0, o[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                            if (0 !== u) throw new Error("Non-zero carry");
                            n = l, e++
                        }
                        if (" " !== t[e]) {
                            for (var d = s - n; d !== s && 0 === o[d];) d++;
                            for (var p = new Uint8Array(i + (s - d)), g = i; d !== s;) p[g++] = o[d++];
                            return p
                        }
                    }
                }
                return {
                    encode: function(e) {
                        if (e instanceof Uint8Array || (ArrayBuffer.isView(e) ? e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : Array.isArray(e) && (e = Uint8Array.from(e))), !(e instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                        if (0 === e.length) return "";
                        for (var r = 0, i = 0, n = 0, s = e.length; n !== s && 0 === e[n];) n++, r++;
                        for (var o = (s - n) * u + 1 >>> 0, c = new Uint8Array(o); n !== s;) {
                            for (var l = e[n], f = 0, d = o - 1;
                                (0 !== l || f < i) && -1 !== d; d--, f++) l += 256 * c[d] >>> 0, c[d] = l % a >>> 0, l = l / a >>> 0;
                            if (0 !== l) throw new Error("Non-zero carry");
                            i = f, n++
                        }
                        for (var p = o - i; p !== o && 0 === c[p];) p++;
                        for (var g = h.repeat(r); p < o; ++p) g += t.charAt(c[p]);
                        return g
                    },
                    decodeUnsafe: l,
                    decode: function(t) {
                        var r = l(t);
                        if (r) return r;
                        throw new Error(`Non-${e} character`)
                    }
                }
            };
            const zl = jl,
                Fl = (new Uint8Array(0), t => {
                    if (t instanceof Uint8Array && "Uint8Array" === t.constructor.name) return t;
                    if (t instanceof ArrayBuffer) return new Uint8Array(t);
                    if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                    throw new Error("Unknown type, must be binary type")
                });
            class Hl {
                constructor(t, e, r) {
                    this.name = t, this.prefix = e, this.baseEncode = r
                }
                encode(t) {
                    if (t instanceof Uint8Array) return `${this.prefix}${this.baseEncode(t)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class Kl {
                constructor(t, e, r) {
                    if (this.name = t, this.prefix = e, void 0 === e.codePointAt(0)) throw new Error("Invalid prefix character");
                    this.prefixCodePoint = e.codePointAt(0), this.baseDecode = r
                }
                decode(t) {
                    if ("string" === typeof t) {
                        if (t.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(t.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(t) {
                    return $l(this, t)
                }
            }
            class Vl {
                constructor(t) {
                    this.decoders = t
                }
                or(t) {
                    return $l(this, t)
                }
                decode(t) {
                    const e = t[0],
                        r = this.decoders[e];
                    if (r) return r.decode(t);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            const $l = (t, e) => new Vl({ ...t.decoders || {
                    [t.prefix]: t
                },
                ...e.decoders || {
                    [e.prefix]: e
                }
            });
            class Wl {
                constructor(t, e, r, i) {
                    this.name = t, this.prefix = e, this.baseEncode = r, this.baseDecode = i, this.encoder = new Hl(t, e, r), this.decoder = new Kl(t, e, i)
                }
                encode(t) {
                    return this.encoder.encode(t)
                }
                decode(t) {
                    return this.decoder.decode(t)
                }
            }
            const Gl = t => {
                    let {
                        name: e,
                        prefix: r,
                        encode: i,
                        decode: n
                    } = t;
                    return new Wl(e, r, i, n)
                },
                Ql = t => {
                    let {
                        prefix: e,
                        name: r,
                        alphabet: i
                    } = t;
                    const {
                        encode: n,
                        decode: s
                    } = zl(i, r);
                    return Gl({
                        prefix: e,
                        name: r,
                        encode: n,
                        decode: t => Fl(s(t))
                    })
                },
                Yl = t => {
                    let {
                        name: e,
                        prefix: r,
                        bitsPerChar: i,
                        alphabet: n
                    } = t;
                    return Gl({
                        prefix: r,
                        name: e,
                        encode: t => ((t, e, r) => {
                            const i = "=" === e[e.length - 1],
                                n = (1 << r) - 1;
                            let s = "",
                                o = 0,
                                a = 0;
                            for (let h = 0; h < t.length; ++h)
                                for (a = a << 8 | t[h], o += 8; o > r;) o -= r, s += e[n & a >> o];
                            if (o && (s += e[n & a << r - o]), i)
                                for (; s.length * r & 7;) s += "=";
                            return s
                        })(t, n, i),
                        decode: t => ((t, e, r, i) => {
                            const n = {};
                            for (let u = 0; u < e.length; ++u) n[e[u]] = u;
                            let s = t.length;
                            for (;
                                "=" === t[s - 1];) --s;
                            const o = new Uint8Array(s * r / 8 | 0);
                            let a = 0,
                                h = 0,
                                c = 0;
                            for (let u = 0; u < s; ++u) {
                                const e = n[t[u]];
                                if (void 0 === e) throw new SyntaxError(`Non-${i} character`);
                                h = h << r | e, a += r, a >= 8 && (a -= 8, o[c++] = 255 & h >> a)
                            }
                            if (a >= r || 255 & h << 8 - a) throw new SyntaxError("Unexpected end of data");
                            return o
                        })(t, n, i, e)
                    })
                },
                Jl = Gl({
                    prefix: "\0",
                    name: "identity",
                    encode: t => (t => (new TextDecoder).decode(t))(t),
                    decode: t => (t => (new TextEncoder).encode(t))(t)
                }),
                Xl = Yl({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                Zl = Yl({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                tf = Ql({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                ef = Yl({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                rf = Yl({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                nf = Yl({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                sf = Yl({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                of = Yl({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                af = Yl({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                hf = Yl({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                cf = Yl({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                uf = Yl({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                lf = Yl({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                ff = Yl({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                df = Ql({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                pf = Ql({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                gf = Ql({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                mf = Ql({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                yf = Yl({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                vf = Yl({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                wf = Yl({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                bf = Yl({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                _f = Array.from("\ud83d\ude80\ud83e\ude90\u2604\ud83d\udef0\ud83c\udf0c\ud83c\udf11\ud83c\udf12\ud83c\udf13\ud83c\udf14\ud83c\udf15\ud83c\udf16\ud83c\udf17\ud83c\udf18\ud83c\udf0d\ud83c\udf0f\ud83c\udf0e\ud83d\udc09\u2600\ud83d\udcbb\ud83d\udda5\ud83d\udcbe\ud83d\udcbf\ud83d\ude02\u2764\ud83d\ude0d\ud83e\udd23\ud83d\ude0a\ud83d\ude4f\ud83d\udc95\ud83d\ude2d\ud83d\ude18\ud83d\udc4d\ud83d\ude05\ud83d\udc4f\ud83d\ude01\ud83d\udd25\ud83e\udd70\ud83d\udc94\ud83d\udc96\ud83d\udc99\ud83d\ude22\ud83e\udd14\ud83d\ude06\ud83d\ude44\ud83d\udcaa\ud83d\ude09\u263a\ud83d\udc4c\ud83e\udd17\ud83d\udc9c\ud83d\ude14\ud83d\ude0e\ud83d\ude07\ud83c\udf39\ud83e\udd26\ud83c\udf89\ud83d\udc9e\u270c\u2728\ud83e\udd37\ud83d\ude31\ud83d\ude0c\ud83c\udf38\ud83d\ude4c\ud83d\ude0b\ud83d\udc97\ud83d\udc9a\ud83d\ude0f\ud83d\udc9b\ud83d\ude42\ud83d\udc93\ud83e\udd29\ud83d\ude04\ud83d\ude00\ud83d\udda4\ud83d\ude03\ud83d\udcaf\ud83d\ude48\ud83d\udc47\ud83c\udfb6\ud83d\ude12\ud83e\udd2d\u2763\ud83d\ude1c\ud83d\udc8b\ud83d\udc40\ud83d\ude2a\ud83d\ude11\ud83d\udca5\ud83d\ude4b\ud83d\ude1e\ud83d\ude29\ud83d\ude21\ud83e\udd2a\ud83d\udc4a\ud83e\udd73\ud83d\ude25\ud83e\udd24\ud83d\udc49\ud83d\udc83\ud83d\ude33\u270b\ud83d\ude1a\ud83d\ude1d\ud83d\ude34\ud83c\udf1f\ud83d\ude2c\ud83d\ude43\ud83c\udf40\ud83c\udf37\ud83d\ude3b\ud83d\ude13\u2b50\u2705\ud83e\udd7a\ud83c\udf08\ud83d\ude08\ud83e\udd18\ud83d\udca6\u2714\ud83d\ude23\ud83c\udfc3\ud83d\udc90\u2639\ud83c\udf8a\ud83d\udc98\ud83d\ude20\u261d\ud83d\ude15\ud83c\udf3a\ud83c\udf82\ud83c\udf3b\ud83d\ude10\ud83d\udd95\ud83d\udc9d\ud83d\ude4a\ud83d\ude39\ud83d\udde3\ud83d\udcab\ud83d\udc80\ud83d\udc51\ud83c\udfb5\ud83e\udd1e\ud83d\ude1b\ud83d\udd34\ud83d\ude24\ud83c\udf3c\ud83d\ude2b\u26bd\ud83e\udd19\u2615\ud83c\udfc6\ud83e\udd2b\ud83d\udc48\ud83d\ude2e\ud83d\ude46\ud83c\udf7b\ud83c\udf43\ud83d\udc36\ud83d\udc81\ud83d\ude32\ud83c\udf3f\ud83e\udde1\ud83c\udf81\u26a1\ud83c\udf1e\ud83c\udf88\u274c\u270a\ud83d\udc4b\ud83d\ude30\ud83e\udd28\ud83d\ude36\ud83e\udd1d\ud83d\udeb6\ud83d\udcb0\ud83c\udf53\ud83d\udca2\ud83e\udd1f\ud83d\ude41\ud83d\udea8\ud83d\udca8\ud83e\udd2c\u2708\ud83c\udf80\ud83c\udf7a\ud83e\udd13\ud83d\ude19\ud83d\udc9f\ud83c\udf31\ud83d\ude16\ud83d\udc76\ud83e\udd74\u25b6\u27a1\u2753\ud83d\udc8e\ud83d\udcb8\u2b07\ud83d\ude28\ud83c\udf1a\ud83e\udd8b\ud83d\ude37\ud83d\udd7a\u26a0\ud83d\ude45\ud83d\ude1f\ud83d\ude35\ud83d\udc4e\ud83e\udd32\ud83e\udd20\ud83e\udd27\ud83d\udccc\ud83d\udd35\ud83d\udc85\ud83e\uddd0\ud83d\udc3e\ud83c\udf52\ud83d\ude17\ud83e\udd11\ud83c\udf0a\ud83e\udd2f\ud83d\udc37\u260e\ud83d\udca7\ud83d\ude2f\ud83d\udc86\ud83d\udc46\ud83c\udfa4\ud83d\ude47\ud83c\udf51\u2744\ud83c\udf34\ud83d\udca3\ud83d\udc38\ud83d\udc8c\ud83d\udccd\ud83e\udd40\ud83e\udd22\ud83d\udc45\ud83d\udca1\ud83d\udca9\ud83d\udc50\ud83d\udcf8\ud83d\udc7b\ud83e\udd10\ud83e\udd2e\ud83c\udfbc\ud83e\udd75\ud83d\udea9\ud83c\udf4e\ud83c\udf4a\ud83d\udc7c\ud83d\udc8d\ud83d\udce3\ud83e\udd42"),
                Af = _f.reduce(((t, e, r) => (t[r] = e, t)), []),
                Ef = _f.reduce(((t, e, r) => (t[e.codePointAt(0)] = r, t)), []);
            const Sf = Gl({
                prefix: "\ud83d\ude80",
                name: "base256emoji",
                encode: function(t) {
                    return t.reduce(((t, e) => t += Af[e]), "")
                },
                decode: function(t) {
                    const e = [];
                    for (const r of t) {
                        const t = Ef[r.codePointAt(0)];
                        if (void 0 === t) throw new Error(`Non-base256emoji character: ${r}`);
                        e.push(t)
                    }
                    return new Uint8Array(e)
                }
            });
            var If = function t(e, r, i) {
                    r = r || [];
                    var n = i = i || 0;
                    for (; e >= xf;) r[i++] = 255 & e | Pf, e /= 128;
                    for (; e & Mf;) r[i++] = 255 & e | Pf, e >>>= 7;
                    return r[i] = 0 | e, t.bytes = i - n + 1, r
                },
                Pf = 128,
                Mf = -128,
                xf = Math.pow(2, 31);
            var Of = function t(e, r) {
                    var i, n = 0,
                        s = 0,
                        o = r = r || 0,
                        a = e.length;
                    do {
                        if (o >= a) throw t.bytes = 0, new RangeError("Could not decode varint");
                        i = e[o++], n += s < 28 ? (i & Nf) << s : (i & Nf) * Math.pow(2, s), s += 7
                    } while (i >= Cf);
                    return t.bytes = o - r, n
                },
                Cf = 128,
                Nf = 127;
            var Rf = Math.pow(2, 7),
                Tf = Math.pow(2, 14),
                Uf = Math.pow(2, 21),
                Df = Math.pow(2, 28),
                kf = Math.pow(2, 35),
                Bf = Math.pow(2, 42),
                Lf = Math.pow(2, 49),
                qf = Math.pow(2, 56),
                jf = Math.pow(2, 63);
            const zf = {
                    encode: If,
                    decode: Of,
                    encodingLength: function(t) {
                        return t < Rf ? 1 : t < Tf ? 2 : t < Uf ? 3 : t < Df ? 4 : t < kf ? 5 : t < Bf ? 6 : t < Lf ? 7 : t < qf ? 8 : t < jf ? 9 : 10
                    }
                },
                Ff = function(t, e) {
                    let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    return zf.encode(t, e, r), e
                },
                Hf = t => zf.encodingLength(t),
                Kf = (t, e) => {
                    const r = e.byteLength,
                        i = Hf(t),
                        n = i + Hf(r),
                        s = new Uint8Array(n + r);
                    return Ff(t, s, 0), Ff(r, s, i), s.set(e, n), new Vf(t, r, e, s)
                };
            class Vf {
                constructor(t, e, r, i) {
                    this.code = t, this.size = e, this.digest = r, this.bytes = i
                }
            }
            const $f = t => {
                let {
                    name: e,
                    code: r,
                    encode: i
                } = t;
                return new Wf(e, r, i)
            };
            class Wf {
                constructor(t, e, r) {
                    this.name = t, this.code = e, this.encode = r
                }
                digest(t) {
                    if (t instanceof Uint8Array) {
                        const e = this.encode(t);
                        return e instanceof Uint8Array ? Kf(this.code, e) : e.then((t => Kf(this.code, t)))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            const Gf = t => async e => new Uint8Array(await crypto.subtle.digest(t, e)),
                Qf = $f({
                    name: "sha2-256",
                    code: 18,
                    encode: Gf("SHA-256")
                }),
                Yf = $f({
                    name: "sha2-512",
                    code: 19,
                    encode: Gf("SHA-512")
                }),
                Jf = Fl,
                Xf = {
                    code: 0,
                    name: "identity",
                    encode: Jf,
                    digest: t => Kf(0, Jf(t))
                },
                Zf = "raw",
                td = 85,
                ed = t => Fl(t),
                rd = t => Fl(t),
                id = new TextEncoder,
                nd = new TextDecoder,
                sd = "json",
                od = 512,
                ad = t => id.encode(JSON.stringify(t)),
                hd = t => JSON.parse(nd.decode(t));
            Symbol.toStringTag, Symbol.for("nodejs.util.inspect.custom");
            Symbol.for("@ipld/js-cid/CID");
            const cd = { ...N,
                ...R,
                ...T,
                ...U,
                ...D,
                ...k,
                ...B,
                ...L,
                ...q,
                ...j
            };

            function ud(t, e, r, i) {
                return {
                    name: t,
                    prefix: e,
                    encoder: {
                        name: t,
                        prefix: e,
                        encode: r
                    },
                    decoder: {
                        decode: i
                    }
                }
            }
            const ld = ud("utf8", "u", (t => "u" + new TextDecoder("utf8").decode(t)), (t => (new TextEncoder).encode(t.substring(1)))),
                fd = ud("ascii", "a", (t => {
                    let e = "a";
                    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
                    return e
                }), (t => {
                    const e = function() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                        return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? globalThis.Buffer.allocUnsafe(t) : new Uint8Array(t)
                    }((t = t.substring(1)).length);
                    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
                    return e
                })),
                dd = {
                    utf8: ld,
                    "utf-8": ld,
                    hex: cd.base16,
                    latin1: fd,
                    ascii: fd,
                    binary: fd,
                    ...cd
                };
            const pd = "PARSE_ERROR",
                gd = "INVALID_REQUEST",
                md = "METHOD_NOT_FOUND",
                yd = "INVALID_PARAMS",
                vd = "INTERNAL_ERROR",
                wd = "SERVER_ERROR",
                bd = [-32700, -32600, -32601, -32602, -32603],
                _d = {
                    [pd]: {
                        code: -32700,
                        message: "Parse error"
                    },
                    [gd]: {
                        code: -32600,
                        message: "Invalid Request"
                    },
                    [md]: {
                        code: -32601,
                        message: "Method not found"
                    },
                    [yd]: {
                        code: -32602,
                        message: "Invalid params"
                    },
                    [vd]: {
                        code: -32603,
                        message: "Internal error"
                    },
                    [wd]: {
                        code: -32e3,
                        message: "Server error"
                    }
                },
                Ad = wd;

            function Ed(t) {
                return bd.includes(t)
            }

            function Sd(t) {
                return Object.keys(_d).includes(t) ? _d[t] : _d[Ad]
            }

            function Id(t) {
                const e = Object.values(_d).find((e => e.code === t));
                return e || _d[Ad]
            }

            function Pd(t, e, r) {
                return t.message.includes("getaddrinfo ENOTFOUND") || t.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${r} RPC url at ${e}`) : t
            }
            var Md = r(56640);

            function xd() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;
                return Date.now() * Math.pow(10, t) + Math.floor(Math.random() * Math.pow(10, t))
            }

            function Od() {
                return BigInt(xd(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 6))
            }

            function Cd(t, e, r) {
                return {
                    id: r || xd(),
                    jsonrpc: "2.0",
                    method: t,
                    params: e
                }
            }

            function Nd(t, e) {
                return {
                    id: t,
                    jsonrpc: "2.0",
                    result: e
                }
            }

            function Rd(t, e, r) {
                return {
                    id: t,
                    jsonrpc: "2.0",
                    error: Td(e, r)
                }
            }

            function Td(t, e) {
                return "undefined" === typeof t ? Sd(vd) : ("string" === typeof t && (t = Object.assign(Object.assign({}, Sd(wd)), {
                    message: t
                })), "undefined" !== typeof e && (t.data = e), Ed(t.code) && (t = Id(t.code)), t)
            }
            class Ud {}
            class Dd extends Ud {
                constructor() {
                    super()
                }
            }
            class kd extends Dd {
                constructor(t) {
                    super()
                }
            }

            function Bd(t, e) {
                const r = function(t) {
                    const e = t.match(new RegExp(/^\w+:/, "gi"));
                    if (e && e.length) return e[0]
                }(t);
                return "undefined" !== typeof r && new RegExp(e).test(r)
            }

            function Ld(t) {
                return Bd(t, "^https?:")
            }

            function qd(t) {
                return Bd(t, "^wss?:")
            }

            function jd(t) {
                return "object" === typeof t && "id" in t && "jsonrpc" in t && "2.0" === t.jsonrpc
            }

            function zd(t) {
                return jd(t) && "method" in t
            }

            function Fd(t) {
                return jd(t) && (Hd(t) || Kd(t))
            }

            function Hd(t) {
                return "result" in t
            }

            function Kd(t) {
                return "error" in t
            }
            class Vd extends kd {
                constructor(t) {
                    super(t), this.events = new V.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(t), this.connection.connected && this.registerEventListeners()
                }
                async connect() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.connection;
                    await this.open(t)
                }
                async disconnect() {
                    await this.close()
                }
                on(t, e) {
                    this.events.on(t, e)
                }
                once(t, e) {
                    this.events.once(t, e)
                }
                off(t, e) {
                    this.events.off(t, e)
                }
                removeListener(t, e) {
                    this.events.removeListener(t, e)
                }
                async request(t, e) {
                    return this.requestStrict(Cd(t.method, t.params || [], t.id || Od().toString()), e)
                }
                async requestStrict(t, e) {
                    return new Promise((async (r, i) => {
                        if (!this.connection.connected) try {
                            await this.open()
                        } catch (n) {
                            i(n)
                        }
                        this.events.on(`${t.id}`, (t => {
                            Kd(t) ? i(t.error) : r(t.result)
                        }));
                        try {
                            await this.connection.send(t, e)
                        } catch (n) {
                            i(n)
                        }
                    }))
                }
                setConnection() {
                    return arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.connection
                }
                onPayload(t) {
                    this.events.emit("payload", t), Fd(t) ? this.events.emit(`${t.id}`, t) : this.events.emit("message", {
                        type: t.method,
                        data: t.params
                    })
                }
                onClose(t) {
                    t && 3e3 === t.code && this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason?`(${t.reason})`:""}`)), this.events.emit("disconnect")
                }
                async open() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.connection;
                    this.connection === t && this.connection.connected || (this.connection.connected && this.close(), "string" == typeof t && (await this.connection.open(t), t = this.connection), this.connection = this.setConnection(t), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"))
                }
                async close() {
                    await this.connection.close()
                }
                registerEventListeners() {
                    this.hasRegisteredEventListeners || (this.connection.on("payload", (t => this.onPayload(t))), this.connection.on("close", (t => this.onClose(t))), this.connection.on("error", (t => this.events.emit("error", t))), this.connection.on("register_error", (t => this.onClose())), this.hasRegisteredEventListeners = !0)
                }
            }
            const $d = t => t.split("?")[0],
                Wd = typeof WebSocket < "u" ? WebSocket : typeof r.g < "u" && typeof r.g.WebSocket < "u" ? r.g.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : r(13993);
            class Gd {
                constructor(t) {
                    if (this.url = t, this.events = new V.EventEmitter, this.registering = !1, !qd(t)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${t}`);
                    this.url = t
                }
                get connected() {
                    return typeof this.socket < "u"
                }
                get connecting() {
                    return this.registering
                }
                on(t, e) {
                    this.events.on(t, e)
                }
                once(t, e) {
                    this.events.once(t, e)
                }
                off(t, e) {
                    this.events.off(t, e)
                }
                removeListener(t, e) {
                    this.events.removeListener(t, e)
                }
                async open() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.url;
                    await this.register(t)
                }
                async close() {
                    return new Promise(((t, e) => {
                        typeof this.socket > "u" ? e(new Error("Connection already closed")) : (this.socket.onclose = e => {
                            this.onClose(e), t()
                        }, this.socket.close())
                    }))
                }
                async send(t) {
                    typeof this.socket > "u" && (this.socket = await this.register());
                    try {
                        this.socket.send(Zh(t))
                    } catch (e) {
                        this.onError(t.id, e)
                    }
                }
                register() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.url;
                    if (!qd(t)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${t}`);
                    if (this.registering) {
                        const t = this.events.getMaxListeners();
                        return (this.events.listenerCount("register_error") >= t || this.events.listenerCount("open") >= t) && this.events.setMaxListeners(t + 1), new Promise(((t, e) => {
                            this.events.once("register_error", (t => {
                                this.resetMaxListeners(), e(t)
                            })), this.events.once("open", (() => {
                                if (this.resetMaxListeners(), typeof this.socket > "u") return e(new Error("WebSocket connection is missing or invalid"));
                                t(this.socket)
                            }))
                        }))
                    }
                    return this.url = t, this.registering = !0, new Promise(((e, i) => {
                        const n = new URLSearchParams(t).get("origin"),
                            s = (0, Md.isReactNative)() ? {
                                headers: {
                                    origin: n
                                }
                            } : {
                                rejectUnauthorized: (a = t, !new RegExp("wss?://localhost(:d{2,5})?").test(a))
                            },
                            o = new Wd(t, [], s);
                        var a;
                        typeof WebSocket < "u" || typeof r.g < "u" && typeof r.g.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u" ? o.onerror = t => {
                            const e = t;
                            i(this.emitError(e.error))
                        } : o.on("error", (t => {
                            i(this.emitError(t))
                        })), o.onopen = () => {
                            this.onOpen(o), e(o)
                        }
                    }))
                }
                onOpen(t) {
                    t.onmessage = t => this.onPayload(t), t.onclose = t => this.onClose(t), this.socket = t, this.registering = !1, this.events.emit("open")
                }
                onClose(t) {
                    this.socket = void 0, this.registering = !1, this.events.emit("close", t)
                }
                onPayload(t) {
                    if (typeof t.data > "u") return;
                    const e = "string" == typeof t.data ? Xh(t.data) : t.data;
                    this.events.emit("payload", e)
                }
                onError(t, e) {
                    const r = this.parseError(e),
                        i = Rd(t, r.message || r.toString());
                    this.events.emit("payload", i)
                }
                parseError(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.url;
                    return Pd(t, $d(e), "WS")
                }
                resetMaxListeners() {
                    this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10)
                }
                emitError(t) {
                    const e = this.parseError(new Error(t ? .message || `WebSocket connection failed for host: ${$d(this.url)}`));
                    return this.events.emit("register_error", e), e
                }
            }
            var Qd = r(6676),
                Yd = r.n(Qd),
                Jd = r(34630),
                Xd = r.n(Jd);
            var Zd = function(t, e) {
                    if (t.length >= 255) throw new TypeError("Alphabet too long");
                    for (var r = new Uint8Array(256), i = 0; i < r.length; i++) r[i] = 255;
                    for (var n = 0; n < t.length; n++) {
                        var s = t.charAt(n),
                            o = s.charCodeAt(0);
                        if (255 !== r[o]) throw new TypeError(s + " is ambiguous");
                        r[o] = n
                    }
                    var a = t.length,
                        h = t.charAt(0),
                        c = Math.log(a) / Math.log(256),
                        u = Math.log(256) / Math.log(a);

                    function l(t) {
                        if ("string" != typeof t) throw new TypeError("Expected String");
                        if (0 === t.length) return new Uint8Array;
                        var e = 0;
                        if (" " !== t[e]) {
                            for (var i = 0, n = 0; t[e] === h;) i++, e++;
                            for (var s = (t.length - e) * c + 1 >>> 0, o = new Uint8Array(s); t[e];) {
                                var u = r[t.charCodeAt(e)];
                                if (255 === u) return;
                                for (var l = 0, f = s - 1;
                                    (0 !== u || l < n) && -1 !== f; f--, l++) u += a * o[f] >>> 0, o[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                                if (0 !== u) throw new Error("Non-zero carry");
                                n = l, e++
                            }
                            if (" " !== t[e]) {
                                for (var d = s - n; d !== s && 0 === o[d];) d++;
                                for (var p = new Uint8Array(i + (s - d)), g = i; d !== s;) p[g++] = o[d++];
                                return p
                            }
                        }
                    }
                    return {
                        encode: function(e) {
                            if (e instanceof Uint8Array || (ArrayBuffer.isView(e) ? e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : Array.isArray(e) && (e = Uint8Array.from(e))), !(e instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                            if (0 === e.length) return "";
                            for (var r = 0, i = 0, n = 0, s = e.length; n !== s && 0 === e[n];) n++, r++;
                            for (var o = (s - n) * u + 1 >>> 0, c = new Uint8Array(o); n !== s;) {
                                for (var l = e[n], f = 0, d = o - 1;
                                    (0 !== l || f < i) && -1 !== d; d--, f++) l += 256 * c[d] >>> 0, c[d] = l % a >>> 0, l = l / a >>> 0;
                                if (0 !== l) throw new Error("Non-zero carry");
                                i = f, n++
                            }
                            for (var p = o - i; p !== o && 0 === c[p];) p++;
                            for (var g = h.repeat(r); p < o; ++p) g += t.charAt(c[p]);
                            return g
                        },
                        decodeUnsafe: l,
                        decode: function(t) {
                            var r = l(t);
                            if (r) return r;
                            throw new Error(`Non-${e} character`)
                        }
                    }
                },
                tp = Zd;
            const ep = t => {
                if (t instanceof Uint8Array && "Uint8Array" === t.constructor.name) return t;
                if (t instanceof ArrayBuffer) return new Uint8Array(t);
                if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
                throw new Error("Unknown type, must be binary type")
            };
            class rp {
                constructor(t, e, r) {
                    this.name = t, this.prefix = e, this.baseEncode = r
                }
                encode(t) {
                    if (t instanceof Uint8Array) return `${this.prefix}${this.baseEncode(t)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class ip {
                constructor(t, e, r) {
                    if (this.name = t, this.prefix = e, void 0 === e.codePointAt(0)) throw new Error("Invalid prefix character");
                    this.prefixCodePoint = e.codePointAt(0), this.baseDecode = r
                }
                decode(t) {
                    if ("string" == typeof t) {
                        if (t.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(t.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(t) {
                    return sp(this, t)
                }
            }
            class np {
                constructor(t) {
                    this.decoders = t
                }
                or(t) {
                    return sp(this, t)
                }
                decode(t) {
                    const e = t[0],
                        r = this.decoders[e];
                    if (r) return r.decode(t);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            const sp = (t, e) => new np({ ...t.decoders || {
                    [t.prefix]: t
                },
                ...e.decoders || {
                    [e.prefix]: e
                }
            });
            class op {
                constructor(t, e, r, i) {
                    this.name = t, this.prefix = e, this.baseEncode = r, this.baseDecode = i, this.encoder = new rp(t, e, r), this.decoder = new ip(t, e, i)
                }
                encode(t) {
                    return this.encoder.encode(t)
                }
                decode(t) {
                    return this.decoder.decode(t)
                }
            }
            const ap = t => {
                    let {
                        name: e,
                        prefix: r,
                        encode: i,
                        decode: n
                    } = t;
                    return new op(e, r, i, n)
                },
                hp = t => {
                    let {
                        prefix: e,
                        name: r,
                        alphabet: i
                    } = t;
                    const {
                        encode: n,
                        decode: s
                    } = tp(i, r);
                    return ap({
                        prefix: e,
                        name: r,
                        encode: n,
                        decode: t => ep(s(t))
                    })
                },
                cp = t => {
                    let {
                        name: e,
                        prefix: r,
                        bitsPerChar: i,
                        alphabet: n
                    } = t;
                    return ap({
                        prefix: r,
                        name: e,
                        encode: t => ((t, e, r) => {
                            const i = "=" === e[e.length - 1],
                                n = (1 << r) - 1;
                            let s = "",
                                o = 0,
                                a = 0;
                            for (let h = 0; h < t.length; ++h)
                                for (a = a << 8 | t[h], o += 8; o > r;) o -= r, s += e[n & a >> o];
                            if (o && (s += e[n & a << r - o]), i)
                                for (; s.length * r & 7;) s += "=";
                            return s
                        })(t, n, i),
                        decode: t => ((t, e, r, i) => {
                            const n = {};
                            for (let u = 0; u < e.length; ++u) n[e[u]] = u;
                            let s = t.length;
                            for (;
                                "=" === t[s - 1];) --s;
                            const o = new Uint8Array(s * r / 8 | 0);
                            let a = 0,
                                h = 0,
                                c = 0;
                            for (let u = 0; u < s; ++u) {
                                const e = n[t[u]];
                                if (void 0 === e) throw new SyntaxError(`Non-${i} character`);
                                h = h << r | e, a += r, a >= 8 && (a -= 8, o[c++] = 255 & h >> a)
                            }
                            if (a >= r || 255 & h << 8 - a) throw new SyntaxError("Unexpected end of data");
                            return o
                        })(t, n, i, e)
                    })
                },
                up = ap({
                    prefix: "\0",
                    name: "identity",
                    encode: t => (t => (new TextDecoder).decode(t))(t),
                    decode: t => (t => (new TextEncoder).encode(t))(t)
                });
            var lp = Object.freeze({
                __proto__: null,
                identity: up
            });
            const fp = cp({
                prefix: "0",
                name: "base2",
                alphabet: "01",
                bitsPerChar: 1
            });
            var dp = Object.freeze({
                __proto__: null,
                base2: fp
            });
            const pp = cp({
                prefix: "7",
                name: "base8",
                alphabet: "01234567",
                bitsPerChar: 3
            });
            var gp = Object.freeze({
                __proto__: null,
                base8: pp
            });
            const mp = hp({
                prefix: "9",
                name: "base10",
                alphabet: "0123456789"
            });
            var yp = Object.freeze({
                __proto__: null,
                base10: mp
            });
            const vp = cp({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                wp = cp({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                });
            var bp = Object.freeze({
                __proto__: null,
                base16: vp,
                base16upper: wp
            });
            const _p = cp({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                Ap = cp({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                Ep = cp({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                Sp = cp({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                Ip = cp({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                Pp = cp({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                Mp = cp({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                xp = cp({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                Op = cp({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                });
            var Cp = Object.freeze({
                __proto__: null,
                base32: _p,
                base32upper: Ap,
                base32pad: Ep,
                base32padupper: Sp,
                base32hex: Ip,
                base32hexupper: Pp,
                base32hexpad: Mp,
                base32hexpadupper: xp,
                base32z: Op
            });
            const Np = hp({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                Rp = hp({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                });
            var Tp = Object.freeze({
                __proto__: null,
                base36: Np,
                base36upper: Rp
            });
            const Up = hp({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Dp = hp({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                });
            var kp = Object.freeze({
                __proto__: null,
                base58btc: Up,
                base58flickr: Dp
            });
            const Bp = cp({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                Lp = cp({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                qp = cp({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                jp = cp({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                });
            var zp = Object.freeze({
                __proto__: null,
                base64: Bp,
                base64pad: Lp,
                base64url: qp,
                base64urlpad: jp
            });
            const Fp = Array.from("\ud83d\ude80\ud83e\ude90\u2604\ud83d\udef0\ud83c\udf0c\ud83c\udf11\ud83c\udf12\ud83c\udf13\ud83c\udf14\ud83c\udf15\ud83c\udf16\ud83c\udf17\ud83c\udf18\ud83c\udf0d\ud83c\udf0f\ud83c\udf0e\ud83d\udc09\u2600\ud83d\udcbb\ud83d\udda5\ud83d\udcbe\ud83d\udcbf\ud83d\ude02\u2764\ud83d\ude0d\ud83e\udd23\ud83d\ude0a\ud83d\ude4f\ud83d\udc95\ud83d\ude2d\ud83d\ude18\ud83d\udc4d\ud83d\ude05\ud83d\udc4f\ud83d\ude01\ud83d\udd25\ud83e\udd70\ud83d\udc94\ud83d\udc96\ud83d\udc99\ud83d\ude22\ud83e\udd14\ud83d\ude06\ud83d\ude44\ud83d\udcaa\ud83d\ude09\u263a\ud83d\udc4c\ud83e\udd17\ud83d\udc9c\ud83d\ude14\ud83d\ude0e\ud83d\ude07\ud83c\udf39\ud83e\udd26\ud83c\udf89\ud83d\udc9e\u270c\u2728\ud83e\udd37\ud83d\ude31\ud83d\ude0c\ud83c\udf38\ud83d\ude4c\ud83d\ude0b\ud83d\udc97\ud83d\udc9a\ud83d\ude0f\ud83d\udc9b\ud83d\ude42\ud83d\udc93\ud83e\udd29\ud83d\ude04\ud83d\ude00\ud83d\udda4\ud83d\ude03\ud83d\udcaf\ud83d\ude48\ud83d\udc47\ud83c\udfb6\ud83d\ude12\ud83e\udd2d\u2763\ud83d\ude1c\ud83d\udc8b\ud83d\udc40\ud83d\ude2a\ud83d\ude11\ud83d\udca5\ud83d\ude4b\ud83d\ude1e\ud83d\ude29\ud83d\ude21\ud83e\udd2a\ud83d\udc4a\ud83e\udd73\ud83d\ude25\ud83e\udd24\ud83d\udc49\ud83d\udc83\ud83d\ude33\u270b\ud83d\ude1a\ud83d\ude1d\ud83d\ude34\ud83c\udf1f\ud83d\ude2c\ud83d\ude43\ud83c\udf40\ud83c\udf37\ud83d\ude3b\ud83d\ude13\u2b50\u2705\ud83e\udd7a\ud83c\udf08\ud83d\ude08\ud83e\udd18\ud83d\udca6\u2714\ud83d\ude23\ud83c\udfc3\ud83d\udc90\u2639\ud83c\udf8a\ud83d\udc98\ud83d\ude20\u261d\ud83d\ude15\ud83c\udf3a\ud83c\udf82\ud83c\udf3b\ud83d\ude10\ud83d\udd95\ud83d\udc9d\ud83d\ude4a\ud83d\ude39\ud83d\udde3\ud83d\udcab\ud83d\udc80\ud83d\udc51\ud83c\udfb5\ud83e\udd1e\ud83d\ude1b\ud83d\udd34\ud83d\ude24\ud83c\udf3c\ud83d\ude2b\u26bd\ud83e\udd19\u2615\ud83c\udfc6\ud83e\udd2b\ud83d\udc48\ud83d\ude2e\ud83d\ude46\ud83c\udf7b\ud83c\udf43\ud83d\udc36\ud83d\udc81\ud83d\ude32\ud83c\udf3f\ud83e\udde1\ud83c\udf81\u26a1\ud83c\udf1e\ud83c\udf88\u274c\u270a\ud83d\udc4b\ud83d\ude30\ud83e\udd28\ud83d\ude36\ud83e\udd1d\ud83d\udeb6\ud83d\udcb0\ud83c\udf53\ud83d\udca2\ud83e\udd1f\ud83d\ude41\ud83d\udea8\ud83d\udca8\ud83e\udd2c\u2708\ud83c\udf80\ud83c\udf7a\ud83e\udd13\ud83d\ude19\ud83d\udc9f\ud83c\udf31\ud83d\ude16\ud83d\udc76\ud83e\udd74\u25b6\u27a1\u2753\ud83d\udc8e\ud83d\udcb8\u2b07\ud83d\ude28\ud83c\udf1a\ud83e\udd8b\ud83d\ude37\ud83d\udd7a\u26a0\ud83d\ude45\ud83d\ude1f\ud83d\ude35\ud83d\udc4e\ud83e\udd32\ud83e\udd20\ud83e\udd27\ud83d\udccc\ud83d\udd35\ud83d\udc85\ud83e\uddd0\ud83d\udc3e\ud83c\udf52\ud83d\ude17\ud83e\udd11\ud83c\udf0a\ud83e\udd2f\ud83d\udc37\u260e\ud83d\udca7\ud83d\ude2f\ud83d\udc86\ud83d\udc46\ud83c\udfa4\ud83d\ude47\ud83c\udf51\u2744\ud83c\udf34\ud83d\udca3\ud83d\udc38\ud83d\udc8c\ud83d\udccd\ud83e\udd40\ud83e\udd22\ud83d\udc45\ud83d\udca1\ud83d\udca9\ud83d\udc50\ud83d\udcf8\ud83d\udc7b\ud83e\udd10\ud83e\udd2e\ud83c\udfbc\ud83e\udd75\ud83d\udea9\ud83c\udf4e\ud83c\udf4a\ud83d\udc7c\ud83d\udc8d\ud83d\udce3\ud83e\udd42"),
                Hp = Fp.reduce(((t, e, r) => (t[r] = e, t)), []),
                Kp = Fp.reduce(((t, e, r) => (t[e.codePointAt(0)] = r, t)), []);
            const Vp = ap({
                prefix: "\ud83d\ude80",
                name: "base256emoji",
                encode: function(t) {
                    return t.reduce(((t, e) => t += Hp[e]), "")
                },
                decode: function(t) {
                    const e = [];
                    for (const r of t) {
                        const t = Kp[r.codePointAt(0)];
                        if (void 0 === t) throw new Error(`Non-base256emoji character: ${r}`);
                        e.push(t)
                    }
                    return new Uint8Array(e)
                }
            });
            var $p = Object.freeze({
                    __proto__: null,
                    base256emoji: Vp
                }),
                Wp = function t(e, r, i) {
                    r = r || [];
                    for (var n = i = i || 0; e >= Yp;) r[i++] = 255 & e | Gp, e /= 128;
                    for (; e & Qp;) r[i++] = 255 & e | Gp, e >>>= 7;
                    return r[i] = 0 | e, t.bytes = i - n + 1, r
                },
                Gp = 128,
                Qp = -128,
                Yp = Math.pow(2, 31);
            var Jp = function t(e, r) {
                    var i, n = 0,
                        s = (r = r || 0, 0),
                        o = r,
                        a = e.length;
                    do {
                        if (o >= a) throw t.bytes = 0, new RangeError("Could not decode varint");
                        i = e[o++], n += s < 28 ? (i & Zp) << s : (i & Zp) * Math.pow(2, s), s += 7
                    } while (i >= Xp);
                    return t.bytes = o - r, n
                },
                Xp = 128,
                Zp = 127;
            var tg = Math.pow(2, 7),
                eg = Math.pow(2, 14),
                rg = Math.pow(2, 21),
                ig = Math.pow(2, 28),
                ng = Math.pow(2, 35),
                sg = Math.pow(2, 42),
                og = Math.pow(2, 49),
                ag = Math.pow(2, 56),
                hg = Math.pow(2, 63),
                cg = {
                    encode: Wp,
                    decode: Jp,
                    encodingLength: function(t) {
                        return t < tg ? 1 : t < eg ? 2 : t < rg ? 3 : t < ig ? 4 : t < ng ? 5 : t < sg ? 6 : t < og ? 7 : t < ag ? 8 : t < hg ? 9 : 10
                    }
                },
                ug = cg;
            const lg = function(t, e) {
                    let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    return ug.encode(t, e, r), e
                },
                fg = t => ug.encodingLength(t),
                dg = (t, e) => {
                    const r = e.byteLength,
                        i = fg(t),
                        n = i + fg(r),
                        s = new Uint8Array(n + r);
                    return lg(t, s, 0), lg(r, s, i), s.set(e, n), new pg(t, r, e, s)
                };
            class pg {
                constructor(t, e, r, i) {
                    this.code = t, this.size = e, this.digest = r, this.bytes = i
                }
            }
            const gg = t => {
                let {
                    name: e,
                    code: r,
                    encode: i
                } = t;
                return new mg(e, r, i)
            };
            class mg {
                constructor(t, e, r) {
                    this.name = t, this.code = e, this.encode = r
                }
                digest(t) {
                    if (t instanceof Uint8Array) {
                        const e = this.encode(t);
                        return e instanceof Uint8Array ? dg(this.code, e) : e.then((t => dg(this.code, t)))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            const yg = t => async e => new Uint8Array(await crypto.subtle.digest(t, e)),
                vg = gg({
                    name: "sha2-256",
                    code: 18,
                    encode: yg("SHA-256")
                }),
                wg = gg({
                    name: "sha2-512",
                    code: 19,
                    encode: yg("SHA-512")
                });
            Object.freeze({
                __proto__: null,
                sha256: vg,
                sha512: wg
            });
            const bg = ep,
                _g = {
                    code: 0,
                    name: "identity",
                    encode: bg,
                    digest: t => dg(0, bg(t))
                };
            Object.freeze({
                __proto__: null,
                identity: _g
            });
            new TextEncoder, new TextDecoder;
            const Ag = { ...lp,
                ...dp,
                ...gp,
                ...yp,
                ...bp,
                ...Cp,
                ...Tp,
                ...kp,
                ...zp,
                ...$p
            };

            function Eg(t, e, r, i) {
                return {
                    name: t,
                    prefix: e,
                    encoder: {
                        name: t,
                        prefix: e,
                        encode: r
                    },
                    decoder: {
                        decode: i
                    }
                }
            }
            const Sg = Eg("utf8", "u", (t => "u" + new TextDecoder("utf8").decode(t)), (t => (new TextEncoder).encode(t.substring(1)))),
                Ig = Eg("ascii", "a", (t => {
                    let e = "a";
                    for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
                    return e
                }), (t => {
                    const e = function() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                        return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? globalThis.Buffer.allocUnsafe(t) : new Uint8Array(t)
                    }((t = t.substring(1)).length);
                    for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);
                    return e
                })),
                Pg = {
                    utf8: Sg,
                    "utf-8": Sg,
                    hex: Ag.base16,
                    latin1: Ig,
                    ascii: Ig,
                    binary: Ig,
                    ...Ag
                };
            const Mg = "core",
                xg = `wc@2:${Mg}:`,
                Og = "error",
                Cg = {
                    database: ":memory:"
                },
                Ng = "client_ed25519_seed",
                Rg = at.ONE_DAY,
                Tg = at.SIX_HOURS,
                Ug = "wss://relay.walletconnect.org",
                Dg = "relayer_message",
                kg = "relayer_message_ack",
                Bg = "relayer_connect",
                Lg = "relayer_disconnect",
                qg = "relayer_error",
                jg = "relayer_connection_stalled",
                zg = "relayer_publish",
                Fg = "payload",
                Hg = "connect",
                Kg = "disconnect",
                Vg = "error",
                $g = "subscription_created",
                Wg = "subscription_deleted",
                Gg = "subscription_sync",
                Qg = "subscription_resubscribed",
                Yg = 1e3 * at.FIVE_SECONDS,
                Jg = {
                    wc_pairingDelete: {
                        req: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1e3
                        },
                        res: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1001
                        }
                    },
                    wc_pairingPing: {
                        req: {
                            ttl: at.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1002
                        },
                        res: {
                            ttl: at.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1003
                        }
                    },
                    unregistered_method: {
                        req: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 0
                        },
                        res: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 0
                        }
                    }
                },
                Xg = "pairing_create",
                Zg = "pairing_expire",
                tm = "pairing_delete",
                em = "pairing_ping",
                rm = "history_created",
                im = "history_updated",
                nm = "history_deleted",
                sm = "history_sync",
                om = "expirer_created",
                am = "expirer_deleted",
                hm = "expirer_expired",
                cm = "expirer_sync",
                um = "verify-api",
                lm = "https://verify.walletconnect.org",
                fm = lm,
                dm = ["https://verify.walletconnect.com", lm];
            class pm {
                constructor(t, e) {
                    this.core = t, this.logger = e, this.keychain = new Map, this.name = "keychain", this.version = "0.3", this.initialized = !1, this.storagePrefix = xg, this.init = async () => {
                        if (!this.initialized) {
                            const t = await this.getKeyChain();
                            typeof t < "u" && (this.keychain = t), this.initialized = !0
                        }
                    }, this.has = t => (this.isInitialized(), this.keychain.has(t)), this.set = async (t, e) => {
                        this.isInitialized(), this.keychain.set(t, e), await this.persist()
                    }, this.get = t => {
                        this.isInitialized();
                        const e = this.keychain.get(t);
                        if (typeof e > "u") {
                            const {
                                message: e
                            } = ih("NO_MATCHING_KEY", `${this.name}: ${t}`);
                            throw new Error(e)
                        }
                        return e
                    }, this.del = async t => {
                        this.isInitialized(), this.keychain.delete(t), await this.persist()
                    }, this.core = t, this.logger = Uc(e, this.name)
                }
                get context() {
                    return Tc(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                }
                async setKeyChain(t) {
                    await this.core.storage.setItem(this.storageKey, mr(t))
                }
                async getKeyChain() {
                    const t = await this.core.storage.getItem(this.storageKey);
                    return typeof t < "u" ? yr(t) : void 0
                }
                async persist() {
                    await this.setKeyChain(this.keychain)
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
            }
            class gm {
                constructor(t, e, r) {
                    this.core = t, this.logger = e, this.name = "crypto", this.randomSessionIdentifier = Oa(), this.initialized = !1, this.init = async () => {
                        this.initialized || (await this.keychain.init(), this.initialized = !0)
                    }, this.hasKeys = t => (this.isInitialized(), this.keychain.has(t)), this.getClientId = async () => {
                        this.isInitialized();
                        return Bl(Ll(await this.getClientSeed()).publicKey)
                    }, this.generateKeyPair = () => {
                        this.isInitialized();
                        const t = function() {
                            const t = gt.TZ();
                            return {
                                privateKey: $e(t.secretKey, ba),
                                publicKey: $e(t.publicKey, ba)
                            }
                        }();
                        return this.setPrivateKey(t.publicKey, t.privateKey)
                    }, this.signJWT = async t => {
                        this.isInitialized();
                        const e = Ll(await this.getClientSeed()),
                            r = this.randomSessionIdentifier,
                            i = Rg;
                        return await ql(r, t, i, e)
                    }, this.generateSharedKey = (t, e, r) => {
                        this.isInitialized();
                        const i = function(t, e) {
                            const r = gt.Tc(Ve(t, ba), Ve(e, ba), !0);
                            return $e(new ft.i(pt.aD, r).expand(xa), ba)
                        }(this.getPrivateKey(t), e);
                        return this.setSymKey(i, r)
                    }, this.setSymKey = async (t, e) => {
                        this.isInitialized();
                        const r = e || Ca(t);
                        return await this.keychain.set(r, t), r
                    }, this.deleteKeyPair = async t => {
                        this.isInitialized(), await this.keychain.del(t)
                    }, this.deleteSymKey = async t => {
                        this.isInitialized(), await this.keychain.del(t)
                    }, this.encode = async (t, e, r) => {
                        this.isInitialized();
                        const i = Da(r),
                            n = Zh(e);
                        if (ka(i)) {
                            const e = i.senderPublicKey,
                                r = i.receiverPublicKey;
                            t = await this.generateSharedKey(e, r)
                        }
                        const s = this.getSymKey(t),
                            {
                                type: o,
                                senderPublicKey: a
                            } = i;
                        return Ta({
                            type: o,
                            symKey: s,
                            message: n,
                            senderPublicKey: a
                        })
                    }, this.decode = async (t, e, r) => {
                        this.isInitialized();
                        const i = function(t, e) {
                            const r = Ua(t);
                            return Da({
                                type: Ra(r.type),
                                senderPublicKey: typeof r.senderPublicKey < "u" ? $e(r.senderPublicKey, ba) : void 0,
                                receiverPublicKey: e ? .receiverPublicKey
                            })
                        }(e, r);
                        if (ka(i)) {
                            const e = i.receiverPublicKey,
                                r = i.senderPublicKey;
                            t = await this.generateSharedKey(e, r)
                        }
                        try {
                            const r = function(t) {
                                const e = new lt.g6(Ve(t.symKey, ba)),
                                    {
                                        sealed: r,
                                        iv: i
                                    } = Ua(t.encoded),
                                    n = e.open(i, r);
                                if (null === n) throw new Error("Failed to decrypt");
                                return $e(n, Aa)
                            }({
                                symKey: this.getSymKey(t),
                                encoded: e
                            });
                            return Xh(r)
                        } catch (n) {
                            this.logger.error(`Failed to decode message from topic: '${t}', clientId: '${await this.getClientId()}'`), this.logger.error(n)
                        }
                    }, this.getPayloadType = t => Ra(Ua(t).type), this.getPayloadSenderPublicKey = t => {
                        const e = Ua(t);
                        return e.senderPublicKey ? function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8";
                            const r = dd[e];
                            if (!r) throw new Error(`Unsupported encoding "${e}"`);
                            return "utf8" !== e && "utf-8" !== e || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.encoder.encode(t).substring(1) : globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8")
                        }(e.senderPublicKey, ba) : void 0
                    }, this.core = t, this.logger = Uc(e, this.name), this.keychain = r || new pm(this.core, this.logger)
                }
                get context() {
                    return Tc(this.logger)
                }
                async setPrivateKey(t, e) {
                    return await this.keychain.set(t, e), t
                }
                getPrivateKey(t) {
                    return this.keychain.get(t)
                }
                async getClientSeed() {
                    let t = "";
                    try {
                        t = this.keychain.get(Ng)
                    } catch {
                        t = Oa(), await this.keychain.set(Ng, t)
                    }
                    return function(t) {
                        let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf8";
                        const r = Pg[e];
                        if (!r) throw new Error(`Unsupported encoding "${e}"`);
                        return "utf8" !== e && "utf-8" !== e || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode(`${r.prefix}${t}`) : globalThis.Buffer.from(t, "utf8")
                    }(t, "base16")
                }
                getSymKey(t) {
                    return this.keychain.get(t)
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
            }
            class mm extends Lc {
                constructor(t, e) {
                    super(t, e), this.logger = t, this.core = e, this.messages = new Map, this.name = "messages", this.version = "0.3", this.initialized = !1, this.storagePrefix = xg, this.init = async () => {
                        if (!this.initialized) {
                            this.logger.trace("Initialized");
                            try {
                                const t = await this.getRelayerMessages();
                                typeof t < "u" && (this.messages = t), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({
                                    type: "method",
                                    method: "restore",
                                    size: this.messages.size
                                })
                            } catch (Cc) {
                                this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(Cc)
                            } finally {
                                this.initialized = !0
                            }
                        }
                    }, this.set = async (t, e) => {
                        this.isInitialized();
                        const r = Na(e);
                        let i = this.messages.get(t);
                        return typeof i > "u" && (i = {}), typeof i[r] < "u" || (i[r] = e, this.messages.set(t, i), await this.persist()), r
                    }, this.get = t => {
                        this.isInitialized();
                        let e = this.messages.get(t);
                        return typeof e > "u" && (e = {}), e
                    }, this.has = (t, e) => {
                        this.isInitialized();
                        return typeof this.get(t)[Na(e)] < "u"
                    }, this.del = async t => {
                        this.isInitialized(), this.messages.delete(t), await this.persist()
                    }, this.logger = Uc(t, this.name), this.core = e
                }
                get context() {
                    return Tc(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                }
                async setRelayerMessages(t) {
                    await this.core.storage.setItem(this.storageKey, mr(t))
                }
                async getRelayerMessages() {
                    const t = await this.core.storage.getItem(this.storageKey);
                    return typeof t < "u" ? yr(t) : void 0
                }
                async persist() {
                    await this.setRelayerMessages(this.messages)
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
            }
            class ym extends qc {
                constructor(t, e) {
                    super(t, e), this.relayer = t, this.logger = e, this.events = new V.EventEmitter, this.name = "publisher", this.queue = new Map, this.publishTimeout = (0, at.toMiliseconds)(at.ONE_MINUTE), this.failedPublishTimeout = (0, at.toMiliseconds)(at.ONE_SECOND), this.needsTransportRestart = !1, this.publish = async (t, e, r) => {
                        var i;
                        this.logger.debug("Publishing Payload"), this.logger.trace({
                            type: "method",
                            method: "publish",
                            params: {
                                topic: t,
                                message: e,
                                opts: r
                            }
                        });
                        const n = r ? .ttl || Tg,
                            s = Ba(r),
                            o = r ? .prompt || !1,
                            a = r ? .tag || 0,
                            h = r ? .id || Od().toString(),
                            c = {
                                topic: t,
                                message: e,
                                opts: {
                                    ttl: n,
                                    relay: s,
                                    prompt: o,
                                    tag: a,
                                    id: h
                                }
                            },
                            u = `Failed to publish payload, please try again. id:${h} tag:${a}`,
                            l = Date.now();
                        let f, d = 1;
                        try {
                            for (; void 0 === f;) {
                                if (Date.now() - l > this.publishTimeout) throw new Error(u);
                                this.logger.trace({
                                    id: h,
                                    attempts: d
                                }, `publisher.publish - attempt ${d}`), f = await await wr(this.rpcPublish(t, e, n, s, o, a, h).catch((t => this.logger.warn(t))), this.publishTimeout, u), d++, f || await new Promise((t => setTimeout(t, this.failedPublishTimeout)))
                            }
                            this.relayer.events.emit(zg, c), this.logger.debug("Successfully Published Payload"), this.logger.trace({
                                type: "method",
                                method: "publish",
                                params: {
                                    id: h,
                                    topic: t,
                                    message: e,
                                    opts: r
                                }
                            })
                        } catch (p) {
                            if (this.logger.debug("Failed to Publish Payload"), this.logger.error(p), null != (i = r ? .internal) && i.throwOnFailedPublish) throw p;
                            this.queue.set(h, c)
                        }
                    }, this.on = (t, e) => {
                        this.events.on(t, e)
                    }, this.once = (t, e) => {
                        this.events.once(t, e)
                    }, this.off = (t, e) => {
                        this.events.off(t, e)
                    }, this.removeListener = (t, e) => {
                        this.events.removeListener(t, e)
                    }, this.relayer = t, this.logger = Uc(e, this.name), this.registerEventListeners()
                }
                get context() {
                    return Tc(this.logger)
                }
                rpcPublish(t, e, r, i, n, s, o) {
                    var a, h, c, u;
                    const l = {
                        method: La(i.protocol).publish,
                        params: {
                            topic: t,
                            message: e,
                            ttl: r,
                            prompt: n,
                            tag: s
                        },
                        id: o
                    };
                    return ah(null == (a = l.params) ? void 0 : a.prompt) && (null == (h = l.params) || delete h.prompt), ah(null == (c = l.params) ? void 0 : c.tag) && (null == (u = l.params) || delete u.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "message",
                        direction: "outgoing",
                        request: l
                    }), this.relayer.request(l)
                }
                removeRequestFromQueue(t) {
                    this.queue.delete(t)
                }
                checkQueue() {
                    this.queue.forEach((async t => {
                        const {
                            topic: e,
                            message: r,
                            opts: i
                        } = t;
                        await this.publish(e, r, i)
                    }))
                }
                registerEventListeners() {
                    this.relayer.core.heartbeat.on(lc, (() => {
                        if (this.needsTransportRestart) return this.needsTransportRestart = !1, void this.relayer.events.emit(jg);
                        this.checkQueue()
                    })), this.relayer.on(kg, (t => {
                        this.removeRequestFromQueue(t.id.toString())
                    }))
                }
            }
            class vm {
                constructor() {
                    this.map = new Map, this.set = (t, e) => {
                        const r = this.get(t);
                        this.exists(t, e) || this.map.set(t, [...r, e])
                    }, this.get = t => this.map.get(t) || [], this.exists = (t, e) => this.get(t).includes(e), this.delete = (t, e) => {
                        if (typeof e > "u") return void this.map.delete(t);
                        if (!this.map.has(t)) return;
                        const r = this.get(t);
                        if (!this.exists(t, e)) return;
                        const i = r.filter((t => t !== e));
                        i.length ? this.map.set(t, i) : this.map.delete(t)
                    }, this.clear = () => {
                        this.map.clear()
                    }
                }
                get topics() {
                    return Array.from(this.map.keys())
                }
            }
            var wm = Object.defineProperty,
                bm = Object.defineProperties,
                _m = Object.getOwnPropertyDescriptors,
                Am = Object.getOwnPropertySymbols,
                Em = Object.prototype.hasOwnProperty,
                Sm = Object.prototype.propertyIsEnumerable,
                Im = (t, e, r) => e in t ? wm(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Pm = (t, e) => {
                    for (var r in e || (e = {})) Em.call(e, r) && Im(t, r, e[r]);
                    if (Am)
                        for (var r of Am(e)) Sm.call(e, r) && Im(t, r, e[r]);
                    return t
                },
                Mm = (t, e) => bm(t, _m(e));
            class xm extends Fc {
                constructor(t, e) {
                    super(t, e), this.relayer = t, this.logger = e, this.subscriptions = new Map, this.topicMap = new vm, this.events = new V.EventEmitter, this.name = "subscription", this.version = "0.3", this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = xg, this.subscribeTimeout = (0, at.toMiliseconds)(at.ONE_MINUTE), this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.pendingBatchMessages = [], this.init = async () => {
                        this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId())
                    }, this.subscribe = async (t, e) => {
                        await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({
                            type: "method",
                            method: "subscribe",
                            params: {
                                topic: t,
                                opts: e
                            }
                        });
                        try {
                            const r = Ba(e),
                                i = {
                                    topic: t,
                                    relay: r
                                };
                            this.pending.set(t, i);
                            const n = await this.rpcSubscribe(t, r);
                            return "string" == typeof n && (this.onSubscribe(n, i), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({
                                type: "method",
                                method: "subscribe",
                                params: {
                                    topic: t,
                                    opts: e
                                }
                            })), n
                        } catch (r) {
                            throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(r), r
                        }
                    }, this.unsubscribe = async (t, e) => {
                        await this.restartToComplete(), this.isInitialized(), typeof e ? .id < "u" ? await this.unsubscribeById(t, e.id, e) : await this.unsubscribeByTopic(t, e)
                    }, this.isSubscribed = async t => {
                        if (this.topics.includes(t)) return !0;
                        const e = `${this.pendingSubscriptionWatchLabel}_${t}`;
                        return await new Promise(((r, i) => {
                            const n = new at.Watch;
                            n.start(e);
                            const s = setInterval((() => {
                                !this.pending.has(t) && this.topics.includes(t) && (clearInterval(s), n.stop(e), r(!0)), n.elapsed(e) >= Yg && (clearInterval(s), n.stop(e), i(new Error("Subscription resolution timeout")))
                            }), this.pollingInterval)
                        })).catch((() => !1))
                    }, this.on = (t, e) => {
                        this.events.on(t, e)
                    }, this.once = (t, e) => {
                        this.events.once(t, e)
                    }, this.off = (t, e) => {
                        this.events.off(t, e)
                    }, this.removeListener = (t, e) => {
                        this.events.removeListener(t, e)
                    }, this.start = async () => {
                        await this.onConnect()
                    }, this.stop = async () => {
                        await this.onDisconnect()
                    }, this.restart = async () => {
                        this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1
                    }, this.relayer = t, this.logger = Uc(e, this.name), this.clientId = ""
                }
                get context() {
                    return Tc(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name
                }
                get length() {
                    return this.subscriptions.size
                }
                get ids() {
                    return Array.from(this.subscriptions.keys())
                }
                get values() {
                    return Array.from(this.subscriptions.values())
                }
                get topics() {
                    return this.topicMap.topics
                }
                hasSubscription(t, e) {
                    let r = !1;
                    try {
                        r = this.getSubscription(t).topic === e
                    } catch {}
                    return r
                }
                onEnable() {
                    this.cached = [], this.initialized = !0
                }
                onDisable() {
                    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear()
                }
                async unsubscribeByTopic(t, e) {
                    const r = this.topicMap.get(t);
                    await Promise.all(r.map((async r => await this.unsubscribeById(t, r, e))))
                }
                async unsubscribeById(t, e, r) {
                    this.logger.debug("Unsubscribing Topic"), this.logger.trace({
                        type: "method",
                        method: "unsubscribe",
                        params: {
                            topic: t,
                            id: e,
                            opts: r
                        }
                    });
                    try {
                        const i = Ba(r);
                        await this.rpcUnsubscribe(t, e, i);
                        const n = nh("USER_DISCONNECTED", `${this.name}, ${t}`);
                        await this.onUnsubscribe(t, e, n), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({
                            type: "method",
                            method: "unsubscribe",
                            params: {
                                topic: t,
                                id: e,
                                opts: r
                            }
                        })
                    } catch (uc) {
                        throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(uc), uc
                    }
                }
                async rpcSubscribe(t, e) {
                    const r = {
                        method: La(e.protocol).subscribe,
                        params: {
                            topic: t
                        }
                    };
                    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: r
                    });
                    try {
                        return await await wr(this.relayer.request(r).catch((t => this.logger.warn(t))), this.subscribeTimeout) ? Na(t + this.clientId) : null
                    } catch {
                        this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(jg)
                    }
                    return null
                }
                async rpcBatchSubscribe(t) {
                    if (!t.length) return;
                    const e = {
                        method: La(t[0].relay.protocol).batchSubscribe,
                        params: {
                            topics: t.map((t => t.topic))
                        }
                    };
                    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: e
                    });
                    try {
                        return await await wr(this.relayer.request(e).catch((t => this.logger.warn(t))), this.subscribeTimeout)
                    } catch {
                        this.relayer.events.emit(jg)
                    }
                }
                async rpcBatchFetchMessages(t) {
                    if (!t.length) return;
                    const e = {
                        method: La(t[0].relay.protocol).batchFetchMessages,
                        params: {
                            topics: t.map((t => t.topic))
                        }
                    };
                    let r;
                    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: e
                    });
                    try {
                        r = await await wr(this.relayer.request(e).catch((t => this.logger.warn(t))), this.subscribeTimeout)
                    } catch {
                        this.relayer.events.emit(jg)
                    }
                    return r
                }
                rpcUnsubscribe(t, e, r) {
                    const i = {
                        method: La(r.protocol).unsubscribe,
                        params: {
                            topic: t,
                            id: e
                        }
                    };
                    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: i
                    }), this.relayer.request(i)
                }
                onSubscribe(t, e) {
                    this.setSubscription(t, Mm(Pm({}, e), {
                        id: t
                    })), this.pending.delete(e.topic)
                }
                onBatchSubscribe(t) {
                    t.length && t.forEach((t => {
                        this.setSubscription(t.id, Pm({}, t)), this.pending.delete(t.topic)
                    }))
                }
                async onUnsubscribe(t, e, r) {
                    this.events.removeAllListeners(e), this.hasSubscription(e, t) && this.deleteSubscription(e, r), await this.relayer.messages.del(t)
                }
                async setRelayerSubscriptions(t) {
                    await this.relayer.core.storage.setItem(this.storageKey, t)
                }
                async getRelayerSubscriptions() {
                    return await this.relayer.core.storage.getItem(this.storageKey)
                }
                setSubscription(t, e) {
                    this.logger.debug("Setting subscription"), this.logger.trace({
                        type: "method",
                        method: "setSubscription",
                        id: t,
                        subscription: e
                    }), this.addSubscription(t, e)
                }
                addSubscription(t, e) {
                    this.subscriptions.set(t, Pm({}, e)), this.topicMap.set(e.topic, t), this.events.emit($g, e)
                }
                getSubscription(t) {
                    this.logger.debug("Getting subscription"), this.logger.trace({
                        type: "method",
                        method: "getSubscription",
                        id: t
                    });
                    const e = this.subscriptions.get(t);
                    if (!e) {
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `${this.name}: ${t}`);
                        throw new Error(e)
                    }
                    return e
                }
                deleteSubscription(t, e) {
                    this.logger.debug("Deleting subscription"), this.logger.trace({
                        type: "method",
                        method: "deleteSubscription",
                        id: t,
                        reason: e
                    });
                    const r = this.getSubscription(t);
                    this.subscriptions.delete(t), this.topicMap.delete(r.topic, t), this.events.emit(Wg, Mm(Pm({}, r), {
                        reason: e
                    }))
                }
                async persist() {
                    await this.setRelayerSubscriptions(this.values), this.events.emit(Gg)
                }
                async reset() {
                    if (this.cached.length) {
                        const t = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
                        for (let e = 0; e < t; e++) {
                            const t = this.cached.splice(0, this.batchSubscribeTopicsLimit);
                            await this.batchFetchMessages(t), await this.batchSubscribe(t)
                        }
                    }
                    this.events.emit(Qg)
                }
                async restore() {
                    try {
                        const t = await this.getRelayerSubscriptions();
                        if (typeof t > "u" || !t.length) return;
                        if (this.subscriptions.size) {
                            const {
                                message: t
                            } = ih("RESTORE_WILL_OVERRIDE", this.name);
                            throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t)
                        }
                        this.cached = t, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({
                            type: "method",
                            method: "restore",
                            subscriptions: this.values
                        })
                    } catch (t) {
                        this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(t)
                    }
                }
                async batchSubscribe(t) {
                    if (!t.length) return;
                    const e = await this.rpcBatchSubscribe(t);
                    sh(e) && this.onBatchSubscribe(e.map(((e, r) => Mm(Pm({}, t[r]), {
                        id: e
                    }))))
                }
                async batchFetchMessages(t) {
                    if (!t.length) return;
                    this.logger.trace(`Fetching batch messages for ${t.length} subscriptions`);
                    const e = await this.rpcBatchFetchMessages(t);
                    e && e.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(e.messages))
                }
                async onConnect() {
                    await this.restart(), this.onEnable()
                }
                onDisconnect() {
                    this.onDisable()
                }
                async checkPending() {
                    if (!this.initialized || !this.relayer.connected) return;
                    const t = [];
                    this.pending.forEach((e => {
                        t.push(e)
                    })), await this.batchSubscribe(t), this.pendingBatchMessages.length && (await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages), this.pendingBatchMessages = [])
                }
                registerEventListeners() {
                    this.relayer.core.heartbeat.on(lc, (async () => {
                        await this.checkPending()
                    })), this.events.on($g, (async t => {
                        const e = $g;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            data: t
                        }), await this.persist()
                    })), this.events.on(Wg, (async t => {
                        const e = Wg;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            data: t
                        }), await this.persist()
                    }))
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
                async restartToComplete() {
                    this.restartInProgress && await new Promise((t => {
                        const e = setInterval((() => {
                            this.restartInProgress || (clearInterval(e), t())
                        }), this.pollingInterval)
                    }))
                }
            }
            var Om = Object.defineProperty,
                Cm = Object.getOwnPropertySymbols,
                Nm = Object.prototype.hasOwnProperty,
                Rm = Object.prototype.propertyIsEnumerable,
                Tm = (t, e, r) => e in t ? Om(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r;
            class Um extends jc {
                constructor(t) {
                    super(t), this.protocol = "wc", this.version = 2, this.events = new V.EventEmitter, this.name = "relayer", this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "stalled", "interrupted"], this.hasExperiencedNetworkDisruption = !1, this.requestsInFlight = new Map, this.heartBeatTimeout = (0, at.toMiliseconds)(at.THIRTY_SECONDS + at.ONE_SECOND), this.request = async t => {
                        var e, r;
                        this.logger.debug("Publishing Request Payload");
                        const i = t.id || Od().toString();
                        await this.toEstablishConnection();
                        try {
                            const n = this.provider.request(t);
                            this.requestsInFlight.set(i, {
                                promise: n,
                                request: t
                            }), this.logger.trace({
                                id: i,
                                method: t.method,
                                topic: null == (e = t.params) ? void 0 : e.topic
                            }, "relayer.request - attempt to publish...");
                            const s = await new Promise((async (t, e) => {
                                const r = () => {
                                    e(new Error(`relayer.request - publish interrupted, id: ${i}`))
                                };
                                this.provider.on(Kg, r);
                                const s = await n;
                                this.provider.off(Kg, r), t(s)
                            }));
                            return this.logger.trace({
                                id: i,
                                method: t.method,
                                topic: null == (r = t.params) ? void 0 : r.topic
                            }, "relayer.request - published"), s
                        } catch (n) {
                            throw this.logger.debug(`Failed to Publish Request: ${i}`), n
                        } finally {
                            this.requestsInFlight.delete(i)
                        }
                    }, this.resetPingTimeout = () => {
                        if (cr()) try {
                            clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout((() => {
                                var t, e, r;
                                null == (r = null == (e = null == (t = this.provider) ? void 0 : t.connection) ? void 0 : e.socket) || r.terminate()
                            }), this.heartBeatTimeout)
                        } catch (t) {
                            this.logger.warn(t)
                        }
                    }, this.onPayloadHandler = t => {
                        this.onProviderPayload(t), this.resetPingTimeout()
                    }, this.onConnectHandler = () => {
                        this.logger.trace("relayer connected"), this.startPingTimeout(), this.events.emit(Bg)
                    }, this.onDisconnectHandler = () => {
                        this.logger.trace("relayer disconnected"), this.onProviderDisconnect()
                    }, this.onProviderErrorHandler = t => {
                        this.logger.error(t), this.events.emit(qg, t), this.logger.info("Fatal socket error received, closing transport"), this.transportClose()
                    }, this.registerProviderListeners = () => {
                        this.provider.on(Fg, this.onPayloadHandler), this.provider.on(Hg, this.onConnectHandler), this.provider.on(Kg, this.onDisconnectHandler), this.provider.on(Vg, this.onProviderErrorHandler)
                    }, this.core = t.core, this.logger = typeof t.logger < "u" && "string" != typeof t.logger ? Uc(t.logger, this.name) : pc()(Rc({
                        level: t.logger || "error"
                    })), this.messages = new mm(this.logger, t.core), this.subscriber = new xm(this, this.logger), this.publisher = new ym(this, this.logger), this.relayUrl = t ? .relayUrl || Ug, this.projectId = t.projectId, this.bundleId = function() {
                        var t;
                        try {
                            return ur() && typeof r.g < "u" && typeof(null == r.g ? void 0 : r.g.Application) < "u" ? null == (t = r.g.Application) ? void 0 : t.applicationId : void 0
                        } catch {
                            return
                        }
                    }(), this.provider = {}
                }
                async init() {
                    this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), await this.transportOpen(), this.initialized = !0, setTimeout((async () => {
                        0 === this.subscriber.topics.length && 0 === this.subscriber.pending.size && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = !1)
                    }), 1e4)
                }
                get context() {
                    return Tc(this.logger)
                }
                get connected() {
                    var t, e, r;
                    return 1 === (null == (r = null == (e = null == (t = this.provider) ? void 0 : t.connection) ? void 0 : e.socket) ? void 0 : r.readyState)
                }
                get connecting() {
                    var t, e, r;
                    return 0 === (null == (r = null == (e = null == (t = this.provider) ? void 0 : t.connection) ? void 0 : e.socket) ? void 0 : r.readyState)
                }
                async publish(t, e, r) {
                    this.isInitialized(), await this.publisher.publish(t, e, r), await this.recordMessageEvent({
                        topic: t,
                        message: e,
                        publishedAt: Date.now()
                    })
                }
                async subscribe(t, e) {
                    var r;
                    this.isInitialized();
                    let i, n = (null == (r = this.subscriber.topicMap.get(t)) ? void 0 : r[0]) || "";
                    const s = e => {
                        e.topic === t && (this.subscriber.off($g, s), i())
                    };
                    return await Promise.all([new Promise((t => {
                        i = t, this.subscriber.on($g, s)
                    })), new Promise((async r => {
                        n = await this.subscriber.subscribe(t, e) || n, r()
                    }))]), n
                }
                async unsubscribe(t, e) {
                    this.isInitialized(), await this.subscriber.unsubscribe(t, e)
                }
                on(t, e) {
                    this.events.on(t, e)
                }
                once(t, e) {
                    this.events.once(t, e)
                }
                off(t, e) {
                    this.events.off(t, e)
                }
                removeListener(t, e) {
                    this.events.removeListener(t, e)
                }
                async transportDisconnect() {
                    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {
                        await Promise.all(Array.from(this.requestsInFlight.values()).map((t => t.promise)))
                    } catch (t) {
                        this.logger.warn(t)
                    }
                    this.hasExperiencedNetworkDisruption || this.connected ? await wr(this.provider.disconnect(), 2e3, "provider.disconnect()").catch((() => this.onProviderDisconnect())) : this.onProviderDisconnect()
                }
                async transportClose() {
                    this.transportExplicitlyClosed = !0, await this.transportDisconnect()
                }
                async transportOpen(t) {
                    await this.confirmOnlineStateOrThrow(), t && t !== this.relayUrl && (this.relayUrl = t, await this.transportDisconnect()), await this.createProvider(), this.connectionAttemptInProgress = !0, this.transportExplicitlyClosed = !1;
                    try {
                        await new Promise((async (t, e) => {
                            const r = () => {
                                this.provider.off(Kg, r), e(new Error("Connection interrupted while trying to subscribe"))
                            };
                            this.provider.on(Kg, r), await wr(this.provider.connect(), (0, at.toMiliseconds)(at.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((t => {
                                e(t)
                            })), this.subscriber.start().catch((t => {
                                this.logger.error(t), this.onDisconnectHandler()
                            })), this.hasExperiencedNetworkDisruption = !1, t()
                        }))
                    } catch (e) {
                        this.logger.error(e);
                        const t = e;
                        if (this.hasExperiencedNetworkDisruption = !0, !this.isConnectionStalled(t.message)) throw e
                    } finally {
                        this.connectionAttemptInProgress = !1
                    }
                }
                async restartTransport(t) {
                    this.connectionAttemptInProgress || (this.relayUrl = t || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen())
                }
                async confirmOnlineStateOrThrow() {
                    if (!await Eh()) throw new Error("No internet connection detected. Please restart your network and try again.")
                }
                async handleBatchMessageEvents(t) {
                    if (0 === t ? .length) return void this.logger.trace("Batch message events is empty. Ignoring...");
                    const e = t.sort(((t, e) => t.publishedAt - e.publishedAt));
                    this.logger.trace(`Batch of ${e.length} message events sorted`);
                    for (const r of e) try {
                        await this.onMessageEvent(r)
                    } catch (uc) {
                        this.logger.warn(uc)
                    }
                    this.logger.trace(`Batch of ${e.length} message events processed`)
                }
                startPingTimeout() {
                    var t, e, r, i, n;
                    if (cr()) try {
                        null != (e = null == (t = this.provider) ? void 0 : t.connection) && e.socket && (null == (n = null == (i = null == (r = this.provider) ? void 0 : r.connection) ? void 0 : i.socket) || n.once("ping", (() => {
                            this.resetPingTimeout()
                        }))), this.resetPingTimeout()
                    } catch (s) {
                        this.logger.warn(s)
                    }
                }
                isConnectionStalled(t) {
                    return this.staleConnectionErrors.some((e => t.includes(e)))
                }
                async createProvider() {
                    this.provider.connection && this.unregisterProviderListeners();
                    const t = await this.core.crypto.signJWT(this.relayUrl);
                    this.provider = new Vd(new Gd(pr({
                        sdkVersion: "2.14.0",
                        protocol: this.protocol,
                        version: this.version,
                        relayUrl: this.relayUrl,
                        projectId: this.projectId,
                        auth: t,
                        useOnCloseEvent: !0,
                        bundleId: this.bundleId
                    }))), this.registerProviderListeners()
                }
                async recordMessageEvent(t) {
                    const {
                        topic: e,
                        message: r
                    } = t;
                    await this.messages.set(e, r)
                }
                async shouldIgnoreMessageEvent(t) {
                    const {
                        topic: e,
                        message: r
                    } = t;
                    if (!r || 0 === r.length) return this.logger.debug(`Ignoring invalid/empty message: ${r}`), !0;
                    if (!await this.subscriber.isSubscribed(e)) return this.logger.debug(`Ignoring message for non-subscribed topic ${e}`), !0;
                    const i = this.messages.has(e, r);
                    return i && this.logger.debug(`Ignoring duplicate message: ${r}`), i
                }
                async onProviderPayload(t) {
                    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "incoming",
                            payload: t
                        }), zd(t)) {
                        if (!t.method.endsWith("_subscription")) return;
                        const e = t.params,
                            {
                                topic: r,
                                message: i,
                                publishedAt: n
                            } = e.data,
                            s = {
                                topic: r,
                                message: i,
                                publishedAt: n
                            };
                        this.logger.debug("Emitting Relayer Payload"), this.logger.trace(((t, e) => {
                            for (var r in e || (e = {})) Nm.call(e, r) && Tm(t, r, e[r]);
                            if (Cm)
                                for (var r of Cm(e)) Rm.call(e, r) && Tm(t, r, e[r]);
                            return t
                        })({
                            type: "event",
                            event: e.id
                        }, s)), this.events.emit(e.id, s), await this.acknowledgePayload(t), await this.onMessageEvent(s)
                    } else Fd(t) && this.events.emit(kg, t)
                }
                async onMessageEvent(t) {
                    await this.shouldIgnoreMessageEvent(t) || (this.events.emit(Dg, t), await this.recordMessageEvent(t))
                }
                async acknowledgePayload(t) {
                    const e = Nd(t.id, !0);
                    await this.provider.connection.send(e)
                }
                unregisterProviderListeners() {
                    this.provider.off(Fg, this.onPayloadHandler), this.provider.off(Hg, this.onConnectHandler), this.provider.off(Kg, this.onDisconnectHandler), this.provider.off(Vg, this.onProviderErrorHandler), clearTimeout(this.pingTimeout)
                }
                async registerEventListeners() {
                    let t = await Eh();
                    Sh((async e => {
                        t !== e && (t = e, e ? await this.restartTransport().catch((t => this.logger.error(t))) : (this.hasExperiencedNetworkDisruption = !0, await this.transportDisconnect(), this.transportExplicitlyClosed = !1))
                    }))
                }
                async onProviderDisconnect() {
                    await this.subscriber.stop(), this.requestsInFlight.clear(), clearTimeout(this.pingTimeout), this.events.emit(Lg), this.connectionAttemptInProgress = !1, !this.transportExplicitlyClosed && setTimeout((async () => {
                        await this.transportOpen().catch((t => this.logger.error(t)))
                    }), (0, at.toMiliseconds)(.1))
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
                async toEstablishConnection() {
                    await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((t => {
                        const e = setInterval((() => {
                            this.connected && (clearInterval(e), t())
                        }), this.connectionStatusPollingInterval)
                    })), await this.transportOpen())
                }
            }
            var Dm = Object.defineProperty,
                km = Object.getOwnPropertySymbols,
                Bm = Object.prototype.hasOwnProperty,
                Lm = Object.prototype.propertyIsEnumerable,
                qm = (t, e, r) => e in t ? Dm(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                jm = (t, e) => {
                    for (var r in e || (e = {})) Bm.call(e, r) && qm(t, r, e[r]);
                    if (km)
                        for (var r of km(e)) Lm.call(e, r) && qm(t, r, e[r]);
                    return t
                };
            class zm extends zc {
                constructor(t, e, r) {
                    let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : xg,
                        n = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0;
                    super(t, e, r, i), this.core = t, this.logger = e, this.name = r, this.map = new Map, this.version = "0.3", this.cached = [], this.initialized = !1, this.storagePrefix = xg, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async () => {
                        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((t => {
                            this.getKey && null !== t && !ah(t) ? this.map.set(this.getKey(t), t) : function(t) {
                                var e;
                                return null == (e = t ? .proposer) ? void 0 : e.publicKey
                            }(t) ? this.map.set(t.id, t) : function(t) {
                                return t ? .topic
                            }(t) && this.map.set(t.topic, t)
                        })), this.cached = [], this.initialized = !0)
                    }, this.set = async (t, e) => {
                        this.isInitialized(), this.map.has(t) ? await this.update(t, e) : (this.logger.debug("Setting value"), this.logger.trace({
                            type: "method",
                            method: "set",
                            key: t,
                            value: e
                        }), this.map.set(t, e), await this.persist())
                    }, this.get = t => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({
                        type: "method",
                        method: "get",
                        key: t
                    }), this.getData(t)), this.getAll = t => (this.isInitialized(), t ? this.values.filter((e => Object.keys(t).every((r => Yd()(e[r], t[r]))))) : this.values), this.update = async (t, e) => {
                        this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({
                            type: "method",
                            method: "update",
                            key: t,
                            update: e
                        });
                        const r = jm(jm({}, this.getData(t)), e);
                        this.map.set(t, r), await this.persist()
                    }, this.delete = async (t, e) => {
                        this.isInitialized(), this.map.has(t) && (this.logger.debug("Deleting value"), this.logger.trace({
                            type: "method",
                            method: "delete",
                            key: t,
                            reason: e
                        }), this.map.delete(t), this.addToRecentlyDeleted(t), await this.persist())
                    }, this.logger = Uc(e, this.name), this.storagePrefix = i, this.getKey = n
                }
                get context() {
                    return Tc(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                }
                get length() {
                    return this.map.size
                }
                get keys() {
                    return Array.from(this.map.keys())
                }
                get values() {
                    return Array.from(this.map.values())
                }
                addToRecentlyDeleted(t) {
                    this.recentlyDeleted.push(t), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2)
                }
                async setDataStore(t) {
                    await this.core.storage.setItem(this.storageKey, t)
                }
                async getDataStore() {
                    return await this.core.storage.getItem(this.storageKey)
                }
                getData(t) {
                    const e = this.map.get(t);
                    if (!e) {
                        if (this.recentlyDeleted.includes(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${t}`);
                            throw this.logger.error(e), new Error(e)
                        }
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `${this.name}: ${t}`);
                        throw this.logger.error(e), new Error(e)
                    }
                    return e
                }
                async persist() {
                    await this.setDataStore(this.values)
                }
                async restore() {
                    try {
                        const t = await this.getDataStore();
                        if (typeof t > "u" || !t.length) return;
                        if (this.map.size) {
                            const {
                                message: t
                            } = ih("RESTORE_WILL_OVERRIDE", this.name);
                            throw this.logger.error(t), new Error(t)
                        }
                        this.cached = t, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({
                            type: "method",
                            method: "restore",
                            value: this.values
                        })
                    } catch (t) {
                        this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(t)
                    }
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
            }
            class Fm {
                constructor(t, e) {
                    this.core = t, this.logger = e, this.name = "pairing", this.version = "0.3", this.events = new($()), this.initialized = !1, this.storagePrefix = xg, this.ignoredPayloadTypes = [Sa], this.registeredMethods = [], this.init = async () => {
                        this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace("Initialized"))
                    }, this.register = t => {
                        let {
                            methods: e
                        } = t;
                        this.isInitialized(), this.registeredMethods = [...new Set([...this.registeredMethods, ...e])]
                    }, this.create = async t => {
                        this.isInitialized();
                        const e = Oa(),
                            r = await this.core.crypto.setSymKey(e),
                            i = Ar(at.FIVE_MINUTES),
                            n = {
                                protocol: "irn"
                            },
                            s = {
                                topic: r,
                                expiry: i,
                                relay: n,
                                active: !1
                            },
                            o = Ya({
                                protocol: this.core.protocol,
                                version: this.core.version,
                                topic: r,
                                symKey: e,
                                relay: n,
                                expiryTimestamp: i,
                                methods: t ? .methods
                            });
                        return this.core.expirer.set(r, i), await this.pairings.set(r, s), await this.core.relayer.subscribe(r), {
                            topic: r,
                            uri: o
                        }
                    }, this.pair = async t => {
                        this.isInitialized(), this.isValidPair(t);
                        const {
                            topic: e,
                            symKey: r,
                            relay: i,
                            expiryTimestamp: n,
                            methods: s
                        } = Ga(t.uri);
                        let o;
                        if (this.pairings.keys.includes(e) && (o = this.pairings.get(e), o.active)) throw new Error(`Pairing already exists: ${e}. Please try again with a new connection URI.`);
                        const a = n || Ar(at.FIVE_MINUTES),
                            h = {
                                topic: e,
                                relay: i,
                                expiry: a,
                                active: !1,
                                methods: s
                            };
                        return this.core.expirer.set(e, a), await this.pairings.set(e, h), t.activatePairing && await this.activate({
                            topic: e
                        }), this.events.emit(Xg, h), this.core.crypto.keychain.has(e) || await this.core.crypto.setSymKey(r, e), await this.core.relayer.subscribe(e, {
                            relay: i
                        }), h
                    }, this.activate = async t => {
                        let {
                            topic: e
                        } = t;
                        this.isInitialized();
                        const r = Ar(at.THIRTY_DAYS);
                        this.core.expirer.set(e, r), await this.pairings.update(e, {
                            active: !0,
                            expiry: r
                        })
                    }, this.ping = async t => {
                        this.isInitialized(), await this.isValidPing(t);
                        const {
                            topic: e
                        } = t;
                        if (this.pairings.keys.includes(e)) {
                            const t = await this.sendRequest(e, "wc_pairingPing", {}),
                                {
                                    done: r,
                                    resolve: i,
                                    reject: n
                                } = vr();
                            this.events.once(Sr("pairing_ping", t), (t => {
                                let {
                                    error: e
                                } = t;
                                e ? n(e) : i()
                            })), await r()
                        }
                    }, this.updateExpiry = async t => {
                        let {
                            topic: e,
                            expiry: r
                        } = t;
                        this.isInitialized(), await this.pairings.update(e, {
                            expiry: r
                        })
                    }, this.updateMetadata = async t => {
                        let {
                            topic: e,
                            metadata: r
                        } = t;
                        this.isInitialized(), await this.pairings.update(e, {
                            peerMetadata: r
                        })
                    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async t => {
                        this.isInitialized(), await this.isValidDisconnect(t);
                        const {
                            topic: e
                        } = t;
                        this.pairings.keys.includes(e) && (await this.sendRequest(e, "wc_pairingDelete", nh("USER_DISCONNECTED")), await this.deletePairing(e))
                    }, this.sendRequest = async (t, e, r) => {
                        const i = Cd(e, r),
                            n = await this.core.crypto.encode(t, i),
                            s = Jg[e].req;
                        return this.core.history.set(t, i), this.core.relayer.publish(t, n, s), i.id
                    }, this.sendResult = async (t, e, r) => {
                        const i = Nd(t, r),
                            n = await this.core.crypto.encode(e, i),
                            s = await this.core.history.get(e, t),
                            o = Jg[s.request.method].res;
                        await this.core.relayer.publish(e, n, o), await this.core.history.resolve(i)
                    }, this.sendError = async (t, e, r) => {
                        const i = Rd(t, r),
                            n = await this.core.crypto.encode(e, i),
                            s = await this.core.history.get(e, t),
                            o = Jg[s.request.method] ? Jg[s.request.method].res : Jg.unregistered_method.res;
                        await this.core.relayer.publish(e, n, o), await this.core.history.resolve(i)
                    }, this.deletePairing = async (t, e) => {
                        await this.core.relayer.unsubscribe(t), await Promise.all([this.pairings.delete(t, nh("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(t), e ? Promise.resolve() : this.core.expirer.del(t)])
                    }, this.cleanup = async () => {
                        const t = this.pairings.getAll().filter((t => Er(t.expiry)));
                        await Promise.all(t.map((t => this.deletePairing(t.topic))))
                    }, this.onRelayEventRequest = t => {
                        const {
                            topic: e,
                            payload: r
                        } = t;
                        switch (r.method) {
                            case "wc_pairingPing":
                                return this.onPairingPingRequest(e, r);
                            case "wc_pairingDelete":
                                return this.onPairingDeleteRequest(e, r);
                            default:
                                return this.onUnknownRpcMethodRequest(e, r)
                        }
                    }, this.onRelayEventResponse = async t => {
                        const {
                            topic: e,
                            payload: r
                        } = t, i = (await this.core.history.get(e, r.id)).request.method;
                        return "wc_pairingPing" === i ? this.onPairingPingResponse(e, r) : this.onUnknownRpcMethodResponse(i)
                    }, this.onPairingPingRequest = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        try {
                            this.isValidPing({
                                topic: t
                            }), await this.sendResult(r, t, !0), this.events.emit(em, {
                                id: r,
                                topic: t
                            })
                        } catch (i) {
                            await this.sendError(r, t, i), this.logger.error(i)
                        }
                    }, this.onPairingPingResponse = (t, e) => {
                        const {
                            id: r
                        } = e;
                        setTimeout((() => {
                            Hd(e) ? this.events.emit(Sr("pairing_ping", r), {}) : Kd(e) && this.events.emit(Sr("pairing_ping", r), {
                                error: e.error
                            })
                        }), 500)
                    }, this.onPairingDeleteRequest = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        try {
                            this.isValidDisconnect({
                                topic: t
                            }), await this.deletePairing(t), this.events.emit(tm, {
                                id: r,
                                topic: t
                            })
                        } catch (i) {
                            await this.sendError(r, t, i), this.logger.error(i)
                        }
                    }, this.onUnknownRpcMethodRequest = async (t, e) => {
                        const {
                            id: r,
                            method: i
                        } = e;
                        try {
                            if (this.registeredMethods.includes(i)) return;
                            const e = nh("WC_METHOD_UNSUPPORTED", i);
                            await this.sendError(r, t, e), this.logger.error(e)
                        } catch (n) {
                            await this.sendError(r, t, n), this.logger.error(n)
                        }
                    }, this.onUnknownRpcMethodResponse = t => {
                        this.registeredMethods.includes(t) || this.logger.error(nh("WC_METHOD_UNSUPPORTED", t))
                    }, this.isValidPair = t => {
                        var e;
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `pair() params: ${t}`);
                            throw new Error(e)
                        }
                        if (! function(t) {
                                if (hh(t, !1)) try {
                                    return typeof new URL(t) < "u"
                                } catch {
                                    return !1
                                }
                                return !1
                            }(t.uri)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `pair() uri: ${t.uri}`);
                            throw new Error(e)
                        }
                        const r = Ga(t.uri);
                        if (null == (e = r ? .relay) || !e.protocol) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", "pair() uri#relay-protocol");
                            throw new Error(t)
                        }
                        if (null == r || !r.symKey) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", "pair() uri#symKey");
                            throw new Error(t)
                        }
                        if (null != r && r.expiryTimestamp && (0, at.toMiliseconds)(r ? .expiryTimestamp) < Date.now()) {
                            const {
                                message: t
                            } = ih("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
                            throw new Error(t)
                        }
                    }, this.isValidPing = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `ping() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e
                        } = t;
                        await this.isValidPairingTopic(e)
                    }, this.isValidDisconnect = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `disconnect() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e
                        } = t;
                        await this.isValidPairingTopic(e)
                    }, this.isValidPairingTopic = async t => {
                        if (!hh(t, !1)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `pairing topic should be a string: ${t}`);
                            throw new Error(e)
                        }
                        if (!this.pairings.keys.includes(t)) {
                            const {
                                message: e
                            } = ih("NO_MATCHING_KEY", `pairing topic doesn't exist: ${t}`);
                            throw new Error(e)
                        }
                        if (Er(this.pairings.get(t).expiry)) {
                            await this.deletePairing(t);
                            const {
                                message: e
                            } = ih("EXPIRED", `pairing topic: ${t}`);
                            throw new Error(e)
                        }
                    }, this.core = t, this.logger = Uc(e, this.name), this.pairings = new zm(this.core, this.logger, this.name, this.storagePrefix)
                }
                get context() {
                    return Tc(this.logger)
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
                registerRelayerEvents() {
                    this.core.relayer.on(Dg, (async t => {
                        const {
                            topic: e,
                            message: r
                        } = t;
                        if (!this.pairings.keys.includes(e) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(r))) return;
                        const i = await this.core.crypto.decode(e, r);
                        try {
                            zd(i) ? (this.core.history.set(e, i), this.onRelayEventRequest({
                                topic: e,
                                payload: i
                            })) : Fd(i) && (await this.core.history.resolve(i), await this.onRelayEventResponse({
                                topic: e,
                                payload: i
                            }), this.core.history.delete(e, i.id))
                        } catch (n) {
                            this.logger.error(n)
                        }
                    }))
                }
                registerExpirerEvents() {
                    this.core.expirer.on(hm, (async t => {
                        const {
                            topic: e
                        } = _r(t.target);
                        e && this.pairings.keys.includes(e) && (await this.deletePairing(e, !0), this.events.emit(Zg, {
                            topic: e
                        }))
                    }))
                }
            }
            class Hm extends Bc {
                constructor(t, e) {
                    super(t, e), this.core = t, this.logger = e, this.records = new Map, this.events = new V.EventEmitter, this.name = "history", this.version = "0.3", this.cached = [], this.initialized = !1, this.storagePrefix = xg, this.init = async () => {
                        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((t => this.records.set(t.id, t))), this.cached = [], this.registerEventListeners(), this.initialized = !0)
                    }, this.set = (t, e, r) => {
                        if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({
                                type: "method",
                                method: "set",
                                topic: t,
                                request: e,
                                chainId: r
                            }), this.records.has(e.id)) return;
                        const i = {
                            id: e.id,
                            topic: t,
                            request: {
                                method: e.method,
                                params: e.params || null
                            },
                            chainId: r,
                            expiry: Ar(at.THIRTY_DAYS)
                        };
                        this.records.set(i.id, i), this.persist(), this.events.emit(rm, i)
                    }, this.resolve = async t => {
                        if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({
                                type: "method",
                                method: "update",
                                response: t
                            }), !this.records.has(t.id)) return;
                        const e = await this.getRecord(t.id);
                        typeof e.response > "u" && (e.response = Kd(t) ? {
                            error: t.error
                        } : {
                            result: t.result
                        }, this.records.set(e.id, e), this.persist(), this.events.emit(im, e))
                    }, this.get = async (t, e) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({
                        type: "method",
                        method: "get",
                        topic: t,
                        id: e
                    }), await this.getRecord(e)), this.delete = (t, e) => {
                        this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({
                            type: "method",
                            method: "delete",
                            id: e
                        }), this.values.forEach((r => {
                            if (r.topic === t) {
                                if (typeof e < "u" && r.id !== e) return;
                                this.records.delete(r.id), this.events.emit(nm, r)
                            }
                        })), this.persist()
                    }, this.exists = async (t, e) => (this.isInitialized(), !!this.records.has(e) && (await this.getRecord(e)).topic === t), this.on = (t, e) => {
                        this.events.on(t, e)
                    }, this.once = (t, e) => {
                        this.events.once(t, e)
                    }, this.off = (t, e) => {
                        this.events.off(t, e)
                    }, this.removeListener = (t, e) => {
                        this.events.removeListener(t, e)
                    }, this.logger = Uc(e, this.name)
                }
                get context() {
                    return Tc(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                }
                get size() {
                    return this.records.size
                }
                get keys() {
                    return Array.from(this.records.keys())
                }
                get values() {
                    return Array.from(this.records.values())
                }
                get pending() {
                    const t = [];
                    return this.values.forEach((e => {
                        if (typeof e.response < "u") return;
                        const r = {
                            topic: e.topic,
                            request: Cd(e.request.method, e.request.params, e.id),
                            chainId: e.chainId
                        };
                        return t.push(r)
                    })), t
                }
                async setJsonRpcRecords(t) {
                    await this.core.storage.setItem(this.storageKey, t)
                }
                async getJsonRpcRecords() {
                    return await this.core.storage.getItem(this.storageKey)
                }
                getRecord(t) {
                    this.isInitialized();
                    const e = this.records.get(t);
                    if (!e) {
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `${this.name}: ${t}`);
                        throw new Error(e)
                    }
                    return e
                }
                async persist() {
                    await this.setJsonRpcRecords(this.values), this.events.emit(sm)
                }
                async restore() {
                    try {
                        const t = await this.getJsonRpcRecords();
                        if (typeof t > "u" || !t.length) return;
                        if (this.records.size) {
                            const {
                                message: t
                            } = ih("RESTORE_WILL_OVERRIDE", this.name);
                            throw this.logger.error(t), new Error(t)
                        }
                        this.cached = t, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({
                            type: "method",
                            method: "restore",
                            records: this.values
                        })
                    } catch (t) {
                        this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(t)
                    }
                }
                registerEventListeners() {
                    this.events.on(rm, (t => {
                        const e = rm;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            record: t
                        })
                    })), this.events.on(im, (t => {
                        const e = im;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            record: t
                        })
                    })), this.events.on(nm, (t => {
                        const e = nm;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            record: t
                        })
                    })), this.core.heartbeat.on(lc, (() => {
                        this.cleanup()
                    }))
                }
                cleanup() {
                    try {
                        this.isInitialized();
                        let t = !1;
                        this.records.forEach((e => {
                            (0, at.toMiliseconds)(e.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e.id}`), this.records.delete(e.id), this.events.emit(nm, e, !1), t = !0)
                        })), t && this.persist()
                    } catch (t) {
                        this.logger.warn(t)
                    }
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
            }
            class Km extends Hc {
                constructor(t, e) {
                    super(t, e), this.core = t, this.logger = e, this.expirations = new Map, this.events = new V.EventEmitter, this.name = "expirer", this.version = "0.3", this.cached = [], this.initialized = !1, this.storagePrefix = xg, this.init = async () => {
                        this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((t => this.expirations.set(t.target, t))), this.cached = [], this.registerEventListeners(), this.initialized = !0)
                    }, this.has = t => {
                        try {
                            const e = this.formatTarget(t);
                            return typeof this.getExpiration(e) < "u"
                        } catch {
                            return !1
                        }
                    }, this.set = (t, e) => {
                        this.isInitialized();
                        const r = this.formatTarget(t),
                            i = {
                                target: r,
                                expiry: e
                            };
                        this.expirations.set(r, i), this.checkExpiry(r, i), this.events.emit(om, {
                            target: r,
                            expiration: i
                        })
                    }, this.get = t => {
                        this.isInitialized();
                        const e = this.formatTarget(t);
                        return this.getExpiration(e)
                    }, this.del = t => {
                        if (this.isInitialized(), this.has(t)) {
                            const e = this.formatTarget(t),
                                r = this.getExpiration(e);
                            this.expirations.delete(e), this.events.emit(am, {
                                target: e,
                                expiration: r
                            })
                        }
                    }, this.on = (t, e) => {
                        this.events.on(t, e)
                    }, this.once = (t, e) => {
                        this.events.once(t, e)
                    }, this.off = (t, e) => {
                        this.events.off(t, e)
                    }, this.removeListener = (t, e) => {
                        this.events.removeListener(t, e)
                    }, this.logger = Uc(e, this.name)
                }
                get context() {
                    return Tc(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                }
                get length() {
                    return this.expirations.size
                }
                get keys() {
                    return Array.from(this.expirations.keys())
                }
                get values() {
                    return Array.from(this.expirations.values())
                }
                formatTarget(t) {
                    if ("string" == typeof t) return function(t) {
                        return br("topic", t)
                    }(t);
                    if ("number" == typeof t) return function(t) {
                        return br("id", t)
                    }(t);
                    const {
                        message: e
                    } = ih("UNKNOWN_TYPE", "Target type: " + typeof t);
                    throw new Error(e)
                }
                async setExpirations(t) {
                    await this.core.storage.setItem(this.storageKey, t)
                }
                async getExpirations() {
                    return await this.core.storage.getItem(this.storageKey)
                }
                async persist() {
                    await this.setExpirations(this.values), this.events.emit(cm)
                }
                async restore() {
                    try {
                        const t = await this.getExpirations();
                        if (typeof t > "u" || !t.length) return;
                        if (this.expirations.size) {
                            const {
                                message: t
                            } = ih("RESTORE_WILL_OVERRIDE", this.name);
                            throw this.logger.error(t), new Error(t)
                        }
                        this.cached = t, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({
                            type: "method",
                            method: "restore",
                            expirations: this.values
                        })
                    } catch (t) {
                        this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(t)
                    }
                }
                getExpiration(t) {
                    const e = this.expirations.get(t);
                    if (!e) {
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `${this.name}: ${t}`);
                        throw this.logger.warn(e), new Error(e)
                    }
                    return e
                }
                checkExpiry(t, e) {
                    const {
                        expiry: r
                    } = e;
                    (0, at.toMiliseconds)(r) - Date.now() <= 0 && this.expire(t, e)
                }
                expire(t, e) {
                    this.expirations.delete(t), this.events.emit(hm, {
                        target: t,
                        expiration: e
                    })
                }
                checkExpirations() {
                    this.core.relayer.connected && this.expirations.forEach(((t, e) => this.checkExpiry(e, t)))
                }
                registerEventListeners() {
                    this.core.heartbeat.on(lc, (() => this.checkExpirations())), this.events.on(om, (t => {
                        const e = om;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            data: t
                        }), this.persist()
                    })), this.events.on(hm, (t => {
                        const e = hm;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            data: t
                        }), this.persist()
                    })), this.events.on(am, (t => {
                        const e = am;
                        this.logger.info(`Emitting ${e}`), this.logger.debug({
                            type: "event",
                            event: e,
                            data: t
                        }), this.persist()
                    }))
                }
                isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                }
            }
            class Vm extends Kc {
                constructor(t, e) {
                    super(t, e), this.projectId = t, this.logger = e, this.name = um, this.initialized = !1, this.queue = [], this.verifyDisabled = !1, this.init = async t => {
                        if (this.verifyDisabled || ur() || !lr()) return;
                        const e = this.getVerifyUrl(t ? .verifyUrl);
                        this.verifyUrl !== e && this.removeIframe(), this.verifyUrl = e;
                        try {
                            await this.createIframe()
                        } catch (r) {
                            this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(r), this.verifyDisabled = !0
                        }
                    }, this.register = async t => {
                        this.initialized ? this.sendPost(t.attestationId) : (this.addToQueue(t.attestationId), await this.init())
                    }, this.resolve = async t => {
                        if (this.isDevEnv) return "";
                        const e = this.getVerifyUrl(t ? .verifyUrl);
                        return this.fetchAttestation(t.attestationId, e)
                    }, this.fetchAttestation = async (t, e) => {
                        this.logger.info(`resolving attestation: ${t} from url: ${e}`);
                        const r = this.startAbortTimer(5 * at.ONE_SECOND),
                            i = await fetch(`${e}/attestation/${t}`, {
                                signal: this.abortController.signal
                            });
                        return clearTimeout(r), 200 === i.status ? await i.json() : void 0
                    }, this.addToQueue = t => {
                        this.queue.push(t)
                    }, this.processQueue = () => {
                        0 !== this.queue.length && (this.queue.forEach((t => this.sendPost(t))), this.queue = [])
                    }, this.sendPost = t => {
                        var e;
                        try {
                            if (!this.iframe) return;
                            null == (e = this.iframe.contentWindow) || e.postMessage(t, "*"), this.logger.info(`postMessage sent: ${t} ${this.verifyUrl}`)
                        } catch {}
                    }, this.createIframe = async () => {
                        let t;
                        const e = r => {
                            "verify_ready" === r.data && (this.onInit(), window.removeEventListener("message", e), t())
                        };
                        await Promise.race([new Promise((r => {
                            const i = document.getElementById(um);
                            if (i) return this.iframe = i, this.onInit(), r();
                            window.addEventListener("message", e);
                            const n = document.createElement("iframe");
                            n.id = um, n.src = `${this.verifyUrl}/${this.projectId}`, n.style.display = "none", document.body.append(n), this.iframe = n, t = r
                        })), new Promise(((t, r) => setTimeout((() => {
                            window.removeEventListener("message", e), r("verify iframe load timeout")
                        }), (0, at.toMiliseconds)(at.FIVE_SECONDS))))])
                    }, this.onInit = () => {
                        this.initialized = !0, this.processQueue()
                    }, this.removeIframe = () => {
                        this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = !1)
                    }, this.getVerifyUrl = t => {
                        let e = t || fm;
                        return dm.includes(e) || (this.logger.info(`verify url: ${e}, not included in trusted list, assigning default: ${fm}`), e = fm), e
                    }, this.logger = Uc(e, this.name), this.verifyUrl = fm, this.abortController = new AbortController, this.isDevEnv = cr() && {
                        NODE_ENV: "production",
                        PUBLIC_URL: "",
                        WDS_SOCKET_HOST: void 0,
                        WDS_SOCKET_PATH: void 0,
                        WDS_SOCKET_PORT: void 0,
                        FAST_REFRESH: !0,
                        REACT_APP_SURVEY_LICENSE: "ZWM4MDk4ODYtOGVhZC00MzM1LTg5YmEtYjUzMDQ5Y2Y3MjJhOzE9MjAyNC0xMS0yMSwyPTIwMjQtMTEtMjEsND0yMDI0LTExLTIx\n",
                        REACT_APP_RECLAIM_APP_ID: "0xA46F9810964Ec693256155E9020A7b488385aA14",
                        REACT_APP_STRIPE_PUBLIC_KEY: "pk_test_51P7DL7GLh0dlqXv0FqCIB50x1VigXs4FqAl4y3hokP08PcK3Uv9B2iSTZDFwxsegVLF7qyvXmArWLOePHaeHdcw4000LNy935k",
                        REACT_APP_EVM_MANAGER: "0xF4b4694C6105F720c530C17De87466Bcf52e8D56",
                        REACT_APP_RECLAIM_PROVIDER_ID: "f9f383fd-32d9-4c54-942f-5e9fda349762",
                        REACT_APP_MAGIC_API_KEY: "pk_live_4C2CA30E7C7B4950\n",
                        REACT_APP_WAGMI_PROJECT_ID: "dd27cb6d85877456938676a286bd9ee1",
                        REACT_APP_BICONOMY_BUNDLER_KEY: "nJPK7B3ru.dd7f7861-190d-41bd-af80-6877f74b8f44",
                        REACT_APP_ENV: "development",
                        REACT_APP_MANIFEST_URL: '"https://bohdanshymanskyi.github.io/qstn-tonconnect/tonconnect-manifest.json"',
                        REACT_APP_BICONOMY_PAYMASTER_KEY: "L6d3gSygy.317ea8ea-38b3-47e3-9652-0516f1a72202",
                        REACT_APP_URL: "https://testnet.qstnus.com",
                        REACT_APP_API_URL: "https://qstn-back.idealogic.dev"
                    }.IS_VITEST
                }
                get context() {
                    return Tc(this.logger)
                }
                startAbortTimer(t) {
                    return this.abortController = new AbortController, setTimeout((() => this.abortController.abort()), (0, at.toMiliseconds)(t))
                }
            }
            class $m extends Vc {
                constructor(t, e) {
                    super(t, e), this.projectId = t, this.logger = e, this.context = "echo", this.registerDeviceToken = async t => {
                        const {
                            clientId: e,
                            token: r,
                            notificationType: i,
                            enableEncrypted: n = !1
                        } = t, s = `https://echo.walletconnect.com/${this.projectId}/clients`;
                        await Xd()(s, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                client_id: e,
                                type: i,
                                token: r,
                                always_raw: n
                            })
                        })
                    }, this.logger = Uc(e, this.context)
                }
            }
            var Wm = Object.defineProperty,
                Gm = Object.getOwnPropertySymbols,
                Qm = Object.prototype.hasOwnProperty,
                Ym = Object.prototype.propertyIsEnumerable,
                Jm = (t, e, r) => e in t ? Wm(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Xm = (t, e) => {
                    for (var r in e || (e = {})) Qm.call(e, r) && Jm(t, r, e[r]);
                    if (Gm)
                        for (var r of Gm(e)) Ym.call(e, r) && Jm(t, r, e[r]);
                    return t
                };
            class Zm extends kc {
                constructor(t) {
                    var e;
                    super(t), this.protocol = "wc", this.version = 2, this.name = Mg, this.events = new V.EventEmitter, this.initialized = !1, this.on = (t, e) => this.events.on(t, e), this.once = (t, e) => this.events.once(t, e), this.off = (t, e) => this.events.off(t, e), this.removeListener = (t, e) => this.events.removeListener(t, e), this.projectId = t ? .projectId, this.relayUrl = t ? .relayUrl || Ug, this.customStoragePrefix = null != t && t.customStoragePrefix ? `:${t.customStoragePrefix}` : "";
                    const r = Rc({
                            level: "string" == typeof t ? .logger && t.logger ? t.logger : Og
                        }),
                        {
                            logger: i,
                            chunkLoggerController: n
                        } = Dc({
                            opts: r,
                            maxSizeInBytes: t ? .maxLogBlobSizeInBytes,
                            loggerOverride: t ? .logger
                        });
                    this.logChunkController = n, null != (e = this.logChunkController) && e.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
                        var t, e;
                        null != (t = this.logChunkController) && t.downloadLogsBlobInBrowser && (null == (e = this.logChunkController) || e.downloadLogsBlobInBrowser({
                            clientId: await this.crypto.getClientId()
                        }))
                    }), this.logger = Uc(i, this.name), this.heartbeat = new fc, this.crypto = new gm(this, this.logger, t ? .keychain), this.history = new Hm(this, this.logger), this.expirer = new Km(this, this.logger), this.storage = null != t && t.storage ? t.storage : new ac(Xm(Xm({}, Cg), t ? .storageOptions)), this.relayer = new Um({
                        core: this,
                        logger: this.logger,
                        relayUrl: this.relayUrl,
                        projectId: this.projectId
                    }), this.pairing = new Fm(this, this.logger), this.verify = new Vm(this.projectId || "", this.logger), this.echoClient = new $m(this.projectId || "", this.logger)
                }
                static async init(t) {
                    const e = new Zm(t);
                    await e.initialize();
                    const r = await e.crypto.getClientId();
                    return await e.storage.setItem("WALLETCONNECT_CLIENT_ID", r), e
                }
                get context() {
                    return Tc(this.logger)
                }
                async start() {
                    this.initialized || await this.initialize()
                }
                async getLogsBlob() {
                    var t;
                    return null == (t = this.logChunkController) ? void 0 : t.logsToBlob({
                        clientId: await this.crypto.getClientId()
                    })
                }
                async initialize() {
                    this.logger.trace("Initialized");
                    try {
                        await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = !0, this.logger.info("Core Initialization Success")
                    } catch (t) {
                        throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, t), this.logger.error(t.message), t
                    }
                }
            }
            const ty = Zm,
                ey = "client",
                ry = `wc@2:${ey}:`,
                iy = ey,
                ny = "error",
                sy = "WALLETCONNECT_DEEPLINK_CHOICE",
                oy = "Proposal expired",
                ay = at.SEVEN_DAYS,
                hy = {
                    wc_sessionPropose: {
                        req: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1100
                        },
                        res: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1101
                        },
                        reject: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1120
                        },
                        autoReject: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1121
                        }
                    },
                    wc_sessionSettle: {
                        req: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1102
                        },
                        res: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1103
                        }
                    },
                    wc_sessionUpdate: {
                        req: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1104
                        },
                        res: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1105
                        }
                    },
                    wc_sessionExtend: {
                        req: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1106
                        },
                        res: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1107
                        }
                    },
                    wc_sessionRequest: {
                        req: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1108
                        },
                        res: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1109
                        }
                    },
                    wc_sessionEvent: {
                        req: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1110
                        },
                        res: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1111
                        }
                    },
                    wc_sessionDelete: {
                        req: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1112
                        },
                        res: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1113
                        }
                    },
                    wc_sessionPing: {
                        req: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1114
                        },
                        res: {
                            ttl: at.ONE_DAY,
                            prompt: !1,
                            tag: 1115
                        }
                    },
                    wc_sessionAuthenticate: {
                        req: {
                            ttl: at.ONE_HOUR,
                            prompt: !0,
                            tag: 1116
                        },
                        res: {
                            ttl: at.ONE_HOUR,
                            prompt: !1,
                            tag: 1117
                        },
                        reject: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1118
                        },
                        autoReject: {
                            ttl: at.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1119
                        }
                    }
                },
                cy = {
                    min: at.FIVE_MINUTES,
                    max: at.SEVEN_DAYS
                },
                uy = "IDLE",
                ly = "ACTIVE",
                fy = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"],
                dy = "wc@1.5:auth:",
                py = `${dy}:PUB_KEY`;
            var gy = Object.defineProperty,
                my = Object.defineProperties,
                yy = Object.getOwnPropertyDescriptors,
                vy = Object.getOwnPropertySymbols,
                wy = Object.prototype.hasOwnProperty,
                by = Object.prototype.propertyIsEnumerable,
                _y = (t, e, r) => e in t ? gy(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Ay = (t, e) => {
                    for (var r in e || (e = {})) wy.call(e, r) && _y(t, r, e[r]);
                    if (vy)
                        for (var r of vy(e)) by.call(e, r) && _y(t, r, e[r]);
                    return t
                },
                Ey = (t, e) => my(t, yy(e));
            class Sy extends Wc {
                constructor(t) {
                    var e;
                    super(t), e = this, this.name = "engine", this.events = new($()), this.initialized = !1, this.requestQueue = {
                        state: uy,
                        queue: []
                    }, this.sessionRequestQueue = {
                        state: uy,
                        queue: []
                    }, this.requestQueueDelay = at.ONE_SECOND, this.expectedPairingMethodMap = new Map, this.recentlyDeletedMap = new Map, this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async () => {
                        this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({
                            methods: Object.keys(hy)
                        }), this.initialized = !0, setTimeout((() => {
                            this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue()
                        }), (0, at.toMiliseconds)(this.requestQueueDelay)))
                    }, this.connect = async t => {
                        await this.isInitialized();
                        const e = Ey(Ay({}, t), {
                            requiredNamespaces: t.requiredNamespaces || {},
                            optionalNamespaces: t.optionalNamespaces || {}
                        });
                        await this.isValidConnect(e);
                        const {
                            pairingTopic: r,
                            requiredNamespaces: i,
                            optionalNamespaces: n,
                            sessionProperties: s,
                            relays: o
                        } = e;
                        let a, h = r,
                            c = !1;
                        try {
                            h && (c = this.client.core.pairing.pairings.get(h).active)
                        } catch (v) {
                            throw this.client.logger.error(`connect() -> pairing.get(${h}) failed`), v
                        }
                        if (!h || !c) {
                            const {
                                topic: t,
                                uri: e
                            } = await this.client.core.pairing.create();
                            h = t, a = e
                        }
                        if (!h) {
                            const {
                                message: t
                            } = ih("NO_MATCHING_KEY", `connect() pairing topic: ${h}`);
                            throw new Error(t)
                        }
                        const u = await this.client.core.crypto.generateKeyPair(),
                            l = hy.wc_sessionPropose.req.ttl || at.FIVE_MINUTES,
                            f = Ar(l),
                            d = Ay({
                                requiredNamespaces: i,
                                optionalNamespaces: n,
                                relays: o ? ? [{
                                    protocol: "irn"
                                }],
                                proposer: {
                                    publicKey: u,
                                    metadata: this.client.metadata
                                },
                                expiryTimestamp: f,
                                pairingTopic: h
                            }, s && {
                                sessionProperties: s
                            }),
                            {
                                reject: p,
                                resolve: g,
                                done: m
                            } = vr(l, oy);
                        this.events.once(Sr("session_connect"), (async t => {
                            let {
                                error: e,
                                session: r
                            } = t;
                            if (e) p(e);
                            else if (r) {
                                r.self.publicKey = u;
                                const t = Ey(Ay({}, r), {
                                    pairingTopic: d.pairingTopic,
                                    requiredNamespaces: d.requiredNamespaces,
                                    optionalNamespaces: d.optionalNamespaces
                                });
                                await this.client.session.set(r.topic, t), await this.setExpiry(r.topic, r.expiry), h && await this.client.core.pairing.updateMetadata({
                                    topic: h,
                                    metadata: r.peer.metadata
                                }), this.cleanupDuplicatePairings(t), g(t)
                            }
                        }));
                        const y = await this.sendRequest({
                            topic: h,
                            method: "wc_sessionPropose",
                            params: d,
                            throwOnFailedPublish: !0
                        });
                        return await this.setProposal(y, Ay({
                            id: y
                        }, d)), {
                            uri: a,
                            approval: m
                        }
                    }, this.pair = async t => {
                        await this.isInitialized();
                        try {
                            return await this.client.core.pairing.pair(t)
                        } catch (e) {
                            throw this.client.logger.error("pair() failed"), e
                        }
                    }, this.approve = async t => {
                        await this.isInitialized();
                        try {
                            await this.isValidApprove(t)
                        } catch (m) {
                            throw this.client.logger.error("approve() -> isValidApprove() failed"), m
                        }
                        const {
                            id: e,
                            relayProtocol: r,
                            namespaces: i,
                            sessionProperties: n,
                            sessionConfig: s
                        } = t;
                        let o;
                        try {
                            o = this.client.proposal.get(e)
                        } catch (m) {
                            throw this.client.logger.error(`approve() -> proposal.get(${e}) failed`), m
                        }
                        const {
                            pairingTopic: a,
                            proposer: h,
                            requiredNamespaces: c,
                            optionalNamespaces: u
                        } = o, l = await this.client.core.crypto.generateKeyPair(), f = h.publicKey, d = await this.client.core.crypto.generateSharedKey(l, f), p = Ay(Ay({
                            relay: {
                                protocol: r ? ? "irn"
                            },
                            namespaces: i,
                            controller: {
                                publicKey: l,
                                metadata: this.client.metadata
                            },
                            expiry: Ar(ay)
                        }, n && {
                            sessionProperties: n
                        }), s && {
                            sessionConfig: s
                        });
                        await this.client.core.relayer.subscribe(d);
                        const g = Ey(Ay({}, p), {
                            topic: d,
                            requiredNamespaces: c,
                            optionalNamespaces: u,
                            pairingTopic: a,
                            acknowledged: !1,
                            self: p.controller,
                            peer: {
                                publicKey: h.publicKey,
                                metadata: h.metadata
                            },
                            controller: l
                        });
                        await this.client.session.set(d, g);
                        try {
                            await this.sendResult({
                                id: e,
                                topic: a,
                                result: {
                                    relay: {
                                        protocol: r ? ? "irn"
                                    },
                                    responderPublicKey: l
                                },
                                throwOnFailedPublish: !0
                            }), await this.sendRequest({
                                topic: d,
                                method: "wc_sessionSettle",
                                params: p,
                                throwOnFailedPublish: !0
                            })
                        } catch (m) {
                            throw this.client.logger.error(m), this.client.session.delete(d, nh("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(d), m
                        }
                        return await this.client.core.pairing.updateMetadata({
                            topic: a,
                            metadata: h.metadata
                        }), await this.client.proposal.delete(e, nh("USER_DISCONNECTED")), await this.client.core.pairing.activate({
                            topic: a
                        }), await this.setExpiry(d, Ar(ay)), {
                            topic: d,
                            acknowledged: () => new Promise((t => setTimeout((() => t(this.client.session.get(d))), 500)))
                        }
                    }, this.reject = async t => {
                        await this.isInitialized();
                        try {
                            await this.isValidReject(t)
                        } catch (n) {
                            throw this.client.logger.error("reject() -> isValidReject() failed"), n
                        }
                        const {
                            id: e,
                            reason: r
                        } = t;
                        let i;
                        try {
                            i = this.client.proposal.get(e).pairingTopic
                        } catch (n) {
                            throw this.client.logger.error(`reject() -> proposal.get(${e}) failed`), n
                        }
                        i && (await this.sendError({
                            id: e,
                            topic: i,
                            error: r,
                            rpcOpts: hy.wc_sessionPropose.reject
                        }), await this.client.proposal.delete(e, nh("USER_DISCONNECTED")))
                    }, this.update = async t => {
                        await this.isInitialized();
                        try {
                            await this.isValidUpdate(t)
                        } catch (c) {
                            throw this.client.logger.error("update() -> isValidUpdate() failed"), c
                        }
                        const {
                            topic: e,
                            namespaces: r
                        } = t, {
                            done: i,
                            resolve: n,
                            reject: s
                        } = vr(), o = xd(), a = Od().toString(), h = this.client.session.get(e).namespaces;
                        return this.events.once(Sr("session_update", o), (t => {
                            let {
                                error: e
                            } = t;
                            e ? s(e) : n()
                        })), await this.client.session.update(e, {
                            namespaces: r
                        }), await this.sendRequest({
                            topic: e,
                            method: "wc_sessionUpdate",
                            params: {
                                namespaces: r
                            },
                            throwOnFailedPublish: !0,
                            clientRpcId: o,
                            relayRpcId: a
                        }).catch((t => {
                            this.client.logger.error(t), this.client.session.update(e, {
                                namespaces: h
                            }), s(t)
                        })), {
                            acknowledged: i
                        }
                    }, this.extend = async t => {
                        await this.isInitialized();
                        try {
                            await this.isValidExtend(t)
                        } catch (o) {
                            throw this.client.logger.error("extend() -> isValidExtend() failed"), o
                        }
                        const {
                            topic: e
                        } = t, r = xd(), {
                            done: i,
                            resolve: n,
                            reject: s
                        } = vr();
                        return this.events.once(Sr("session_extend", r), (t => {
                            let {
                                error: e
                            } = t;
                            e ? s(e) : n()
                        })), await this.setExpiry(e, Ar(ay)), this.sendRequest({
                            topic: e,
                            method: "wc_sessionExtend",
                            params: {},
                            clientRpcId: r,
                            throwOnFailedPublish: !0
                        }).catch((t => {
                            s(t)
                        })), {
                            acknowledged: i
                        }
                    }, this.request = async t => {
                        await this.isInitialized();
                        try {
                            await this.isValidRequest(t)
                        } catch (f) {
                            throw this.client.logger.error("request() -> isValidRequest() failed"), f
                        }
                        const {
                            chainId: e,
                            request: i,
                            topic: n,
                            expiry: s = hy.wc_sessionRequest.req.ttl
                        } = t, o = this.client.session.get(n), a = xd(), h = Od().toString(), {
                            done: c,
                            resolve: u,
                            reject: l
                        } = vr(s, "Request expired. Please try again.");
                        return this.events.once(Sr("session_request", a), (t => {
                            let {
                                error: e,
                                result: r
                            } = t;
                            e ? l(e) : u(r)
                        })), await Promise.all([new Promise((async t => {
                            await this.sendRequest({
                                clientRpcId: a,
                                relayRpcId: h,
                                topic: n,
                                method: "wc_sessionRequest",
                                params: {
                                    request: Ey(Ay({}, i), {
                                        expiryTimestamp: Ar(s)
                                    }),
                                    chainId: e
                                },
                                expiry: s,
                                throwOnFailedPublish: !0
                            }).catch((t => l(t))), this.client.events.emit("session_request_sent", {
                                topic: n,
                                request: i,
                                chainId: e,
                                id: a
                            }), t()
                        })), new Promise((async t => {
                            var e;
                            if (null == (e = o.sessionConfig) || !e.disableDeepLink) {
                                const t = await async function(t, e) {
                                    try {
                                        return await t.getItem(e) || (lr() ? localStorage.getItem(e) : void 0)
                                    } catch (s) {
                                        console.error(s)
                                    }
                                }(this.client.core.storage, sy);
                                !async function(t) {
                                    let {
                                        id: e,
                                        topic: i,
                                        wcDeepLink: s
                                    } = t;
                                    try {
                                        if (!s) return;
                                        const t = "string" == typeof s ? JSON.parse(s) : s;
                                        let n = t ? .href;
                                        if ("string" != typeof n) return;
                                        n.endsWith("/") && (n = n.slice(0, -1));
                                        const o = `${n}/wc?requestId=${e}&sessionTopic=${i}`,
                                            a = fr();
                                        a === ar.browser ? o.startsWith("https://") || o.startsWith("http://") ? window.open(o, "_blank", "noreferrer noopener") : window.open(o, "_self", "noreferrer noopener") : a === ar.reactNative && typeof(null == r.g ? void 0 : r.g.Linking) < "u" && await r.g.Linking.openURL(o)
                                    } catch (n) {
                                        console.error(n)
                                    }
                                }({
                                    id: a,
                                    topic: n,
                                    wcDeepLink: t
                                })
                            }
                            t()
                        })), c()]).then((t => t[2]))
                    }, this.respond = async t => {
                        await this.isInitialized(), await this.isValidRespond(t);
                        const {
                            topic: e,
                            response: r
                        } = t, {
                            id: i
                        } = r;
                        Hd(r) ? await this.sendResult({
                            id: i,
                            topic: e,
                            result: r.result,
                            throwOnFailedPublish: !0
                        }) : Kd(r) && await this.sendError({
                            id: i,
                            topic: e,
                            error: r.error
                        }), this.cleanupAfterResponse(t)
                    }, this.ping = async t => {
                        await this.isInitialized();
                        try {
                            await this.isValidPing(t)
                        } catch (uc) {
                            throw this.client.logger.error("ping() -> isValidPing() failed"), uc
                        }
                        const {
                            topic: e
                        } = t;
                        if (this.client.session.keys.includes(e)) {
                            const t = xd(),
                                r = Od().toString(),
                                {
                                    done: i,
                                    resolve: n,
                                    reject: s
                                } = vr();
                            this.events.once(Sr("session_ping", t), (t => {
                                let {
                                    error: e
                                } = t;
                                e ? s(e) : n()
                            })), await Promise.all([this.sendRequest({
                                topic: e,
                                method: "wc_sessionPing",
                                params: {},
                                throwOnFailedPublish: !0,
                                clientRpcId: t,
                                relayRpcId: r
                            }), i()])
                        } else this.client.core.pairing.pairings.keys.includes(e) && await this.client.core.pairing.ping({
                            topic: e
                        })
                    }, this.emit = async t => {
                        await this.isInitialized(), await this.isValidEmit(t);
                        const {
                            topic: e,
                            event: r,
                            chainId: i
                        } = t, n = Od().toString();
                        await this.sendRequest({
                            topic: e,
                            method: "wc_sessionEvent",
                            params: {
                                event: r,
                                chainId: i
                            },
                            throwOnFailedPublish: !0,
                            relayRpcId: n
                        })
                    }, this.disconnect = async t => {
                        await this.isInitialized(), await this.isValidDisconnect(t);
                        const {
                            topic: e
                        } = t;
                        if (this.client.session.keys.includes(e)) await this.sendRequest({
                            topic: e,
                            method: "wc_sessionDelete",
                            params: nh("USER_DISCONNECTED"),
                            throwOnFailedPublish: !0
                        }), await this.deleteSession({
                            topic: e,
                            emitEvent: !1
                        });
                        else {
                            if (!this.client.core.pairing.pairings.keys.includes(e)) {
                                const {
                                    message: t
                                } = ih("MISMATCHED_TOPIC", `Session or pairing topic not found: ${e}`);
                                throw new Error(t)
                            }
                            await this.client.core.pairing.disconnect({
                                topic: e
                            })
                        }
                    }, this.find = t => (this.isInitialized(), this.client.session.getAll().filter((e => function(t, e) {
                        const {
                            requiredNamespaces: r
                        } = e, i = Object.keys(t.namespaces), n = Object.keys(r);
                        let s = !0;
                        return !!gr(n, i) && (i.forEach((e => {
                            const {
                                accounts: i,
                                methods: n,
                                events: o
                            } = t.namespaces[e], a = Ja(i), h = r[e];
                            (!gr(Ze(e, h), a) || !gr(h.methods, n) || !gr(h.events, o)) && (s = !1)
                        })), s)
                    }(e, t)))), this.getPendingSessionRequests = () => this.client.pendingRequest.getAll(), this.authenticate = async t => {
                        this.isInitialized(), this.isValidAuthenticate(t);
                        const {
                            chains: e,
                            statement: r = "",
                            uri: i,
                            domain: n,
                            nonce: s,
                            type: o,
                            exp: a,
                            nbf: h,
                            methods: c = [],
                            expiry: u
                        } = t, l = [...t.resources || []], {
                            topic: f,
                            uri: d
                        } = await this.client.core.pairing.create({
                            methods: ["wc_sessionAuthenticate"]
                        });
                        this.client.logger.info({
                            message: "Generated new pairing",
                            pairing: {
                                topic: f,
                                uri: d
                            }
                        });
                        const p = await this.client.core.crypto.generateKeyPair(),
                            g = Ca(p);
                        if (await Promise.all([this.client.auth.authKeys.set(py, {
                                responseTopic: g,
                                publicKey: p
                            }), this.client.auth.pairingTopics.set(g, {
                                topic: g,
                                pairingTopic: f
                            })]), await this.client.core.relayer.subscribe(g), this.client.logger.info(`sending request to new pairing topic: ${f}`), c.length > 0) {
                            const {
                                namespace: t
                            } = Je(e[0]);
                            let r = fa(t, "request", c);
                            va(l) && (r = pa(r, l.pop())), l.push(r)
                        }
                        const m = u && u > hy.wc_sessionAuthenticate.req.ttl ? u : hy.wc_sessionAuthenticate.req.ttl,
                            y = {
                                authPayload: {
                                    type: o ? ? "caip122",
                                    chains: e,
                                    statement: r,
                                    aud: i,
                                    domain: n,
                                    version: "1",
                                    nonce: s,
                                    iat: (new Date).toISOString(),
                                    exp: a,
                                    nbf: h,
                                    resources: l
                                },
                                requester: {
                                    publicKey: p,
                                    metadata: this.client.metadata
                                },
                                expiryTimestamp: Ar(m)
                            },
                            v = {
                                requiredNamespaces: {},
                                optionalNamespaces: {
                                    eip155: {
                                        chains: e,
                                        methods: [...new Set(["personal_sign", ...c])],
                                        events: ["chainChanged", "accountsChanged"]
                                    }
                                },
                                relays: [{
                                    protocol: "irn"
                                }],
                                pairingTopic: f,
                                proposer: {
                                    publicKey: p,
                                    metadata: this.client.metadata
                                },
                                expiryTimestamp: Ar(hy.wc_sessionPropose.req.ttl)
                            },
                            {
                                done: w,
                                resolve: b,
                                reject: _
                            } = vr(m, "Request expired"),
                            A = async t => {
                                let {
                                    error: e,
                                    session: r
                                } = t;
                                if (this.events.off(Sr("session_request", S), E), e) _(e);
                                else if (r) {
                                    r.self.publicKey = p, await this.client.session.set(r.topic, r), await this.setExpiry(r.topic, r.expiry), f && await this.client.core.pairing.updateMetadata({
                                        topic: f,
                                        metadata: r.peer.metadata
                                    });
                                    const t = this.client.session.get(r.topic);
                                    await this.deleteProposal(I), b({
                                        session: t
                                    })
                                }
                            },
                            E = async t => {
                                if (await this.deletePendingAuthRequest(S, {
                                        message: "fulfilled",
                                        code: 0
                                    }), t.error) {
                                    const e = nh("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
                                    return t.error.code === e.code ? void 0 : (this.events.off(Sr("session_connect"), A), _(t.error.message))
                                }
                                await this.deleteProposal(I), this.events.off(Sr("session_connect"), A);
                                const {
                                    cacaos: e,
                                    responder: r
                                } = t.result, i = [], n = [];
                                for (const a of e) {
                                    await oa({
                                        cacao: a,
                                        projectId: this.client.core.projectId
                                    }) || (this.client.logger.error(a, "Signature verification failed"), _(nh("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
                                    const {
                                        p: t
                                    } = a, e = va(t.resources), r = [na(t.iss)], s = sa(t.iss);
                                    if (e) {
                                        const t = ma(e),
                                            n = ya(e);
                                        i.push(...t), r.push(...n)
                                    }
                                    for (const i of r) n.push(`${i}:${s}`)
                                }
                                const s = await this.client.core.crypto.generateSharedKey(p, r.publicKey);
                                let o;
                                i.length > 0 && (o = {
                                    topic: s,
                                    acknowledged: !0,
                                    self: {
                                        publicKey: p,
                                        metadata: this.client.metadata
                                    },
                                    peer: r,
                                    controller: r.publicKey,
                                    expiry: Ar(ay),
                                    requiredNamespaces: {},
                                    optionalNamespaces: {},
                                    relay: {
                                        protocol: "irn"
                                    },
                                    pairingTopic: f,
                                    namespaces: th([...new Set(i)], [...new Set(n)])
                                }, await this.client.core.relayer.subscribe(s), await this.client.session.set(s, o), f && await this.client.core.pairing.updateMetadata({
                                    topic: f,
                                    metadata: r.metadata
                                }), o = this.client.session.get(s)), b({
                                    auths: e,
                                    session: o
                                })
                            },
                            S = xd(),
                            I = xd();
                        this.events.once(Sr("session_connect"), A), this.events.once(Sr("session_request", S), E);
                        try {
                            await Promise.all([this.sendRequest({
                                topic: f,
                                method: "wc_sessionAuthenticate",
                                params: y,
                                expiry: t.expiry,
                                throwOnFailedPublish: !0,
                                clientRpcId: S
                            }), this.sendRequest({
                                topic: f,
                                method: "wc_sessionPropose",
                                params: v,
                                expiry: hy.wc_sessionPropose.req.ttl,
                                throwOnFailedPublish: !0,
                                clientRpcId: I
                            })])
                        } catch (Dc) {
                            throw this.events.off(Sr("session_connect"), A), this.events.off(Sr("session_request", S), E), Dc
                        }
                        return await this.setProposal(I, Ay({
                            id: I
                        }, v)), await this.setAuthRequest(S, {
                            request: Ey(Ay({}, y), {
                                verifyContext: {}
                            }),
                            pairingTopic: f
                        }), {
                            uri: d,
                            response: w
                        }
                    }, this.approveSessionAuthenticate = async t => {
                        this.isInitialized();
                        const {
                            id: e,
                            auths: r
                        } = t, i = this.getPendingAuthRequest(e);
                        if (!i) throw new Error(`Could not find pending auth request with id ${e}`);
                        const n = i.requester.publicKey,
                            s = await this.client.core.crypto.generateKeyPair(),
                            o = Ca(n),
                            a = {
                                type: Sa,
                                receiverPublicKey: n,
                                senderPublicKey: s
                            },
                            h = [],
                            c = [];
                        for (const f of r) {
                            if (!await oa({
                                    cacao: f,
                                    projectId: this.client.core.projectId
                                })) {
                                const t = nh("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
                                throw await this.sendError({
                                    id: e,
                                    topic: o,
                                    error: t,
                                    encodeOpts: a
                                }), new Error(t.message)
                            }
                            const {
                                p: t
                            } = f, r = va(t.resources), i = [na(t.iss)], n = sa(t.iss);
                            if (r) {
                                const t = ma(r),
                                    e = ya(r);
                                h.push(...t), i.push(...e)
                            }
                            for (const e of i) c.push(`${e}:${n}`)
                        }
                        const u = await this.client.core.crypto.generateSharedKey(s, n);
                        let l;
                        return h ? .length > 0 && (l = {
                            topic: u,
                            acknowledged: !0,
                            self: {
                                publicKey: s,
                                metadata: this.client.metadata
                            },
                            peer: {
                                publicKey: n,
                                metadata: i.requester.metadata
                            },
                            controller: n,
                            expiry: Ar(ay),
                            authentication: r,
                            requiredNamespaces: {},
                            optionalNamespaces: {},
                            relay: {
                                protocol: "irn"
                            },
                            pairingTopic: i.pairingTopic,
                            namespaces: th([...new Set(h)], [...new Set(c)])
                        }, await this.client.core.relayer.subscribe(u), await this.client.session.set(u, l), await this.client.core.pairing.updateMetadata({
                            topic: i.pairingTopic,
                            metadata: i.requester.metadata
                        })), await this.sendResult({
                            topic: o,
                            id: e,
                            result: {
                                cacaos: r,
                                responder: {
                                    publicKey: s,
                                    metadata: this.client.metadata
                                }
                            },
                            encodeOpts: a,
                            throwOnFailedPublish: !0
                        }), await this.client.auth.requests.delete(e, {
                            message: "fulfilled",
                            code: 0
                        }), await this.client.core.pairing.activate({
                            topic: i.pairingTopic
                        }), {
                            session: l
                        }
                    }, this.rejectSessionAuthenticate = async t => {
                        await this.isInitialized();
                        const {
                            id: e,
                            reason: r
                        } = t, i = this.getPendingAuthRequest(e);
                        if (!i) throw new Error(`Could not find pending auth request with id ${e}`);
                        const n = i.requester.publicKey,
                            s = await this.client.core.crypto.generateKeyPair(),
                            o = Ca(n),
                            a = {
                                type: Sa,
                                receiverPublicKey: n,
                                senderPublicKey: s
                            };
                        await this.sendError({
                            id: e,
                            topic: o,
                            error: r,
                            encodeOpts: a,
                            rpcOpts: hy.wc_sessionAuthenticate.reject
                        }), await this.client.auth.requests.delete(e, {
                            message: "rejected",
                            code: 0
                        }), await this.client.proposal.delete(e, nh("USER_DISCONNECTED"))
                    }, this.formatAuthMessage = t => {
                        this.isInitialized();
                        const {
                            request: e,
                            iss: r
                        } = t;
                        return aa(e, r)
                    }, this.processRelayMessageCache = () => {
                        setTimeout((async () => {
                            if (0 !== this.relayMessageCache.length)
                                for (; this.relayMessageCache.length > 0;) try {
                                    const t = this.relayMessageCache.shift();
                                    t && await this.onRelayMessage(t)
                                } catch (t) {
                                    this.client.logger.error(t)
                                }
                        }), 50)
                    }, this.cleanupDuplicatePairings = async t => {
                        if (t.pairingTopic) try {
                            const e = this.client.core.pairing.pairings.get(t.pairingTopic),
                                r = this.client.core.pairing.pairings.getAll().filter((r => {
                                    var i, n;
                                    return (null == (i = r.peerMetadata) ? void 0 : i.url) && (null == (n = r.peerMetadata) ? void 0 : n.url) === t.peer.metadata.url && r.topic && r.topic !== e.topic
                                }));
                            if (0 === r.length) return;
                            this.client.logger.info(`Cleaning up ${r.length} duplicate pairing(s)`), await Promise.all(r.map((t => this.client.core.pairing.disconnect({
                                topic: t.topic
                            })))), this.client.logger.info("Duplicate pairings clean up finished")
                        } catch (e) {
                            this.client.logger.error(e)
                        }
                    }, this.deleteSession = async t => {
                        var e;
                        const {
                            topic: r,
                            expirerHasDeleted: i = !1,
                            emitEvent: n = !0,
                            id: s = 0
                        } = t, {
                            self: o
                        } = this.client.session.get(r);
                        await this.client.core.relayer.unsubscribe(r), await this.client.session.delete(r, nh("USER_DISCONNECTED")), this.addToRecentlyDeleted(r, "session"), this.client.core.crypto.keychain.has(o.publicKey) && await this.client.core.crypto.deleteKeyPair(o.publicKey), this.client.core.crypto.keychain.has(r) && await this.client.core.crypto.deleteSymKey(r), i || this.client.core.expirer.del(r), this.client.core.storage.removeItem(sy).catch((t => this.client.logger.warn(t))), this.getPendingSessionRequests().forEach((t => {
                            t.topic === r && this.deletePendingSessionRequest(t.id, nh("USER_DISCONNECTED"))
                        })), r === (null == (e = this.sessionRequestQueue.queue[0]) ? void 0 : e.topic) && (this.sessionRequestQueue.state = uy), n && this.client.events.emit("session_delete", {
                            id: s,
                            topic: r
                        })
                    }, this.deleteProposal = async (t, e) => {
                        await Promise.all([this.client.proposal.delete(t, nh("USER_DISCONNECTED")), e ? Promise.resolve() : this.client.core.expirer.del(t)]), this.addToRecentlyDeleted(t, "proposal")
                    }, this.deletePendingSessionRequest = async function(t, r) {
                        let i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        await Promise.all([e.client.pendingRequest.delete(t, r), i ? Promise.resolve() : e.client.core.expirer.del(t)]), e.addToRecentlyDeleted(t, "request"), e.sessionRequestQueue.queue = e.sessionRequestQueue.queue.filter((e => e.id !== t)), i && (e.sessionRequestQueue.state = uy, e.client.events.emit("session_request_expire", {
                            id: t
                        }))
                    }, this.deletePendingAuthRequest = async function(t, r) {
                        let i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        await Promise.all([e.client.auth.requests.delete(t, r), i ? Promise.resolve() : e.client.core.expirer.del(t)])
                    }, this.setExpiry = async (t, e) => {
                        this.client.session.keys.includes(t) && (this.client.core.expirer.set(t, e), await this.client.session.update(t, {
                            expiry: e
                        }))
                    }, this.setProposal = async (t, e) => {
                        this.client.core.expirer.set(t, Ar(hy.wc_sessionPropose.req.ttl)), await this.client.proposal.set(t, e)
                    }, this.setAuthRequest = async (t, e) => {
                        const {
                            request: r,
                            pairingTopic: i
                        } = e;
                        this.client.core.expirer.set(t, r.expiryTimestamp), await this.client.auth.requests.set(t, {
                            authPayload: r.authPayload,
                            requester: r.requester,
                            expiryTimestamp: r.expiryTimestamp,
                            id: t,
                            pairingTopic: i,
                            verifyContext: r.verifyContext
                        })
                    }, this.setPendingSessionRequest = async t => {
                        const {
                            id: e,
                            topic: r,
                            params: i,
                            verifyContext: n
                        } = t, s = i.request.expiryTimestamp || Ar(hy.wc_sessionRequest.req.ttl);
                        this.client.core.expirer.set(e, s), await this.client.pendingRequest.set(e, {
                            id: e,
                            topic: r,
                            params: i,
                            verifyContext: n
                        })
                    }, this.sendRequest = async t => {
                        const {
                            topic: e,
                            method: r,
                            params: i,
                            expiry: n,
                            relayRpcId: s,
                            clientRpcId: o,
                            throwOnFailedPublish: a
                        } = t, h = Cd(r, i, o);
                        if (lr() && fy.includes(r)) {
                            const t = Na(JSON.stringify(h));
                            this.client.core.verify.register({
                                attestationId: t
                            })
                        }
                        let c;
                        try {
                            c = await this.client.core.crypto.encode(e, h)
                        } catch (l) {
                            throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${e} failed`), l
                        }
                        const u = hy[r].req;
                        return n && (u.ttl = n), s && (u.id = s), this.client.core.history.set(e, h), a ? (u.internal = Ey(Ay({}, u.internal), {
                            throwOnFailedPublish: !0
                        }), await this.client.core.relayer.publish(e, c, u)) : this.client.core.relayer.publish(e, c, u).catch((t => this.client.logger.error(t))), h.id
                    }, this.sendResult = async t => {
                        const {
                            id: e,
                            topic: r,
                            result: i,
                            throwOnFailedPublish: n,
                            encodeOpts: s
                        } = t, o = Nd(e, i);
                        let a, h;
                        try {
                            a = await this.client.core.crypto.encode(r, o, s)
                        } catch (u) {
                            throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${r} failed`), u
                        }
                        try {
                            h = await this.client.core.history.get(r, e)
                        } catch (u) {
                            throw this.client.logger.error(`sendResult() -> history.get(${r}, ${e}) failed`), u
                        }
                        const c = hy[h.request.method].res;
                        n ? (c.internal = Ey(Ay({}, c.internal), {
                            throwOnFailedPublish: !0
                        }), await this.client.core.relayer.publish(r, a, c)) : this.client.core.relayer.publish(r, a, c).catch((t => this.client.logger.error(t))), await this.client.core.history.resolve(o)
                    }, this.sendError = async t => {
                        const {
                            id: e,
                            topic: r,
                            error: i,
                            encodeOpts: n,
                            rpcOpts: s
                        } = t, o = Rd(e, i);
                        let a, h;
                        try {
                            a = await this.client.core.crypto.encode(r, o, n)
                        } catch (u) {
                            throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${r} failed`), u
                        }
                        try {
                            h = await this.client.core.history.get(r, e)
                        } catch (u) {
                            throw this.client.logger.error(`sendError() -> history.get(${r}, ${e}) failed`), u
                        }
                        const c = s || hy[h.request.method].res;
                        this.client.core.relayer.publish(r, a, c), await this.client.core.history.resolve(o)
                    }, this.cleanup = async () => {
                        const t = [],
                            e = [];
                        this.client.session.getAll().forEach((e => {
                            let r = !1;
                            Er(e.expiry) && (r = !0), this.client.core.crypto.keychain.has(e.topic) || (r = !0), r && t.push(e.topic)
                        })), this.client.proposal.getAll().forEach((t => {
                            Er(t.expiryTimestamp) && e.push(t.id)
                        })), await Promise.all([...t.map((t => this.deleteSession({
                            topic: t
                        }))), ...e.map((t => this.deleteProposal(t)))])
                    }, this.onRelayEventRequest = async t => {
                        this.requestQueue.queue.push(t), await this.processRequestsQueue()
                    }, this.processRequestsQueue = async () => {
                        if (this.requestQueue.state !== ly) {
                            for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;) {
                                this.requestQueue.state = ly;
                                const e = this.requestQueue.queue.shift();
                                if (e) try {
                                    await this.processRequest(e)
                                } catch (t) {
                                    this.client.logger.warn(t)
                                }
                            }
                            this.requestQueue.state = uy
                        } else this.client.logger.info("Request queue already active, skipping...")
                    }, this.processRequest = async t => {
                        const {
                            topic: e,
                            payload: r
                        } = t, i = r.method;
                        if (!this.shouldIgnorePairingRequest({
                                topic: e,
                                requestMethod: i
                            })) switch (i) {
                            case "wc_sessionPropose":
                                return await this.onSessionProposeRequest(e, r);
                            case "wc_sessionSettle":
                                return await this.onSessionSettleRequest(e, r);
                            case "wc_sessionUpdate":
                                return await this.onSessionUpdateRequest(e, r);
                            case "wc_sessionExtend":
                                return await this.onSessionExtendRequest(e, r);
                            case "wc_sessionPing":
                                return await this.onSessionPingRequest(e, r);
                            case "wc_sessionDelete":
                                return await this.onSessionDeleteRequest(e, r);
                            case "wc_sessionRequest":
                                return await this.onSessionRequest(e, r);
                            case "wc_sessionEvent":
                                return await this.onSessionEventRequest(e, r);
                            case "wc_sessionAuthenticate":
                                return await this.onSessionAuthenticateRequest(e, r);
                            default:
                                return this.client.logger.info(`Unsupported request method ${i}`)
                        }
                    }, this.onRelayEventResponse = async t => {
                        const {
                            topic: e,
                            payload: r
                        } = t, i = (await this.client.core.history.get(e, r.id)).request.method;
                        switch (i) {
                            case "wc_sessionPropose":
                                return this.onSessionProposeResponse(e, r);
                            case "wc_sessionSettle":
                                return this.onSessionSettleResponse(e, r);
                            case "wc_sessionUpdate":
                                return this.onSessionUpdateResponse(e, r);
                            case "wc_sessionExtend":
                                return this.onSessionExtendResponse(e, r);
                            case "wc_sessionPing":
                                return this.onSessionPingResponse(e, r);
                            case "wc_sessionRequest":
                                return this.onSessionRequestResponse(e, r);
                            case "wc_sessionAuthenticate":
                                return this.onSessionAuthenticateResponse(e, r);
                            default:
                                return this.client.logger.info(`Unsupported response method ${i}`)
                        }
                    }, this.onRelayEventUnknownPayload = t => {
                        const {
                            topic: e
                        } = t, {
                            message: r
                        } = ih("MISSING_OR_INVALID", `Decoded payload on topic ${e} is not identifiable as a JSON-RPC request or a response.`);
                        throw new Error(r)
                    }, this.shouldIgnorePairingRequest = t => {
                        const {
                            topic: e,
                            requestMethod: r
                        } = t, i = this.expectedPairingMethodMap.get(e);
                        return !(!i || i.includes(r)) && !!(i.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0)
                    }, this.onSessionProposeRequest = async (t, e) => {
                        const {
                            params: r,
                            id: i
                        } = e;
                        try {
                            this.isValidConnect(Ay({}, e.params));
                            const n = r.expiryTimestamp || Ar(hy.wc_sessionPropose.req.ttl),
                                s = Ay({
                                    id: i,
                                    pairingTopic: t,
                                    expiryTimestamp: n
                                }, r);
                            await this.setProposal(i, s);
                            const o = Na(JSON.stringify(e)),
                                a = await this.getVerifyContext(o, s.proposer.metadata);
                            this.client.events.emit("session_proposal", {
                                id: i,
                                params: s,
                                verifyContext: a
                            })
                        } catch (n) {
                            await this.sendError({
                                id: i,
                                topic: t,
                                error: n,
                                rpcOpts: hy.wc_sessionPropose.autoReject
                            }), this.client.logger.error(n)
                        }
                    }, this.onSessionProposeResponse = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        if (Hd(e)) {
                            const {
                                result: i
                            } = e;
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionProposeResponse",
                                result: i
                            });
                            const n = this.client.proposal.get(r);
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionProposeResponse",
                                proposal: n
                            });
                            const s = n.proposer.publicKey;
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionProposeResponse",
                                selfPublicKey: s
                            });
                            const o = i.responderPublicKey;
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionProposeResponse",
                                peerPublicKey: o
                            });
                            const a = await this.client.core.crypto.generateSharedKey(s, o);
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionProposeResponse",
                                sessionTopic: a
                            });
                            const h = await this.client.core.relayer.subscribe(a);
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionProposeResponse",
                                subscriptionId: h
                            }), await this.client.core.pairing.activate({
                                topic: t
                            })
                        } else if (Kd(e)) {
                            await this.client.proposal.delete(r, nh("USER_DISCONNECTED"));
                            const t = Sr("session_connect");
                            if (0 === this.events.listenerCount(t)) throw new Error(`emitting ${t} without any listeners, 954`);
                            this.events.emit(Sr("session_connect"), {
                                error: e.error
                            })
                        }
                    }, this.onSessionSettleRequest = async (t, e) => {
                        const {
                            id: r,
                            params: i
                        } = e;
                        try {
                            this.isValidSessionSettleRequest(i);
                            const {
                                relay: r,
                                controller: n,
                                expiry: s,
                                namespaces: o,
                                sessionProperties: a,
                                sessionConfig: h
                            } = e.params, c = Ay(Ay({
                                topic: t,
                                relay: r,
                                expiry: s,
                                namespaces: o,
                                acknowledged: !0,
                                pairingTopic: "",
                                requiredNamespaces: {},
                                optionalNamespaces: {},
                                controller: n.publicKey,
                                self: {
                                    publicKey: "",
                                    metadata: this.client.metadata
                                },
                                peer: {
                                    publicKey: n.publicKey,
                                    metadata: n.metadata
                                }
                            }, a && {
                                sessionProperties: a
                            }), h && {
                                sessionConfig: h
                            });
                            await this.sendResult({
                                id: e.id,
                                topic: t,
                                result: !0,
                                throwOnFailedPublish: !0
                            });
                            const u = Sr("session_connect");
                            if (0 === this.events.listenerCount(u)) throw new Error(`emitting ${u} without any listeners 997`);
                            this.events.emit(Sr("session_connect"), {
                                session: c
                            })
                        } catch (n) {
                            await this.sendError({
                                id: r,
                                topic: t,
                                error: n
                            }), this.client.logger.error(n)
                        }
                    }, this.onSessionSettleResponse = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        Hd(e) ? (await this.client.session.update(t, {
                            acknowledged: !0
                        }), this.events.emit(Sr("session_approve", r), {})) : Kd(e) && (await this.client.session.delete(t, nh("USER_DISCONNECTED")), this.events.emit(Sr("session_approve", r), {
                            error: e.error
                        }))
                    }, this.onSessionUpdateRequest = async (t, e) => {
                        const {
                            params: r,
                            id: i
                        } = e;
                        try {
                            const e = `${t}_session_update`,
                                s = Ph.get(e);
                            if (s && this.isRequestOutOfSync(s, i)) return this.client.logger.info(`Discarding out of sync request - ${i}`), void this.sendError({
                                id: i,
                                topic: t,
                                error: nh("INVALID_UPDATE_REQUEST")
                            });
                            this.isValidUpdate(Ay({
                                topic: t
                            }, r));
                            try {
                                Ph.set(e, i), await this.client.session.update(t, {
                                    namespaces: r.namespaces
                                }), await this.sendResult({
                                    id: i,
                                    topic: t,
                                    result: !0,
                                    throwOnFailedPublish: !0
                                })
                            } catch (n) {
                                throw Ph.delete(e), n
                            }
                            this.client.events.emit("session_update", {
                                id: i,
                                topic: t,
                                params: r
                            })
                        } catch (s) {
                            await this.sendError({
                                id: i,
                                topic: t,
                                error: s
                            }), this.client.logger.error(s)
                        }
                    }, this.isRequestOutOfSync = (t, e) => parseInt(e.toString().slice(0, -3)) <= parseInt(t.toString().slice(0, -3)), this.onSessionUpdateResponse = (t, e) => {
                        const {
                            id: r
                        } = e, i = Sr("session_update", r);
                        if (0 === this.events.listenerCount(i)) throw new Error(`emitting ${i} without any listeners`);
                        Hd(e) ? this.events.emit(Sr("session_update", r), {}) : Kd(e) && this.events.emit(Sr("session_update", r), {
                            error: e.error
                        })
                    }, this.onSessionExtendRequest = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        try {
                            this.isValidExtend({
                                topic: t
                            }), await this.setExpiry(t, Ar(ay)), await this.sendResult({
                                id: r,
                                topic: t,
                                result: !0,
                                throwOnFailedPublish: !0
                            }), this.client.events.emit("session_extend", {
                                id: r,
                                topic: t
                            })
                        } catch (Cc) {
                            await this.sendError({
                                id: r,
                                topic: t,
                                error: Cc
                            }), this.client.logger.error(Cc)
                        }
                    }, this.onSessionExtendResponse = (t, e) => {
                        const {
                            id: r
                        } = e, i = Sr("session_extend", r);
                        if (0 === this.events.listenerCount(i)) throw new Error(`emitting ${i} without any listeners`);
                        Hd(e) ? this.events.emit(Sr("session_extend", r), {}) : Kd(e) && this.events.emit(Sr("session_extend", r), {
                            error: e.error
                        })
                    }, this.onSessionPingRequest = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        try {
                            this.isValidPing({
                                topic: t
                            }), await this.sendResult({
                                id: r,
                                topic: t,
                                result: !0,
                                throwOnFailedPublish: !0
                            }), this.client.events.emit("session_ping", {
                                id: r,
                                topic: t
                            })
                        } catch (Cc) {
                            await this.sendError({
                                id: r,
                                topic: t,
                                error: Cc
                            }), this.client.logger.error(Cc)
                        }
                    }, this.onSessionPingResponse = (t, e) => {
                        const {
                            id: r
                        } = e, i = Sr("session_ping", r);
                        if (0 === this.events.listenerCount(i)) throw new Error(`emitting ${i} without any listeners`);
                        setTimeout((() => {
                            Hd(e) ? this.events.emit(Sr("session_ping", r), {}) : Kd(e) && this.events.emit(Sr("session_ping", r), {
                                error: e.error
                            })
                        }), 500)
                    }, this.onSessionDeleteRequest = async (t, e) => {
                        const {
                            id: r
                        } = e;
                        try {
                            this.isValidDisconnect({
                                topic: t,
                                reason: e.params
                            }), await Promise.all([new Promise((e => {
                                this.client.core.relayer.once(zg, (async () => {
                                    e(await this.deleteSession({
                                        topic: t,
                                        id: r
                                    }))
                                }))
                            })), this.sendResult({
                                id: r,
                                topic: t,
                                result: !0,
                                throwOnFailedPublish: !0
                            }), this.cleanupPendingSentRequestsForTopic({
                                topic: t,
                                error: nh("USER_DISCONNECTED")
                            })])
                        } catch (Cc) {
                            this.client.logger.error(Cc)
                        }
                    }, this.onSessionRequest = async (t, e) => {
                        var r;
                        const {
                            id: i,
                            params: n
                        } = e;
                        try {
                            await this.isValidRequest(Ay({
                                topic: t
                            }, n));
                            const e = Na(JSON.stringify(Cd("wc_sessionRequest", n, i))),
                                s = this.client.session.get(t),
                                o = {
                                    id: i,
                                    topic: t,
                                    params: n,
                                    verifyContext: await this.getVerifyContext(e, s.peer.metadata)
                                };
                            await this.setPendingSessionRequest(o), null != (r = this.client.signConfig) && r.disableRequestQueue ? this.emitSessionRequest(o) : (this.addSessionRequestToSessionRequestQueue(o), this.processSessionRequestQueue())
                        } catch (s) {
                            await this.sendError({
                                id: i,
                                topic: t,
                                error: s
                            }), this.client.logger.error(s)
                        }
                    }, this.onSessionRequestResponse = (t, e) => {
                        const {
                            id: r
                        } = e, i = Sr("session_request", r);
                        if (0 === this.events.listenerCount(i)) throw new Error(`emitting ${i} without any listeners`);
                        Hd(e) ? this.events.emit(Sr("session_request", r), {
                            result: e.result
                        }) : Kd(e) && this.events.emit(Sr("session_request", r), {
                            error: e.error
                        })
                    }, this.onSessionEventRequest = async (t, e) => {
                        const {
                            id: r,
                            params: i
                        } = e;
                        try {
                            const e = `${t}_session_event_${i.event.name}`,
                                n = Ph.get(e);
                            if (n && this.isRequestOutOfSync(n, r)) return void this.client.logger.info(`Discarding out of sync request - ${r}`);
                            this.isValidEmit(Ay({
                                topic: t
                            }, i)), this.client.events.emit("session_event", {
                                id: r,
                                topic: t,
                                params: i
                            }), Ph.set(e, r)
                        } catch (n) {
                            await this.sendError({
                                id: r,
                                topic: t,
                                error: n
                            }), this.client.logger.error(n)
                        }
                    }, this.onSessionAuthenticateResponse = (t, e) => {
                        const {
                            id: r
                        } = e;
                        this.client.logger.trace({
                            type: "method",
                            method: "onSessionAuthenticateResponse",
                            topic: t,
                            payload: e
                        }), Hd(e) ? this.events.emit(Sr("session_request", r), {
                            result: e.result
                        }) : Kd(e) && this.events.emit(Sr("session_request", r), {
                            error: e.error
                        })
                    }, this.onSessionAuthenticateRequest = async (t, e) => {
                        try {
                            const {
                                requester: r,
                                authPayload: i,
                                expiryTimestamp: n
                            } = e.params, s = Na(JSON.stringify(e)), o = await this.getVerifyContext(s, this.client.metadata), a = {
                                requester: r,
                                pairingTopic: t,
                                id: e.id,
                                authPayload: i,
                                verifyContext: o,
                                expiryTimestamp: n
                            };
                            await this.setAuthRequest(e.id, {
                                request: a,
                                pairingTopic: t
                            }), this.client.events.emit("session_authenticate", {
                                topic: t,
                                params: e.params,
                                id: e.id,
                                verifyContext: o
                            })
                        } catch (uc) {
                            this.client.logger.error(uc);
                            const i = e.params.requester.publicKey,
                                n = await this.client.core.crypto.generateKeyPair(),
                                s = {
                                    type: Sa,
                                    receiverPublicKey: i,
                                    senderPublicKey: n
                                };
                            await this.sendError({
                                id: e.id,
                                topic: t,
                                error: uc,
                                encodeOpts: s,
                                rpcOpts: hy.wc_sessionAuthenticate.autoReject
                            })
                        }
                    }, this.addSessionRequestToSessionRequestQueue = t => {
                        this.sessionRequestQueue.queue.push(t)
                    }, this.cleanupAfterResponse = t => {
                        this.deletePendingSessionRequest(t.response.id, {
                            message: "fulfilled",
                            code: 0
                        }), setTimeout((() => {
                            this.sessionRequestQueue.state = uy, this.processSessionRequestQueue()
                        }), (0, at.toMiliseconds)(this.requestQueueDelay))
                    }, this.cleanupPendingSentRequestsForTopic = t => {
                        let {
                            topic: e,
                            error: r
                        } = t;
                        const i = this.client.core.history.pending;
                        i.length > 0 && i.filter((t => t.topic === e && "wc_sessionRequest" === t.request.method)).forEach((t => {
                            const e = Sr("session_request", t.request.id);
                            if (0 === this.events.listenerCount(e)) throw new Error(`emitting ${e} without any listeners`);
                            this.events.emit(Sr("session_request", t.request.id), {
                                error: r
                            })
                        }))
                    }, this.processSessionRequestQueue = () => {
                        if (this.sessionRequestQueue.state === ly) return void this.client.logger.info("session request queue is already active.");
                        const t = this.sessionRequestQueue.queue[0];
                        if (t) try {
                            this.sessionRequestQueue.state = ly, this.emitSessionRequest(t)
                        } catch (e) {
                            this.client.logger.error(e)
                        } else this.client.logger.info("session request queue is empty.")
                    }, this.emitSessionRequest = t => {
                        this.client.events.emit("session_request", t)
                    }, this.onPairingCreated = t => {
                        if (t.methods && this.expectedPairingMethodMap.set(t.topic, t.methods), t.active) return;
                        const e = this.client.proposal.getAll().find((e => e.pairingTopic === t.topic));
                        e && this.onSessionProposeRequest(t.topic, Cd("wc_sessionPropose", {
                            requiredNamespaces: e.requiredNamespaces,
                            optionalNamespaces: e.optionalNamespaces,
                            relays: e.relays,
                            proposer: e.proposer,
                            sessionProperties: e.sessionProperties
                        }, e.id))
                    }, this.isValidConnect = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(t)}`);
                            throw new Error(e)
                        }
                        const {
                            pairingTopic: e,
                            requiredNamespaces: r,
                            optionalNamespaces: i,
                            sessionProperties: n,
                            relays: s
                        } = t;
                        if (ah(e) || await this.isValidPairingTopic(e), ! function(t, e) {
                                let r = !1;
                                return e && !t ? r = !0 : t && sh(t) && t.length && t.forEach((t => {
                                    r = mh(t)
                                })), r
                            }(s, !0)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `connect() relays: ${s}`);
                            throw new Error(t)
                        }!ah(r) && 0 !== oh(r) && this.validateNamespaces(r, "requiredNamespaces"), !ah(i) && 0 !== oh(i) && this.validateNamespaces(i, "optionalNamespaces"), ah(n) || this.validateSessionProps(n, "sessionProperties")
                    }, this.validateNamespaces = (t, e) => {
                        const r = function(t, e, r) {
                            let i = null;
                            if (t && oh(t)) {
                                const n = ph(t, e);
                                n && (i = n);
                                const s = fh(t, e, r);
                                s && (i = s)
                            } else i = ih("MISSING_OR_INVALID", `${e}, ${r} should be an object with data`);
                            return i
                        }(t, "connect()", e);
                        if (r) throw new Error(r.message)
                    }, this.isValidApprove = async t => {
                        if (!yh(t)) throw new Error(ih("MISSING_OR_INVALID", `approve() params: ${t}`).message);
                        const {
                            id: e,
                            namespaces: r,
                            relayProtocol: i,
                            sessionProperties: n
                        } = t;
                        this.checkRecentlyDeleted(e), await this.isValidProposalId(e);
                        const s = this.client.proposal.get(e),
                            o = gh(r, "approve()");
                        if (o) throw new Error(o.message);
                        const a = _h(s.requiredNamespaces, r, "approve()");
                        if (a) throw new Error(a.message);
                        if (!hh(i, !0)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `approve() relayProtocol: ${i}`);
                            throw new Error(t)
                        }
                        ah(n) || this.validateSessionProps(n, "sessionProperties")
                    }, this.isValidReject = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `reject() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            id: e,
                            reason: r
                        } = t;
                        if (this.checkRecentlyDeleted(e), await this.isValidProposalId(e), ! function(t) {
                                return !(!t || "object" != typeof t || !t.code || !ch(t.code, !1) || !t.message || !hh(t.message, !1))
                            }(r)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(r)}`);
                            throw new Error(t)
                        }
                    }, this.isValidSessionSettleRequest = t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            relay: e,
                            controller: r,
                            namespaces: i,
                            expiry: n
                        } = t;
                        if (!mh(e)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
                            throw new Error(t)
                        }
                        const s = function(t, e) {
                            let r = null;
                            return hh(t ? .publicKey, !1) || (r = ih("MISSING_OR_INVALID", `${e} controller public key should be a string`)), r
                        }(r, "onSessionSettleRequest()");
                        if (s) throw new Error(s.message);
                        const o = gh(i, "onSessionSettleRequest()");
                        if (o) throw new Error(o.message);
                        if (Er(n)) {
                            const {
                                message: t
                            } = ih("EXPIRED", "onSessionSettleRequest()");
                            throw new Error(t)
                        }
                    }, this.isValidUpdate = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `update() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e,
                            namespaces: r
                        } = t;
                        this.checkRecentlyDeleted(e), await this.isValidSessionTopic(e);
                        const i = this.client.session.get(e),
                            n = gh(r, "update()");
                        if (n) throw new Error(n.message);
                        const s = _h(i.requiredNamespaces, r, "update()");
                        if (s) throw new Error(s.message)
                    }, this.isValidExtend = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `extend() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e
                        } = t;
                        this.checkRecentlyDeleted(e), await this.isValidSessionTopic(e)
                    }, this.isValidRequest = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `request() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e,
                            request: r,
                            chainId: i,
                            expiry: n
                        } = t;
                        this.checkRecentlyDeleted(e), await this.isValidSessionTopic(e);
                        const {
                            namespaces: s
                        } = this.client.session.get(e);
                        if (!vh(s, i)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `request() chainId: ${i}`);
                            throw new Error(t)
                        }
                        if (! function(t) {
                                return !(ah(t) || !hh(t.method, !1))
                            }(r)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `request() ${JSON.stringify(r)}`);
                            throw new Error(t)
                        }
                        if (!wh(s, i, r.method)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `request() method: ${r.method}`);
                            throw new Error(t)
                        }
                        if (n && ! function(t, e) {
                                return ch(t, !1) && t <= e.max && t >= e.min
                            }(n, cy)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `request() expiry: ${n}. Expiry must be a number (in seconds) between ${cy.min} and ${cy.max}`);
                            throw new Error(t)
                        }
                    }, this.isValidRespond = async t => {
                        var e;
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `respond() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: r,
                            response: i
                        } = t;
                        try {
                            await this.isValidSessionTopic(r)
                        } catch (n) {
                            throw null != (e = t ? .response) && e.id && this.cleanupAfterResponse(t), n
                        }
                        if (! function(t) {
                                return !(ah(t) || ah(t.result) && ah(t.error) || !ch(t.id, !1) || !hh(t.jsonrpc, !1))
                            }(i)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(i)}`);
                            throw new Error(t)
                        }
                    }, this.isValidPing = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `ping() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e
                        } = t;
                        await this.isValidSessionOrPairingTopic(e)
                    }, this.isValidEmit = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `emit() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e,
                            event: r,
                            chainId: i
                        } = t;
                        await this.isValidSessionTopic(e);
                        const {
                            namespaces: n
                        } = this.client.session.get(e);
                        if (!vh(n, i)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `emit() chainId: ${i}`);
                            throw new Error(t)
                        }
                        if (! function(t) {
                                return !(ah(t) || !hh(t.name, !1))
                            }(r)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(r)}`);
                            throw new Error(t)
                        }
                        if (!bh(n, i, r.name)) {
                            const {
                                message: t
                            } = ih("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(r)}`);
                            throw new Error(t)
                        }
                    }, this.isValidDisconnect = async t => {
                        if (!yh(t)) {
                            const {
                                message: e
                            } = ih("MISSING_OR_INVALID", `disconnect() params: ${t}`);
                            throw new Error(e)
                        }
                        const {
                            topic: e
                        } = t;
                        await this.isValidSessionOrPairingTopic(e)
                    }, this.isValidAuthenticate = t => {
                        const {
                            chains: e,
                            uri: r,
                            domain: i,
                            nonce: n
                        } = t;
                        if (!Array.isArray(e) || 0 === e.length) throw new Error("chains is required and must be a non-empty array");
                        if (!hh(r, !1)) throw new Error("uri is required parameter");
                        if (!hh(i, !1)) throw new Error("domain is required parameter");
                        if (!hh(n, !1)) throw new Error("nonce is required parameter");
                        if ([...new Set(e.map((t => Je(t).namespace)))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
                        const {
                            namespace: s
                        } = Je(e[0]);
                        if ("eip155" !== s) throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.")
                    }, this.getVerifyContext = async (t, e) => {
                        const r = {
                            verified: {
                                verifyUrl: e.verifyUrl || fm,
                                validation: "UNKNOWN",
                                origin: e.url || ""
                            }
                        };
                        try {
                            const i = await this.client.core.verify.resolve({
                                attestationId: t,
                                verifyUrl: e.verifyUrl
                            });
                            i && (r.verified.origin = i.origin, r.verified.isScam = i.isScam, r.verified.validation = i.origin === new URL(e.url).origin ? "VALID" : "INVALID")
                        } catch (Cc) {
                            this.client.logger.info(Cc)
                        }
                        return this.client.logger.info(`Verify context: ${JSON.stringify(r)}`), r
                    }, this.validateSessionProps = (t, e) => {
                        Object.values(t).forEach((t => {
                            if (!hh(t, !1)) {
                                const {
                                    message: r
                                } = ih("MISSING_OR_INVALID", `${e} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);
                                throw new Error(r)
                            }
                        }))
                    }, this.getPendingAuthRequest = t => {
                        const e = this.client.auth.requests.get(t);
                        return "object" == typeof e ? e : void 0
                    }, this.addToRecentlyDeleted = (t, e) => {
                        if (this.recentlyDeletedMap.set(t, e), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
                            let t = 0;
                            const e = this.recentlyDeletedLimit / 2;
                            for (const r of this.recentlyDeletedMap.keys()) {
                                if (t++ >= e) break;
                                this.recentlyDeletedMap.delete(r)
                            }
                        }
                    }, this.checkRecentlyDeleted = t => {
                        const e = this.recentlyDeletedMap.get(t);
                        if (e) {
                            const {
                                message: r
                            } = ih("MISSING_OR_INVALID", `Record was recently deleted - ${e}: ${t}`);
                            throw new Error(r)
                        }
                    }
                }
                async isInitialized() {
                    if (!this.initialized) {
                        const {
                            message: t
                        } = ih("NOT_INITIALIZED", this.name);
                        throw new Error(t)
                    }
                    await this.client.core.relayer.confirmOnlineStateOrThrow()
                }
                registerRelayerEvents() {
                    this.client.core.relayer.on(Dg, (t => {
                        !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(t) : this.onRelayMessage(t)
                    }))
                }
                async onRelayMessage(t) {
                    const {
                        topic: e,
                        message: r
                    } = t, {
                        publicKey: i
                    } = this.client.auth.authKeys.keys.includes(py) ? this.client.auth.authKeys.get(py) : {
                        responseTopic: void 0,
                        publicKey: void 0
                    }, n = await this.client.core.crypto.decode(e, r, {
                        receiverPublicKey: i
                    });
                    try {
                        zd(n) ? (this.client.core.history.set(e, n), this.onRelayEventRequest({
                            topic: e,
                            payload: n
                        })) : Fd(n) ? (await this.client.core.history.resolve(n), await this.onRelayEventResponse({
                            topic: e,
                            payload: n
                        }), this.client.core.history.delete(e, n.id)) : this.onRelayEventUnknownPayload({
                            topic: e,
                            payload: n
                        })
                    } catch (s) {
                        this.client.logger.error(s)
                    }
                }
                registerExpirerEvents() {
                    this.client.core.expirer.on(hm, (async t => {
                        const {
                            topic: e,
                            id: r
                        } = _r(t.target);
                        return r && this.client.pendingRequest.keys.includes(r) ? await this.deletePendingSessionRequest(r, ih("EXPIRED"), !0) : r && this.client.auth.requests.keys.includes(r) ? await this.deletePendingAuthRequest(r, ih("EXPIRED"), !0) : void(e ? this.client.session.keys.includes(e) && (await this.deleteSession({
                            topic: e,
                            expirerHasDeleted: !0
                        }), this.client.events.emit("session_expire", {
                            topic: e
                        })) : r && (await this.deleteProposal(r, !0), this.client.events.emit("proposal_expire", {
                            id: r
                        })))
                    }))
                }
                registerPairingEvents() {
                    this.client.core.pairing.events.on(Xg, (t => this.onPairingCreated(t))), this.client.core.pairing.events.on(tm, (t => {
                        this.addToRecentlyDeleted(t.topic, "pairing")
                    }))
                }
                isValidPairingTopic(t) {
                    if (!hh(t, !1)) {
                        const {
                            message: e
                        } = ih("MISSING_OR_INVALID", `pairing topic should be a string: ${t}`);
                        throw new Error(e)
                    }
                    if (!this.client.core.pairing.pairings.keys.includes(t)) {
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `pairing topic doesn't exist: ${t}`);
                        throw new Error(e)
                    }
                    if (Er(this.client.core.pairing.pairings.get(t).expiry)) {
                        const {
                            message: e
                        } = ih("EXPIRED", `pairing topic: ${t}`);
                        throw new Error(e)
                    }
                }
                async isValidSessionTopic(t) {
                    if (!hh(t, !1)) {
                        const {
                            message: e
                        } = ih("MISSING_OR_INVALID", `session topic should be a string: ${t}`);
                        throw new Error(e)
                    }
                    if (this.checkRecentlyDeleted(t), !this.client.session.keys.includes(t)) {
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `session topic doesn't exist: ${t}`);
                        throw new Error(e)
                    }
                    if (Er(this.client.session.get(t).expiry)) {
                        await this.deleteSession({
                            topic: t
                        });
                        const {
                            message: e
                        } = ih("EXPIRED", `session topic: ${t}`);
                        throw new Error(e)
                    }
                    if (!this.client.core.crypto.keychain.has(t)) {
                        const {
                            message: e
                        } = ih("MISSING_OR_INVALID", `session topic does not exist in keychain: ${t}`);
                        throw await this.deleteSession({
                            topic: t
                        }), new Error(e)
                    }
                }
                async isValidSessionOrPairingTopic(t) {
                    if (this.checkRecentlyDeleted(t), this.client.session.keys.includes(t)) await this.isValidSessionTopic(t);
                    else {
                        if (!this.client.core.pairing.pairings.keys.includes(t)) {
                            if (hh(t, !1)) {
                                const {
                                    message: e
                                } = ih("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${t}`);
                                throw new Error(e)
                            } {
                                const {
                                    message: e
                                } = ih("MISSING_OR_INVALID", `session or pairing topic should be a string: ${t}`);
                                throw new Error(e)
                            }
                        }
                        this.isValidPairingTopic(t)
                    }
                }
                async isValidProposalId(t) {
                    if (! function(t) {
                            return "number" == typeof t
                        }(t)) {
                        const {
                            message: e
                        } = ih("MISSING_OR_INVALID", `proposal id should be a number: ${t}`);
                        throw new Error(e)
                    }
                    if (!this.client.proposal.keys.includes(t)) {
                        const {
                            message: e
                        } = ih("NO_MATCHING_KEY", `proposal id doesn't exist: ${t}`);
                        throw new Error(e)
                    }
                    if (Er(this.client.proposal.get(t).expiryTimestamp)) {
                        await this.deleteProposal(t);
                        const {
                            message: e
                        } = ih("EXPIRED", `proposal id: ${t}`);
                        throw new Error(e)
                    }
                }
            }
            class Iy extends zm {
                constructor(t, e) {
                    super(t, e, "proposal", ry), this.core = t, this.logger = e
                }
            }
            class Py extends zm {
                constructor(t, e) {
                    super(t, e, "session", ry), this.core = t, this.logger = e
                }
            }
            class My extends zm {
                constructor(t, e) {
                    super(t, e, "request", ry, (t => t.id)), this.core = t, this.logger = e
                }
            }
            class xy extends zm {
                constructor(t, e) {
                    super(t, e, "authKeys", dy, (() => py)), this.core = t, this.logger = e
                }
            }
            class Oy extends zm {
                constructor(t, e) {
                    super(t, e, "pairingTopics", dy), this.core = t, this.logger = e
                }
            }
            class Cy extends zm {
                constructor(t, e) {
                    super(t, e, "requests", dy, (t => t.id)), this.core = t, this.logger = e
                }
            }
            class Ny {
                constructor(t, e) {
                    this.core = t, this.logger = e, this.authKeys = new xy(this.core, this.logger), this.pairingTopics = new Oy(this.core, this.logger), this.requests = new Cy(this.core, this.logger)
                }
                async init() {
                    await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init()
                }
            }
            class Ry extends $c {
                constructor(t) {
                    super(t), this.protocol = "wc", this.version = 2, this.name = iy, this.events = new V.EventEmitter, this.on = (t, e) => this.events.on(t, e), this.once = (t, e) => this.events.once(t, e), this.off = (t, e) => this.events.off(t, e), this.removeListener = (t, e) => this.events.removeListener(t, e), this.removeAllListeners = t => this.events.removeAllListeners(t), this.connect = async t => {
                        try {
                            return await this.engine.connect(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.pair = async t => {
                        try {
                            return await this.engine.pair(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.approve = async t => {
                        try {
                            return await this.engine.approve(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.reject = async t => {
                        try {
                            return await this.engine.reject(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.update = async t => {
                        try {
                            return await this.engine.update(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.extend = async t => {
                        try {
                            return await this.engine.extend(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.request = async t => {
                        try {
                            return await this.engine.request(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.respond = async t => {
                        try {
                            return await this.engine.respond(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.ping = async t => {
                        try {
                            return await this.engine.ping(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.emit = async t => {
                        try {
                            return await this.engine.emit(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.disconnect = async t => {
                        try {
                            return await this.engine.disconnect(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.find = t => {
                        try {
                            return this.engine.find(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.getPendingSessionRequests = () => {
                        try {
                            return this.engine.getPendingSessionRequests()
                        } catch (t) {
                            throw this.logger.error(t.message), t
                        }
                    }, this.authenticate = async t => {
                        try {
                            return await this.engine.authenticate(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.formatAuthMessage = t => {
                        try {
                            return this.engine.formatAuthMessage(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.approveSessionAuthenticate = async t => {
                        try {
                            return await this.engine.approveSessionAuthenticate(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.rejectSessionAuthenticate = async t => {
                        try {
                            return await this.engine.rejectSessionAuthenticate(t)
                        } catch (uc) {
                            throw this.logger.error(uc.message), uc
                        }
                    }, this.name = t ? .name || iy, this.metadata = t ? .metadata || (0, ct.g)() || {
                        name: "",
                        description: "",
                        url: "",
                        icons: [""]
                    }, this.signConfig = t ? .signConfig;
                    const e = typeof t ? .logger < "u" && "string" != typeof t ? .logger ? t.logger : pc()(Rc({
                        level: t ? .logger || ny
                    }));
                    this.core = t ? .core || new ty(t), this.logger = Uc(e, this.name), this.session = new Py(this.core, this.logger), this.proposal = new Iy(this.core, this.logger), this.pendingRequest = new My(this.core, this.logger), this.engine = new Sy(this), this.auth = new Ny(this.core, this.logger)
                }
                static async init(t) {
                    const e = new Ry(t);
                    return await e.initialize(), e
                }
                get context() {
                    return Tc(this.logger)
                }
                get pairing() {
                    return this.core.pairing.pairings
                }
                async initialize() {
                    this.logger.trace("Initialized");
                    try {
                        await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), await this.auth.init(), this.core.verify.init({
                            verifyUrl: this.metadata.verifyUrl
                        }), this.logger.info("SignClient Initialization Success"), this.engine.processRelayMessageCache()
                    } catch (t) {
                        throw this.logger.info("SignClient Initialization Failure"), this.logger.error(t.message), t
                    }
                }
            }
            var Ty = r(3200),
                Uy = r.n(Ty),
                Dy = Object.defineProperty,
                ky = Object.defineProperties,
                By = Object.getOwnPropertyDescriptors,
                Ly = Object.getOwnPropertySymbols,
                qy = Object.prototype.hasOwnProperty,
                jy = Object.prototype.propertyIsEnumerable,
                zy = (t, e, r) => e in t ? Dy(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Fy = (t, e) => {
                    for (var r in e || (e = {})) qy.call(e, r) && zy(t, r, e[r]);
                    if (Ly)
                        for (var r of Ly(e)) jy.call(e, r) && zy(t, r, e[r]);
                    return t
                },
                Hy = (t, e) => ky(t, By(e));
            const Ky = {
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                method: "POST"
            };
            class Vy {
                constructor(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (this.url = t, this.disableProviderPing = e, this.events = new V.EventEmitter, this.isAvailable = !1, this.registering = !1, !Ld(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);
                    this.url = t, this.disableProviderPing = e
                }
                get connected() {
                    return this.isAvailable
                }
                get connecting() {
                    return this.registering
                }
                on(t, e) {
                    this.events.on(t, e)
                }
                once(t, e) {
                    this.events.once(t, e)
                }
                off(t, e) {
                    this.events.off(t, e)
                }
                removeListener(t, e) {
                    this.events.removeListener(t, e)
                }
                async open() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.url;
                    await this.register(t)
                }
                async close() {
                    if (!this.isAvailable) throw new Error("Connection already closed");
                    this.onClose()
                }
                async send(t) {
                    this.isAvailable || await this.register();
                    try {
                        const e = Zh(t),
                            r = await (await Uy()(this.url, Hy(Fy({}, Ky), {
                                body: e
                            }))).json();
                        this.onPayload({
                            data: r
                        })
                    } catch (e) {
                        this.onError(t.id, e)
                    }
                }
                async register() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.url;
                    if (!Ld(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);
                    if (this.registering) {
                        const t = this.events.getMaxListeners();
                        return (this.events.listenerCount("register_error") >= t || this.events.listenerCount("open") >= t) && this.events.setMaxListeners(t + 1), new Promise(((t, e) => {
                            this.events.once("register_error", (t => {
                                this.resetMaxListeners(), e(t)
                            })), this.events.once("open", (() => {
                                if (this.resetMaxListeners(), typeof this.isAvailable > "u") return e(new Error("HTTP connection is missing or invalid"));
                                t()
                            }))
                        }))
                    }
                    this.url = t, this.registering = !0;
                    try {
                        if (!this.disableProviderPing) {
                            const e = Zh({
                                id: 1,
                                jsonrpc: "2.0",
                                method: "test",
                                params: []
                            });
                            await Uy()(t, Hy(Fy({}, Ky), {
                                body: e
                            }))
                        }
                        this.onOpen()
                    } catch (e) {
                        const t = this.parseError(e);
                        throw this.events.emit("register_error", t), this.onClose(), t
                    }
                }
                onOpen() {
                    this.isAvailable = !0, this.registering = !1, this.events.emit("open")
                }
                onClose() {
                    this.isAvailable = !1, this.registering = !1, this.events.emit("close")
                }
                onPayload(t) {
                    if (typeof t.data > "u") return;
                    const e = "string" == typeof t.data ? Xh(t.data) : t.data;
                    this.events.emit("payload", e)
                }
                onError(t, e) {
                    const r = this.parseError(e),
                        i = Rd(t, r.message || r.toString());
                    this.events.emit("payload", i)
                }
                parseError(t) {
                    return Pd(t, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.url, "HTTP")
                }
                resetMaxListeners() {
                    this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10)
                }
            }
            const $y = "error",
                Wy = "wc@2:universal_provider:",
                Gy = "generic",
                Qy = "default_chain_changed";
            var Yy = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof r.g < "u" ? r.g : typeof self < "u" ? self : {},
                Jy = {
                    exports: {}
                };
            ! function(t, e) {
                (function() {
                    var r, i = "Expected a function",
                        n = "__lodash_hash_undefined__",
                        s = "__lodash_placeholder__",
                        o = 16,
                        a = 32,
                        h = 64,
                        c = 128,
                        u = 256,
                        l = 1 / 0,
                        f = 9007199254740991,
                        d = NaN,
                        p = 4294967295,
                        g = p - 1,
                        m = p >>> 1,
                        y = [
                            ["ary", c],
                            ["bind", 1],
                            ["bindKey", 2],
                            ["curry", 8],
                            ["curryRight", o],
                            ["flip", 512],
                            ["partial", a],
                            ["partialRight", h],
                            ["rearg", u]
                        ],
                        v = "[object Arguments]",
                        w = "[object Array]",
                        b = "[object Boolean]",
                        _ = "[object Date]",
                        A = "[object Error]",
                        E = "[object Function]",
                        S = "[object GeneratorFunction]",
                        I = "[object Map]",
                        P = "[object Number]",
                        M = "[object Object]",
                        x = "[object Promise]",
                        O = "[object RegExp]",
                        C = "[object Set]",
                        N = "[object String]",
                        R = "[object Symbol]",
                        T = "[object WeakMap]",
                        U = "[object ArrayBuffer]",
                        D = "[object DataView]",
                        k = "[object Float32Array]",
                        B = "[object Float64Array]",
                        L = "[object Int8Array]",
                        q = "[object Int16Array]",
                        j = "[object Int32Array]",
                        z = "[object Uint8Array]",
                        F = "[object Uint8ClampedArray]",
                        H = "[object Uint16Array]",
                        K = "[object Uint32Array]",
                        V = /\b__p \+= '';/g,
                        $ = /\b(__p \+=) '' \+/g,
                        W = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                        G = /&(?:amp|lt|gt|quot|#39);/g,
                        Q = /[&<>"']/g,
                        Y = RegExp(G.source),
                        J = RegExp(Q.source),
                        X = /<%-([\s\S]+?)%>/g,
                        Z = /<%([\s\S]+?)%>/g,
                        tt = /<%=([\s\S]+?)%>/g,
                        et = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                        rt = /^\w*$/,
                        it = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                        nt = /[\\^$.*+?()[\]{}|]/g,
                        st = RegExp(nt.source),
                        ot = /^\s+/,
                        at = /\s/,
                        ht = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                        ct = /\{\n\/\* \[wrapped with (.+)\] \*/,
                        ut = /,? & /,
                        lt = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                        ft = /[()=,{}\[\]\/\s]/,
                        dt = /\\(\\)?/g,
                        pt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                        gt = /\w*$/,
                        mt = /^[-+]0x[0-9a-f]+$/i,
                        yt = /^0b[01]+$/i,
                        vt = /^\[object .+?Constructor\]$/,
                        wt = /^0o[0-7]+$/i,
                        bt = /^(?:0|[1-9]\d*)$/,
                        _t = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                        At = /($^)/,
                        Et = /['\n\r\u2028\u2029\\]/g,
                        St = "\\ud800-\\udfff",
                        It = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                        Pt = "\\u2700-\\u27bf",
                        Mt = "a-z\\xdf-\\xf6\\xf8-\\xff",
                        xt = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                        Ot = "\\ufe0e\\ufe0f",
                        Ct = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                        Nt = "['\u2019]",
                        Rt = "[" + St + "]",
                        Tt = "[" + Ct + "]",
                        Ut = "[" + It + "]",
                        Dt = "\\d+",
                        kt = "[" + Pt + "]",
                        Bt = "[" + Mt + "]",
                        Lt = "[^" + St + Ct + Dt + Pt + Mt + xt + "]",
                        qt = "\\ud83c[\\udffb-\\udfff]",
                        jt = "[^" + St + "]",
                        zt = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                        Ft = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                        Ht = "[" + xt + "]",
                        Kt = "\\u200d",
                        Vt = "(?:" + Bt + "|" + Lt + ")",
                        $t = "(?:" + Ht + "|" + Lt + ")",
                        Wt = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?",
                        Gt = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",
                        Qt = "(?:" + Ut + "|" + qt + ")" + "?",
                        Yt = "[" + Ot + "]?",
                        Jt = Yt + Qt + ("(?:" + Kt + "(?:" + [jt, zt, Ft].join("|") + ")" + Yt + Qt + ")*"),
                        Xt = "(?:" + [kt, zt, Ft].join("|") + ")" + Jt,
                        Zt = "(?:" + [jt + Ut + "?", Ut, zt, Ft, Rt].join("|") + ")",
                        te = RegExp(Nt, "g"),
                        ee = RegExp(Ut, "g"),
                        re = RegExp(qt + "(?=" + qt + ")|" + Zt + Jt, "g"),
                        ie = RegExp([Ht + "?" + Bt + "+" + Wt + "(?=" + [Tt, Ht, "$"].join("|") + ")", $t + "+" + Gt + "(?=" + [Tt, Ht + Vt, "$"].join("|") + ")", Ht + "?" + Vt + "+" + Wt, Ht + "+" + Gt, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Dt, Xt].join("|"), "g"),
                        ne = RegExp("[" + Kt + St + It + Ot + "]"),
                        se = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                        oe = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                        ae = -1,
                        he = {};
                    he[k] = he[B] = he[L] = he[q] = he[j] = he[z] = he[F] = he[H] = he[K] = !0, he[v] = he[w] = he[U] = he[b] = he[D] = he[_] = he[A] = he[E] = he[I] = he[P] = he[M] = he[O] = he[C] = he[N] = he[T] = !1;
                    var ce = {};
                    ce[v] = ce[w] = ce[U] = ce[D] = ce[b] = ce[_] = ce[k] = ce[B] = ce[L] = ce[q] = ce[j] = ce[I] = ce[P] = ce[M] = ce[O] = ce[C] = ce[N] = ce[R] = ce[z] = ce[F] = ce[H] = ce[K] = !0, ce[A] = ce[E] = ce[T] = !1;
                    var ue = {
                            "\\": "\\",
                            "'": "'",
                            "\n": "n",
                            "\r": "r",
                            "\u2028": "u2028",
                            "\u2029": "u2029"
                        },
                        le = parseFloat,
                        fe = parseInt,
                        de = "object" == typeof Yy && Yy && Yy.Object === Object && Yy,
                        pe = "object" == typeof self && self && self.Object === Object && self,
                        ge = de || pe || Function("return this")(),
                        me = e && !e.nodeType && e,
                        ye = me && t && !t.nodeType && t,
                        ve = ye && ye.exports === me,
                        we = ve && de.process,
                        be = function() {
                            try {
                                return ye && ye.require && ye.require("util").types || we && we.binding && we.binding("util")
                            } catch {}
                        }(),
                        _e = be && be.isArrayBuffer,
                        Ae = be && be.isDate,
                        Ee = be && be.isMap,
                        Se = be && be.isRegExp,
                        Ie = be && be.isSet,
                        Pe = be && be.isTypedArray;

                    function Me(t, e, r) {
                        switch (r.length) {
                            case 0:
                                return t.call(e);
                            case 1:
                                return t.call(e, r[0]);
                            case 2:
                                return t.call(e, r[0], r[1]);
                            case 3:
                                return t.call(e, r[0], r[1], r[2])
                        }
                        return t.apply(e, r)
                    }

                    function xe(t, e, r, i) {
                        for (var n = -1, s = null == t ? 0 : t.length; ++n < s;) {
                            var o = t[n];
                            e(i, o, r(o), t)
                        }
                        return i
                    }

                    function Oe(t, e) {
                        for (var r = -1, i = null == t ? 0 : t.length; ++r < i && !1 !== e(t[r], r, t););
                        return t
                    }

                    function Ce(t, e) {
                        for (var r = null == t ? 0 : t.length; r-- && !1 !== e(t[r], r, t););
                        return t
                    }

                    function Ne(t, e) {
                        for (var r = -1, i = null == t ? 0 : t.length; ++r < i;)
                            if (!e(t[r], r, t)) return !1;
                        return !0
                    }

                    function Re(t, e) {
                        for (var r = -1, i = null == t ? 0 : t.length, n = 0, s = []; ++r < i;) {
                            var o = t[r];
                            e(o, r, t) && (s[n++] = o)
                        }
                        return s
                    }

                    function Te(t, e) {
                        return !!(null == t ? 0 : t.length) && He(t, e, 0) > -1
                    }

                    function Ue(t, e, r) {
                        for (var i = -1, n = null == t ? 0 : t.length; ++i < n;)
                            if (r(e, t[i])) return !0;
                        return !1
                    }

                    function De(t, e) {
                        for (var r = -1, i = null == t ? 0 : t.length, n = Array(i); ++r < i;) n[r] = e(t[r], r, t);
                        return n
                    }

                    function ke(t, e) {
                        for (var r = -1, i = e.length, n = t.length; ++r < i;) t[n + r] = e[r];
                        return t
                    }

                    function Be(t, e, r, i) {
                        var n = -1,
                            s = null == t ? 0 : t.length;
                        for (i && s && (r = t[++n]); ++n < s;) r = e(r, t[n], n, t);
                        return r
                    }

                    function Le(t, e, r, i) {
                        var n = null == t ? 0 : t.length;
                        for (i && n && (r = t[--n]); n--;) r = e(r, t[n], n, t);
                        return r
                    }

                    function qe(t, e) {
                        for (var r = -1, i = null == t ? 0 : t.length; ++r < i;)
                            if (e(t[r], r, t)) return !0;
                        return !1
                    }
                    var je = We("length");

                    function ze(t, e, r) {
                        var i;
                        return r(t, (function(t, r, n) {
                            if (e(t, r, n)) return i = r, !1
                        })), i
                    }

                    function Fe(t, e, r, i) {
                        for (var n = t.length, s = r + (i ? 1 : -1); i ? s-- : ++s < n;)
                            if (e(t[s], s, t)) return s;
                        return -1
                    }

                    function He(t, e, r) {
                        return e === e ? function(t, e, r) {
                            for (var i = r - 1, n = t.length; ++i < n;)
                                if (t[i] === e) return i;
                            return -1
                        }(t, e, r) : Fe(t, Ve, r)
                    }

                    function Ke(t, e, r, i) {
                        for (var n = r - 1, s = t.length; ++n < s;)
                            if (i(t[n], e)) return n;
                        return -1
                    }

                    function Ve(t) {
                        return t !== t
                    }

                    function $e(t, e) {
                        var r = null == t ? 0 : t.length;
                        return r ? Ye(t, e) / r : d
                    }

                    function We(t) {
                        return function(e) {
                            return null == e ? r : e[t]
                        }
                    }

                    function Ge(t) {
                        return function(e) {
                            return null == t ? r : t[e]
                        }
                    }

                    function Qe(t, e, r, i, n) {
                        return n(t, (function(t, n, s) {
                            r = i ? (i = !1, t) : e(r, t, n, s)
                        })), r
                    }

                    function Ye(t, e) {
                        for (var i, n = -1, s = t.length; ++n < s;) {
                            var o = e(t[n]);
                            o !== r && (i = i === r ? o : i + o)
                        }
                        return i
                    }

                    function Je(t, e) {
                        for (var r = -1, i = Array(t); ++r < t;) i[r] = e(r);
                        return i
                    }

                    function Xe(t) {
                        return t && t.slice(0, pr(t) + 1).replace(ot, "")
                    }

                    function Ze(t) {
                        return function(e) {
                            return t(e)
                        }
                    }

                    function tr(t, e) {
                        return De(e, (function(e) {
                            return t[e]
                        }))
                    }

                    function er(t, e) {
                        return t.has(e)
                    }

                    function rr(t, e) {
                        for (var r = -1, i = t.length; ++r < i && He(e, t[r], 0) > -1;);
                        return r
                    }

                    function ir(t, e) {
                        for (var r = t.length; r-- && He(e, t[r], 0) > -1;);
                        return r
                    }
                    var nr = Ge({
                            "\xc0": "A",
                            "\xc1": "A",
                            "\xc2": "A",
                            "\xc3": "A",
                            "\xc4": "A",
                            "\xc5": "A",
                            "\xe0": "a",
                            "\xe1": "a",
                            "\xe2": "a",
                            "\xe3": "a",
                            "\xe4": "a",
                            "\xe5": "a",
                            "\xc7": "C",
                            "\xe7": "c",
                            "\xd0": "D",
                            "\xf0": "d",
                            "\xc8": "E",
                            "\xc9": "E",
                            "\xca": "E",
                            "\xcb": "E",
                            "\xe8": "e",
                            "\xe9": "e",
                            "\xea": "e",
                            "\xeb": "e",
                            "\xcc": "I",
                            "\xcd": "I",
                            "\xce": "I",
                            "\xcf": "I",
                            "\xec": "i",
                            "\xed": "i",
                            "\xee": "i",
                            "\xef": "i",
                            "\xd1": "N",
                            "\xf1": "n",
                            "\xd2": "O",
                            "\xd3": "O",
                            "\xd4": "O",
                            "\xd5": "O",
                            "\xd6": "O",
                            "\xd8": "O",
                            "\xf2": "o",
                            "\xf3": "o",
                            "\xf4": "o",
                            "\xf5": "o",
                            "\xf6": "o",
                            "\xf8": "o",
                            "\xd9": "U",
                            "\xda": "U",
                            "\xdb": "U",
                            "\xdc": "U",
                            "\xf9": "u",
                            "\xfa": "u",
                            "\xfb": "u",
                            "\xfc": "u",
                            "\xdd": "Y",
                            "\xfd": "y",
                            "\xff": "y",
                            "\xc6": "Ae",
                            "\xe6": "ae",
                            "\xde": "Th",
                            "\xfe": "th",
                            "\xdf": "ss",
                            "\u0100": "A",
                            "\u0102": "A",
                            "\u0104": "A",
                            "\u0101": "a",
                            "\u0103": "a",
                            "\u0105": "a",
                            "\u0106": "C",
                            "\u0108": "C",
                            "\u010a": "C",
                            "\u010c": "C",
                            "\u0107": "c",
                            "\u0109": "c",
                            "\u010b": "c",
                            "\u010d": "c",
                            "\u010e": "D",
                            "\u0110": "D",
                            "\u010f": "d",
                            "\u0111": "d",
                            "\u0112": "E",
                            "\u0114": "E",
                            "\u0116": "E",
                            "\u0118": "E",
                            "\u011a": "E",
                            "\u0113": "e",
                            "\u0115": "e",
                            "\u0117": "e",
                            "\u0119": "e",
                            "\u011b": "e",
                            "\u011c": "G",
                            "\u011e": "G",
                            "\u0120": "G",
                            "\u0122": "G",
                            "\u011d": "g",
                            "\u011f": "g",
                            "\u0121": "g",
                            "\u0123": "g",
                            "\u0124": "H",
                            "\u0126": "H",
                            "\u0125": "h",
                            "\u0127": "h",
                            "\u0128": "I",
                            "\u012a": "I",
                            "\u012c": "I",
                            "\u012e": "I",
                            "\u0130": "I",
                            "\u0129": "i",
                            "\u012b": "i",
                            "\u012d": "i",
                            "\u012f": "i",
                            "\u0131": "i",
                            "\u0134": "J",
                            "\u0135": "j",
                            "\u0136": "K",
                            "\u0137": "k",
                            "\u0138": "k",
                            "\u0139": "L",
                            "\u013b": "L",
                            "\u013d": "L",
                            "\u013f": "L",
                            "\u0141": "L",
                            "\u013a": "l",
                            "\u013c": "l",
                            "\u013e": "l",
                            "\u0140": "l",
                            "\u0142": "l",
                            "\u0143": "N",
                            "\u0145": "N",
                            "\u0147": "N",
                            "\u014a": "N",
                            "\u0144": "n",
                            "\u0146": "n",
                            "\u0148": "n",
                            "\u014b": "n",
                            "\u014c": "O",
                            "\u014e": "O",
                            "\u0150": "O",
                            "\u014d": "o",
                            "\u014f": "o",
                            "\u0151": "o",
                            "\u0154": "R",
                            "\u0156": "R",
                            "\u0158": "R",
                            "\u0155": "r",
                            "\u0157": "r",
                            "\u0159": "r",
                            "\u015a": "S",
                            "\u015c": "S",
                            "\u015e": "S",
                            "\u0160": "S",
                            "\u015b": "s",
                            "\u015d": "s",
                            "\u015f": "s",
                            "\u0161": "s",
                            "\u0162": "T",
                            "\u0164": "T",
                            "\u0166": "T",
                            "\u0163": "t",
                            "\u0165": "t",
                            "\u0167": "t",
                            "\u0168": "U",
                            "\u016a": "U",
                            "\u016c": "U",
                            "\u016e": "U",
                            "\u0170": "U",
                            "\u0172": "U",
                            "\u0169": "u",
                            "\u016b": "u",
                            "\u016d": "u",
                            "\u016f": "u",
                            "\u0171": "u",
                            "\u0173": "u",
                            "\u0174": "W",
                            "\u0175": "w",
                            "\u0176": "Y",
                            "\u0177": "y",
                            "\u0178": "Y",
                            "\u0179": "Z",
                            "\u017b": "Z",
                            "\u017d": "Z",
                            "\u017a": "z",
                            "\u017c": "z",
                            "\u017e": "z",
                            "\u0132": "IJ",
                            "\u0133": "ij",
                            "\u0152": "Oe",
                            "\u0153": "oe",
                            "\u0149": "'n",
                            "\u017f": "s"
                        }),
                        sr = Ge({
                            "&": "&amp;",
                            "<": "&lt;",
                            ">": "&gt;",
                            '"': "&quot;",
                            "'": "&#39;"
                        });

                    function or(t) {
                        return "\\" + ue[t]
                    }

                    function ar(t) {
                        return ne.test(t)
                    }

                    function hr(t) {
                        var e = -1,
                            r = Array(t.size);
                        return t.forEach((function(t, i) {
                            r[++e] = [i, t]
                        })), r
                    }

                    function cr(t, e) {
                        return function(r) {
                            return t(e(r))
                        }
                    }

                    function ur(t, e) {
                        for (var r = -1, i = t.length, n = 0, o = []; ++r < i;) {
                            var a = t[r];
                            (a === e || a === s) && (t[r] = s, o[n++] = r)
                        }
                        return o
                    }

                    function lr(t) {
                        var e = -1,
                            r = Array(t.size);
                        return t.forEach((function(t) {
                            r[++e] = t
                        })), r
                    }

                    function fr(t) {
                        return ar(t) ? function(t) {
                            for (var e = re.lastIndex = 0; re.test(t);) ++e;
                            return e
                        }(t) : je(t)
                    }

                    function dr(t) {
                        return ar(t) ? function(t) {
                            return t.match(re) || []
                        }(t) : function(t) {
                            return t.split("")
                        }(t)
                    }

                    function pr(t) {
                        for (var e = t.length; e-- && at.test(t.charAt(e)););
                        return e
                    }
                    var gr = Ge({
                        "&amp;": "&",
                        "&lt;": "<",
                        "&gt;": ">",
                        "&quot;": '"',
                        "&#39;": "'"
                    });
                    var mr = function t(e) {
                        var at = (e = null == e ? ge : mr.defaults(ge.Object(), e, mr.pick(ge, oe))).Array,
                            St = e.Date,
                            It = e.Error,
                            Pt = e.Function,
                            Mt = e.Math,
                            xt = e.Object,
                            Ot = e.RegExp,
                            Ct = e.String,
                            Nt = e.TypeError,
                            Rt = at.prototype,
                            Tt = Pt.prototype,
                            Ut = xt.prototype,
                            Dt = e["__core-js_shared__"],
                            kt = Tt.toString,
                            Bt = Ut.hasOwnProperty,
                            Lt = 0,
                            qt = function() {
                                var t = /[^.]+$/.exec(Dt && Dt.keys && Dt.keys.IE_PROTO || "");
                                return t ? "Symbol(src)_1." + t : ""
                            }(),
                            jt = Ut.toString,
                            zt = kt.call(xt),
                            Ft = ge._,
                            Ht = Ot("^" + kt.call(Bt).replace(nt, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                            Kt = ve ? e.Buffer : r,
                            Vt = e.Symbol,
                            $t = e.Uint8Array,
                            Wt = Kt ? Kt.allocUnsafe : r,
                            Gt = cr(xt.getPrototypeOf, xt),
                            Qt = xt.create,
                            Yt = Ut.propertyIsEnumerable,
                            Jt = Rt.splice,
                            Xt = Vt ? Vt.isConcatSpreadable : r,
                            Zt = Vt ? Vt.iterator : r,
                            re = Vt ? Vt.toStringTag : r,
                            ne = function() {
                                try {
                                    var t = fs(xt, "defineProperty");
                                    return t({}, "", {}), t
                                } catch {}
                            }(),
                            ue = e.clearTimeout !== ge.clearTimeout && e.clearTimeout,
                            de = St && St.now !== ge.Date.now && St.now,
                            pe = e.setTimeout !== ge.setTimeout && e.setTimeout,
                            me = Mt.ceil,
                            ye = Mt.floor,
                            we = xt.getOwnPropertySymbols,
                            be = Kt ? Kt.isBuffer : r,
                            je = e.isFinite,
                            Ge = Rt.join,
                            yr = cr(xt.keys, xt),
                            vr = Mt.max,
                            wr = Mt.min,
                            br = St.now,
                            _r = e.parseInt,
                            Ar = Mt.random,
                            Er = Rt.reverse,
                            Sr = fs(e, "DataView"),
                            Ir = fs(e, "Map"),
                            Pr = fs(e, "Promise"),
                            Mr = fs(e, "Set"),
                            xr = fs(e, "WeakMap"),
                            Or = fs(xt, "create"),
                            Cr = xr && new xr,
                            Nr = {},
                            Rr = Ls(Sr),
                            Tr = Ls(Ir),
                            Ur = Ls(Pr),
                            Dr = Ls(Mr),
                            kr = Ls(xr),
                            Br = Vt ? Vt.prototype : r,
                            Lr = Br ? Br.valueOf : r,
                            qr = Br ? Br.toString : r;

                        function jr(t) {
                            if (ra(t) && !Vo(t) && !(t instanceof Kr)) {
                                if (t instanceof Hr) return t;
                                if (Bt.call(t, "__wrapped__")) return qs(t)
                            }
                            return new Hr(t)
                        }
                        var zr = function() {
                            function t() {}
                            return function(e) {
                                if (!ea(e)) return {};
                                if (Qt) return Qt(e);
                                t.prototype = e;
                                var i = new t;
                                return t.prototype = r, i
                            }
                        }();

                        function Fr() {}

                        function Hr(t, e) {
                            this.__wrapped__ = t, this.__actions__ = [], this.__chain__ = !!e, this.__index__ = 0, this.__values__ = r
                        }

                        function Kr(t) {
                            this.__wrapped__ = t, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = p, this.__views__ = []
                        }

                        function Vr(t) {
                            var e = -1,
                                r = null == t ? 0 : t.length;
                            for (this.clear(); ++e < r;) {
                                var i = t[e];
                                this.set(i[0], i[1])
                            }
                        }

                        function $r(t) {
                            var e = -1,
                                r = null == t ? 0 : t.length;
                            for (this.clear(); ++e < r;) {
                                var i = t[e];
                                this.set(i[0], i[1])
                            }
                        }

                        function Wr(t) {
                            var e = -1,
                                r = null == t ? 0 : t.length;
                            for (this.clear(); ++e < r;) {
                                var i = t[e];
                                this.set(i[0], i[1])
                            }
                        }

                        function Gr(t) {
                            var e = -1,
                                r = null == t ? 0 : t.length;
                            for (this.__data__ = new Wr; ++e < r;) this.add(t[e])
                        }

                        function Qr(t) {
                            var e = this.__data__ = new $r(t);
                            this.size = e.size
                        }

                        function Yr(t, e) {
                            var r = Vo(t),
                                i = !r && Ko(t),
                                n = !r && !i && Qo(t),
                                s = !r && !i && !n && ua(t),
                                o = r || i || n || s,
                                a = o ? Je(t.length, Ct) : [],
                                h = a.length;
                            for (var c in t)(e || Bt.call(t, c)) && (!o || !("length" == c || n && ("offset" == c || "parent" == c) || s && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || ws(c, h))) && a.push(c);
                            return a
                        }

                        function Jr(t) {
                            var e = t.length;
                            return e ? t[Gi(0, e - 1)] : r
                        }

                        function Xr(t, e) {
                            return Ds(Cn(t), ai(e, 0, t.length))
                        }

                        function Zr(t) {
                            return Ds(Cn(t))
                        }

                        function ti(t, e, i) {
                            (i !== r && !zo(t[e], i) || i === r && !(e in t)) && si(t, e, i)
                        }

                        function ei(t, e, i) {
                            var n = t[e];
                            (!Bt.call(t, e) || !zo(n, i) || i === r && !(e in t)) && si(t, e, i)
                        }

                        function ri(t, e) {
                            for (var r = t.length; r--;)
                                if (zo(t[r][0], e)) return r;
                            return -1
                        }

                        function ii(t, e, r, i) {
                            return fi(t, (function(t, n, s) {
                                e(i, t, r(t), s)
                            })), i
                        }

                        function ni(t, e) {
                            return t && Nn(e, Ra(e), t)
                        }

                        function si(t, e, r) {
                            "__proto__" == e && ne ? ne(t, e, {
                                configurable: !0,
                                enumerable: !0,
                                value: r,
                                writable: !0
                            }) : t[e] = r
                        }

                        function oi(t, e) {
                            for (var i = -1, n = e.length, s = at(n), o = null == t; ++i < n;) s[i] = o ? r : Ma(t, e[i]);
                            return s
                        }

                        function ai(t, e, i) {
                            return t === t && (i !== r && (t = t <= i ? t : i), e !== r && (t = t >= e ? t : e)), t
                        }

                        function hi(t, e, i, n, s, o) {
                            var a, h = 1 & e,
                                c = 2 & e,
                                u = 4 & e;
                            if (i && (a = s ? i(t, n, s, o) : i(t)), a !== r) return a;
                            if (!ea(t)) return t;
                            var l = Vo(t);
                            if (l) {
                                if (a = function(t) {
                                        var e = t.length,
                                            r = new t.constructor(e);
                                        return e && "string" == typeof t[0] && Bt.call(t, "index") && (r.index = t.index, r.input = t.input), r
                                    }(t), !h) return Cn(t, a)
                            } else {
                                var f = gs(t),
                                    d = f == E || f == S;
                                if (Qo(t)) return Sn(t, h);
                                if (f == M || f == v || d && !s) {
                                    if (a = c || d ? {} : ys(t), !h) return c ? function(t, e) {
                                        return Nn(t, ps(t), e)
                                    }(t, function(t, e) {
                                        return t && Nn(e, Ta(e), t)
                                    }(a, t)) : function(t, e) {
                                        return Nn(t, ds(t), e)
                                    }(t, ni(a, t))
                                } else {
                                    if (!ce[f]) return s ? t : {};
                                    a = function(t, e, r) {
                                        var i = t.constructor;
                                        switch (e) {
                                            case U:
                                                return In(t);
                                            case b:
                                            case _:
                                                return new i(+t);
                                            case D:
                                                return function(t, e) {
                                                    var r = e ? In(t.buffer) : t.buffer;
                                                    return new t.constructor(r, t.byteOffset, t.byteLength)
                                                }(t, r);
                                            case k:
                                            case B:
                                            case L:
                                            case q:
                                            case j:
                                            case z:
                                            case F:
                                            case H:
                                            case K:
                                                return Pn(t, r);
                                            case I:
                                                return new i;
                                            case P:
                                            case N:
                                                return new i(t);
                                            case O:
                                                return function(t) {
                                                    var e = new t.constructor(t.source, gt.exec(t));
                                                    return e.lastIndex = t.lastIndex, e
                                                }(t);
                                            case C:
                                                return new i;
                                            case R:
                                                return function(t) {
                                                    return Lr ? xt(Lr.call(t)) : {}
                                                }(t)
                                        }
                                    }(t, f, h)
                                }
                            }
                            o || (o = new Qr);
                            var p = o.get(t);
                            if (p) return p;
                            o.set(t, a), aa(t) ? t.forEach((function(r) {
                                a.add(hi(r, e, i, r, t, o))
                            })) : ia(t) && t.forEach((function(r, n) {
                                a.set(n, hi(r, e, i, n, t, o))
                            }));
                            var g = l ? r : (u ? c ? ss : ns : c ? Ta : Ra)(t);
                            return Oe(g || t, (function(r, n) {
                                g && (r = t[n = r]), ei(a, n, hi(r, e, i, n, t, o))
                            })), a
                        }

                        function ci(t, e, i) {
                            var n = i.length;
                            if (null == t) return !n;
                            for (t = xt(t); n--;) {
                                var s = i[n],
                                    o = e[s],
                                    a = t[s];
                                if (a === r && !(s in t) || !o(a)) return !1
                            }
                            return !0
                        }

                        function ui(t, e, n) {
                            if ("function" != typeof t) throw new Nt(i);
                            return Ns((function() {
                                t.apply(r, n)
                            }), e)
                        }

                        function li(t, e, r, i) {
                            var n = -1,
                                s = Te,
                                o = !0,
                                a = t.length,
                                h = [],
                                c = e.length;
                            if (!a) return h;
                            r && (e = De(e, Ze(r))), i ? (s = Ue, o = !1) : e.length >= 200 && (s = er, o = !1, e = new Gr(e));
                            t: for (; ++n < a;) {
                                var u = t[n],
                                    l = null == r ? u : r(u);
                                if (u = i || 0 !== u ? u : 0, o && l === l) {
                                    for (var f = c; f--;)
                                        if (e[f] === l) continue t;
                                    h.push(u)
                                } else s(e, l, i) || h.push(u)
                            }
                            return h
                        }
                        jr.templateSettings = {
                            escape: X,
                            evaluate: Z,
                            interpolate: tt,
                            variable: "",
                            imports: {
                                _: jr
                            }
                        }, jr.prototype = Fr.prototype, jr.prototype.constructor = jr, Hr.prototype = zr(Fr.prototype), Hr.prototype.constructor = Hr, Kr.prototype = zr(Fr.prototype), Kr.prototype.constructor = Kr, Vr.prototype.clear = function() {
                            this.__data__ = Or ? Or(null) : {}, this.size = 0
                        }, Vr.prototype.delete = function(t) {
                            var e = this.has(t) && delete this.__data__[t];
                            return this.size -= e ? 1 : 0, e
                        }, Vr.prototype.get = function(t) {
                            var e = this.__data__;
                            if (Or) {
                                var i = e[t];
                                return i === n ? r : i
                            }
                            return Bt.call(e, t) ? e[t] : r
                        }, Vr.prototype.has = function(t) {
                            var e = this.__data__;
                            return Or ? e[t] !== r : Bt.call(e, t)
                        }, Vr.prototype.set = function(t, e) {
                            var i = this.__data__;
                            return this.size += this.has(t) ? 0 : 1, i[t] = Or && e === r ? n : e, this
                        }, $r.prototype.clear = function() {
                            this.__data__ = [], this.size = 0
                        }, $r.prototype.delete = function(t) {
                            var e = this.__data__,
                                r = ri(e, t);
                            return !(r < 0) && (r == e.length - 1 ? e.pop() : Jt.call(e, r, 1), --this.size, !0)
                        }, $r.prototype.get = function(t) {
                            var e = this.__data__,
                                i = ri(e, t);
                            return i < 0 ? r : e[i][1]
                        }, $r.prototype.has = function(t) {
                            return ri(this.__data__, t) > -1
                        }, $r.prototype.set = function(t, e) {
                            var r = this.__data__,
                                i = ri(r, t);
                            return i < 0 ? (++this.size, r.push([t, e])) : r[i][1] = e, this
                        }, Wr.prototype.clear = function() {
                            this.size = 0, this.__data__ = {
                                hash: new Vr,
                                map: new(Ir || $r),
                                string: new Vr
                            }
                        }, Wr.prototype.delete = function(t) {
                            var e = us(this, t).delete(t);
                            return this.size -= e ? 1 : 0, e
                        }, Wr.prototype.get = function(t) {
                            return us(this, t).get(t)
                        }, Wr.prototype.has = function(t) {
                            return us(this, t).has(t)
                        }, Wr.prototype.set = function(t, e) {
                            var r = us(this, t),
                                i = r.size;
                            return r.set(t, e), this.size += r.size == i ? 0 : 1, this
                        }, Gr.prototype.add = Gr.prototype.push = function(t) {
                            return this.__data__.set(t, n), this
                        }, Gr.prototype.has = function(t) {
                            return this.__data__.has(t)
                        }, Qr.prototype.clear = function() {
                            this.__data__ = new $r, this.size = 0
                        }, Qr.prototype.delete = function(t) {
                            var e = this.__data__,
                                r = e.delete(t);
                            return this.size = e.size, r
                        }, Qr.prototype.get = function(t) {
                            return this.__data__.get(t)
                        }, Qr.prototype.has = function(t) {
                            return this.__data__.has(t)
                        }, Qr.prototype.set = function(t, e) {
                            var r = this.__data__;
                            if (r instanceof $r) {
                                var i = r.__data__;
                                if (!Ir || i.length < 199) return i.push([t, e]), this.size = ++r.size, this;
                                r = this.__data__ = new Wr(i)
                            }
                            return r.set(t, e), this.size = r.size, this
                        };
                        var fi = Un(bi),
                            di = Un(_i, !0);

                        function pi(t, e) {
                            var r = !0;
                            return fi(t, (function(t, i, n) {
                                return r = !!e(t, i, n)
                            })), r
                        }

                        function gi(t, e, i) {
                            for (var n = -1, s = t.length; ++n < s;) {
                                var o = t[n],
                                    a = e(o);
                                if (null != a && (h === r ? a === a && !ca(a) : i(a, h))) var h = a,
                                    c = o
                            }
                            return c
                        }

                        function mi(t, e) {
                            var r = [];
                            return fi(t, (function(t, i, n) {
                                e(t, i, n) && r.push(t)
                            })), r
                        }

                        function yi(t, e, r, i, n) {
                            var s = -1,
                                o = t.length;
                            for (r || (r = vs), n || (n = []); ++s < o;) {
                                var a = t[s];
                                e > 0 && r(a) ? e > 1 ? yi(a, e - 1, r, i, n) : ke(n, a) : i || (n[n.length] = a)
                            }
                            return n
                        }
                        var vi = Dn(),
                            wi = Dn(!0);

                        function bi(t, e) {
                            return t && vi(t, e, Ra)
                        }

                        function _i(t, e) {
                            return t && wi(t, e, Ra)
                        }

                        function Ai(t, e) {
                            return Re(e, (function(e) {
                                return Xo(t[e])
                            }))
                        }

                        function Ei(t, e) {
                            for (var i = 0, n = (e = bn(e, t)).length; null != t && i < n;) t = t[Bs(e[i++])];
                            return i && i == n ? t : r
                        }

                        function Si(t, e, r) {
                            var i = e(t);
                            return Vo(t) ? i : ke(i, r(t))
                        }

                        function Ii(t) {
                            return null == t ? t === r ? "[object Undefined]" : "[object Null]" : re && re in xt(t) ? function(t) {
                                var e = Bt.call(t, re),
                                    i = t[re];
                                try {
                                    t[re] = r;
                                    var n = !0
                                } catch {}
                                var s = jt.call(t);
                                return n && (e ? t[re] = i : delete t[re]), s
                            }(t) : function(t) {
                                return jt.call(t)
                            }(t)
                        }

                        function Pi(t, e) {
                            return t > e
                        }

                        function Mi(t, e) {
                            return null != t && Bt.call(t, e)
                        }

                        function xi(t, e) {
                            return null != t && e in xt(t)
                        }

                        function Oi(t, e, i) {
                            for (var n = i ? Ue : Te, s = t[0].length, o = t.length, a = o, h = at(o), c = 1 / 0, u = []; a--;) {
                                var l = t[a];
                                a && e && (l = De(l, Ze(e))), c = wr(l.length, c), h[a] = !i && (e || s >= 120 && l.length >= 120) ? new Gr(a && l) : r
                            }
                            l = t[0];
                            var f = -1,
                                d = h[0];
                            t: for (; ++f < s && u.length < c;) {
                                var p = l[f],
                                    g = e ? e(p) : p;
                                if (p = i || 0 !== p ? p : 0, !(d ? er(d, g) : n(u, g, i))) {
                                    for (a = o; --a;) {
                                        var m = h[a];
                                        if (!(m ? er(m, g) : n(t[a], g, i))) continue t
                                    }
                                    d && d.push(g), u.push(p)
                                }
                            }
                            return u
                        }

                        function Ci(t, e, i) {
                            var n = null == (t = xs(t, e = bn(e, t))) ? t : t[Bs(Ys(e))];
                            return null == n ? r : Me(n, t, i)
                        }

                        function Ni(t) {
                            return ra(t) && Ii(t) == v
                        }

                        function Ri(t, e, i, n, s) {
                            return t === e || (null == t || null == e || !ra(t) && !ra(e) ? t !== t && e !== e : function(t, e, i, n, s, o) {
                                var a = Vo(t),
                                    h = Vo(e),
                                    c = a ? w : gs(t),
                                    u = h ? w : gs(e);
                                c = c == v ? M : c, u = u == v ? M : u;
                                var l = c == M,
                                    f = u == M,
                                    d = c == u;
                                if (d && Qo(t)) {
                                    if (!Qo(e)) return !1;
                                    a = !0, l = !1
                                }
                                if (d && !l) return o || (o = new Qr), a || ua(t) ? rs(t, e, i, n, s, o) : function(t, e, r, i, n, s, o) {
                                    switch (r) {
                                        case D:
                                            if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;
                                            t = t.buffer, e = e.buffer;
                                        case U:
                                            return !(t.byteLength != e.byteLength || !s(new $t(t), new $t(e)));
                                        case b:
                                        case _:
                                        case P:
                                            return zo(+t, +e);
                                        case A:
                                            return t.name == e.name && t.message == e.message;
                                        case O:
                                        case N:
                                            return t == e + "";
                                        case I:
                                            var a = hr;
                                        case C:
                                            var h = 1 & i;
                                            if (a || (a = lr), t.size != e.size && !h) return !1;
                                            var c = o.get(t);
                                            if (c) return c == e;
                                            i |= 2, o.set(t, e);
                                            var u = rs(a(t), a(e), i, n, s, o);
                                            return o.delete(t), u;
                                        case R:
                                            if (Lr) return Lr.call(t) == Lr.call(e)
                                    }
                                    return !1
                                }(t, e, c, i, n, s, o);
                                if (!(1 & i)) {
                                    var p = l && Bt.call(t, "__wrapped__"),
                                        g = f && Bt.call(e, "__wrapped__");
                                    if (p || g) {
                                        var m = p ? t.value() : t,
                                            y = g ? e.value() : e;
                                        return o || (o = new Qr), s(m, y, i, n, o)
                                    }
                                }
                                return !!d && (o || (o = new Qr), function(t, e, i, n, s, o) {
                                    var a = 1 & i,
                                        h = ns(t),
                                        c = h.length,
                                        u = ns(e),
                                        l = u.length;
                                    if (c != l && !a) return !1;
                                    for (var f = c; f--;) {
                                        var d = h[f];
                                        if (!(a ? d in e : Bt.call(e, d))) return !1
                                    }
                                    var p = o.get(t),
                                        g = o.get(e);
                                    if (p && g) return p == e && g == t;
                                    var m = !0;
                                    o.set(t, e), o.set(e, t);
                                    for (var y = a; ++f < c;) {
                                        var v = t[d = h[f]],
                                            w = e[d];
                                        if (n) var b = a ? n(w, v, d, e, t, o) : n(v, w, d, t, e, o);
                                        if (!(b === r ? v === w || s(v, w, i, n, o) : b)) {
                                            m = !1;
                                            break
                                        }
                                        y || (y = "constructor" == d)
                                    }
                                    if (m && !y) {
                                        var _ = t.constructor,
                                            A = e.constructor;
                                        _ != A && "constructor" in t && "constructor" in e && !("function" == typeof _ && _ instanceof _ && "function" == typeof A && A instanceof A) && (m = !1)
                                    }
                                    return o.delete(t), o.delete(e), m
                                }(t, e, i, n, s, o))
                            }(t, e, i, n, Ri, s))
                        }

                        function Ti(t, e, i, n) {
                            var s = i.length,
                                o = s,
                                a = !n;
                            if (null == t) return !o;
                            for (t = xt(t); s--;) {
                                var h = i[s];
                                if (a && h[2] ? h[1] !== t[h[0]] : !(h[0] in t)) return !1
                            }
                            for (; ++s < o;) {
                                var c = (h = i[s])[0],
                                    u = t[c],
                                    l = h[1];
                                if (a && h[2]) {
                                    if (u === r && !(c in t)) return !1
                                } else {
                                    var f = new Qr;
                                    if (n) var d = n(u, l, c, t, e, f);
                                    if (!(d === r ? Ri(l, u, 3, n, f) : d)) return !1
                                }
                            }
                            return !0
                        }

                        function Ui(t) {
                            return !(!ea(t) || function(t) {
                                return !!qt && qt in t
                            }(t)) && (Xo(t) ? Ht : vt).test(Ls(t))
                        }

                        function Di(t) {
                            return "function" == typeof t ? t : null == t ? nh : "object" == typeof t ? Vo(t) ? zi(t[0], t[1]) : ji(t) : dh(t)
                        }

                        function ki(t) {
                            if (!Ss(t)) return yr(t);
                            var e = [];
                            for (var r in xt(t)) Bt.call(t, r) && "constructor" != r && e.push(r);
                            return e
                        }

                        function Bi(t) {
                            if (!ea(t)) return function(t) {
                                var e = [];
                                if (null != t)
                                    for (var r in xt(t)) e.push(r);
                                return e
                            }(t);
                            var e = Ss(t),
                                r = [];
                            for (var i in t) "constructor" == i && (e || !Bt.call(t, i)) || r.push(i);
                            return r
                        }

                        function Li(t, e) {
                            return t < e
                        }

                        function qi(t, e) {
                            var r = -1,
                                i = Wo(t) ? at(t.length) : [];
                            return fi(t, (function(t, n, s) {
                                i[++r] = e(t, n, s)
                            })), i
                        }

                        function ji(t) {
                            var e = ls(t);
                            return 1 == e.length && e[0][2] ? Ps(e[0][0], e[0][1]) : function(r) {
                                return r === t || Ti(r, t, e)
                            }
                        }

                        function zi(t, e) {
                            return _s(t) && Is(e) ? Ps(Bs(t), e) : function(i) {
                                var n = Ma(i, t);
                                return n === r && n === e ? xa(i, t) : Ri(e, n, 3)
                            }
                        }

                        function Fi(t, e, i, n, s) {
                            t !== e && vi(e, (function(o, a) {
                                if (s || (s = new Qr), ea(o)) ! function(t, e, i, n, s, o, a) {
                                    var h = Os(t, i),
                                        c = Os(e, i),
                                        u = a.get(c);
                                    if (u) return void ti(t, i, u);
                                    var l = o ? o(h, c, i + "", t, e, a) : r,
                                        f = l === r;
                                    if (f) {
                                        var d = Vo(c),
                                            p = !d && Qo(c),
                                            g = !d && !p && ua(c);
                                        l = c, d || p || g ? Vo(h) ? l = h : Go(h) ? l = Cn(h) : p ? (f = !1, l = Sn(c, !0)) : g ? (f = !1, l = Pn(c, !0)) : l = [] : sa(c) || Ko(c) ? (l = h, Ko(h) ? l = va(h) : (!ea(h) || Xo(h)) && (l = ys(c))) : f = !1
                                    }
                                    f && (a.set(c, l), s(l, c, n, o, a), a.delete(c)), ti(t, i, l)
                                }(t, e, a, i, Fi, n, s);
                                else {
                                    var h = n ? n(Os(t, a), o, a + "", t, e, s) : r;
                                    h === r && (h = o), ti(t, a, h)
                                }
                            }), Ta)
                        }

                        function Hi(t, e) {
                            var i = t.length;
                            if (i) return ws(e += e < 0 ? i : 0, i) ? t[e] : r
                        }

                        function Ki(t, e, r) {
                            e = e.length ? De(e, (function(t) {
                                return Vo(t) ? function(e) {
                                    return Ei(e, 1 === t.length ? t[0] : t)
                                } : t
                            })) : [nh];
                            var i = -1;
                            e = De(e, Ze(cs()));
                            var n = qi(t, (function(t, r, n) {
                                var s = De(e, (function(e) {
                                    return e(t)
                                }));
                                return {
                                    criteria: s,
                                    index: ++i,
                                    value: t
                                }
                            }));
                            return function(t, e) {
                                var r = t.length;
                                for (t.sort(e); r--;) t[r] = t[r].value;
                                return t
                            }(n, (function(t, e) {
                                return function(t, e, r) {
                                    for (var i = -1, n = t.criteria, s = e.criteria, o = n.length, a = r.length; ++i < o;) {
                                        var h = Mn(n[i], s[i]);
                                        if (h) return i >= a ? h : h * ("desc" == r[i] ? -1 : 1)
                                    }
                                    return t.index - e.index
                                }(t, e, r)
                            }))
                        }

                        function Vi(t, e, r) {
                            for (var i = -1, n = e.length, s = {}; ++i < n;) {
                                var o = e[i],
                                    a = Ei(t, o);
                                r(a, o) && Zi(s, bn(o, t), a)
                            }
                            return s
                        }

                        function $i(t, e, r, i) {
                            var n = i ? Ke : He,
                                s = -1,
                                o = e.length,
                                a = t;
                            for (t === e && (e = Cn(e)), r && (a = De(t, Ze(r))); ++s < o;)
                                for (var h = 0, c = e[s], u = r ? r(c) : c;
                                    (h = n(a, u, h, i)) > -1;) a !== t && Jt.call(a, h, 1), Jt.call(t, h, 1);
                            return t
                        }

                        function Wi(t, e) {
                            for (var r = t ? e.length : 0, i = r - 1; r--;) {
                                var n = e[r];
                                if (r == i || n !== s) {
                                    var s = n;
                                    ws(n) ? Jt.call(t, n, 1) : fn(t, n)
                                }
                            }
                            return t
                        }

                        function Gi(t, e) {
                            return t + ye(Ar() * (e - t + 1))
                        }

                        function Qi(t, e) {
                            var r = "";
                            if (!t || e < 1 || e > f) return r;
                            do {
                                e % 2 && (r += t), (e = ye(e / 2)) && (t += t)
                            } while (e);
                            return r
                        }

                        function Yi(t, e) {
                            return Rs(Ms(t, e, nh), t + "")
                        }

                        function Ji(t) {
                            return Jr(za(t))
                        }

                        function Xi(t, e) {
                            var r = za(t);
                            return Ds(r, ai(e, 0, r.length))
                        }

                        function Zi(t, e, i, n) {
                            if (!ea(t)) return t;
                            for (var s = -1, o = (e = bn(e, t)).length, a = o - 1, h = t; null != h && ++s < o;) {
                                var c = Bs(e[s]),
                                    u = i;
                                if ("__proto__" === c || "constructor" === c || "prototype" === c) return t;
                                if (s != a) {
                                    var l = h[c];
                                    (u = n ? n(l, c, h) : r) === r && (u = ea(l) ? l : ws(e[s + 1]) ? [] : {})
                                }
                                ei(h, c, u), h = h[c]
                            }
                            return t
                        }
                        var tn = Cr ? function(t, e) {
                                return Cr.set(t, e), t
                            } : nh,
                            en = ne ? function(t, e) {
                                return ne(t, "toString", {
                                    configurable: !0,
                                    enumerable: !1,
                                    value: eh(e),
                                    writable: !0
                                })
                            } : nh;

                        function rn(t) {
                            return Ds(za(t))
                        }

                        function nn(t, e, r) {
                            var i = -1,
                                n = t.length;
                            e < 0 && (e = -e > n ? 0 : n + e), (r = r > n ? n : r) < 0 && (r += n), n = e > r ? 0 : r - e >>> 0, e >>>= 0;
                            for (var s = at(n); ++i < n;) s[i] = t[i + e];
                            return s
                        }

                        function sn(t, e) {
                            var r;
                            return fi(t, (function(t, i, n) {
                                return !(r = e(t, i, n))
                            })), !!r
                        }

                        function on(t, e, r) {
                            var i = 0,
                                n = null == t ? i : t.length;
                            if ("number" == typeof e && e === e && n <= m) {
                                for (; i < n;) {
                                    var s = i + n >>> 1,
                                        o = t[s];
                                    null !== o && !ca(o) && (r ? o <= e : o < e) ? i = s + 1 : n = s
                                }
                                return n
                            }
                            return an(t, e, nh, r)
                        }

                        function an(t, e, i, n) {
                            var s = 0,
                                o = null == t ? 0 : t.length;
                            if (0 === o) return 0;
                            for (var a = (e = i(e)) !== e, h = null === e, c = ca(e), u = e === r; s < o;) {
                                var l = ye((s + o) / 2),
                                    f = i(t[l]),
                                    d = f !== r,
                                    p = null === f,
                                    m = f === f,
                                    y = ca(f);
                                if (a) var v = n || m;
                                else v = u ? m && (n || d) : h ? m && d && (n || !p) : c ? m && d && !p && (n || !y) : !p && !y && (n ? f <= e : f < e);
                                v ? s = l + 1 : o = l
                            }
                            return wr(o, g)
                        }

                        function hn(t, e) {
                            for (var r = -1, i = t.length, n = 0, s = []; ++r < i;) {
                                var o = t[r],
                                    a = e ? e(o) : o;
                                if (!r || !zo(a, h)) {
                                    var h = a;
                                    s[n++] = 0 === o ? 0 : o
                                }
                            }
                            return s
                        }

                        function cn(t) {
                            return "number" == typeof t ? t : ca(t) ? d : +t
                        }

                        function un(t) {
                            if ("string" == typeof t) return t;
                            if (Vo(t)) return De(t, un) + "";
                            if (ca(t)) return qr ? qr.call(t) : "";
                            var e = t + "";
                            return "0" == e && 1 / t == -l ? "-0" : e
                        }

                        function ln(t, e, r) {
                            var i = -1,
                                n = Te,
                                s = t.length,
                                o = !0,
                                a = [],
                                h = a;
                            if (r) o = !1, n = Ue;
                            else if (s >= 200) {
                                var c = e ? null : Yn(t);
                                if (c) return lr(c);
                                o = !1, n = er, h = new Gr
                            } else h = e ? [] : a;
                            t: for (; ++i < s;) {
                                var u = t[i],
                                    l = e ? e(u) : u;
                                if (u = r || 0 !== u ? u : 0, o && l === l) {
                                    for (var f = h.length; f--;)
                                        if (h[f] === l) continue t;
                                    e && h.push(l), a.push(u)
                                } else n(h, l, r) || (h !== a && h.push(l), a.push(u))
                            }
                            return a
                        }

                        function fn(t, e) {
                            return null == (t = xs(t, e = bn(e, t))) || delete t[Bs(Ys(e))]
                        }

                        function dn(t, e, r, i) {
                            return Zi(t, e, r(Ei(t, e)), i)
                        }

                        function pn(t, e, r, i) {
                            for (var n = t.length, s = i ? n : -1;
                                (i ? s-- : ++s < n) && e(t[s], s, t););
                            return r ? nn(t, i ? 0 : s, i ? s + 1 : n) : nn(t, i ? s + 1 : 0, i ? n : s)
                        }

                        function gn(t, e) {
                            var r = t;
                            return r instanceof Kr && (r = r.value()), Be(e, (function(t, e) {
                                return e.func.apply(e.thisArg, ke([t], e.args))
                            }), r)
                        }

                        function mn(t, e, r) {
                            var i = t.length;
                            if (i < 2) return i ? ln(t[0]) : [];
                            for (var n = -1, s = at(i); ++n < i;)
                                for (var o = t[n], a = -1; ++a < i;) a != n && (s[n] = li(s[n] || o, t[a], e, r));
                            return ln(yi(s, 1), e, r)
                        }

                        function yn(t, e, i) {
                            for (var n = -1, s = t.length, o = e.length, a = {}; ++n < s;) {
                                var h = n < o ? e[n] : r;
                                i(a, t[n], h)
                            }
                            return a
                        }

                        function vn(t) {
                            return Go(t) ? t : []
                        }

                        function wn(t) {
                            return "function" == typeof t ? t : nh
                        }

                        function bn(t, e) {
                            return Vo(t) ? t : _s(t, e) ? [t] : ks(wa(t))
                        }
                        var _n = Yi;

                        function An(t, e, i) {
                            var n = t.length;
                            return i = i === r ? n : i, !e && i >= n ? t : nn(t, e, i)
                        }
                        var En = ue || function(t) {
                            return ge.clearTimeout(t)
                        };

                        function Sn(t, e) {
                            if (e) return t.slice();
                            var r = t.length,
                                i = Wt ? Wt(r) : new t.constructor(r);
                            return t.copy(i), i
                        }

                        function In(t) {
                            var e = new t.constructor(t.byteLength);
                            return new $t(e).set(new $t(t)), e
                        }

                        function Pn(t, e) {
                            var r = e ? In(t.buffer) : t.buffer;
                            return new t.constructor(r, t.byteOffset, t.length)
                        }

                        function Mn(t, e) {
                            if (t !== e) {
                                var i = t !== r,
                                    n = null === t,
                                    s = t === t,
                                    o = ca(t),
                                    a = e !== r,
                                    h = null === e,
                                    c = e === e,
                                    u = ca(e);
                                if (!h && !u && !o && t > e || o && a && c && !h && !u || n && a && c || !i && c || !s) return 1;
                                if (!n && !o && !u && t < e || u && i && s && !n && !o || h && i && s || !a && s || !c) return -1
                            }
                            return 0
                        }

                        function xn(t, e, r, i) {
                            for (var n = -1, s = t.length, o = r.length, a = -1, h = e.length, c = vr(s - o, 0), u = at(h + c), l = !i; ++a < h;) u[a] = e[a];
                            for (; ++n < o;)(l || n < s) && (u[r[n]] = t[n]);
                            for (; c--;) u[a++] = t[n++];
                            return u
                        }

                        function On(t, e, r, i) {
                            for (var n = -1, s = t.length, o = -1, a = r.length, h = -1, c = e.length, u = vr(s - a, 0), l = at(u + c), f = !i; ++n < u;) l[n] = t[n];
                            for (var d = n; ++h < c;) l[d + h] = e[h];
                            for (; ++o < a;)(f || n < s) && (l[d + r[o]] = t[n++]);
                            return l
                        }

                        function Cn(t, e) {
                            var r = -1,
                                i = t.length;
                            for (e || (e = at(i)); ++r < i;) e[r] = t[r];
                            return e
                        }

                        function Nn(t, e, i, n) {
                            var s = !i;
                            i || (i = {});
                            for (var o = -1, a = e.length; ++o < a;) {
                                var h = e[o],
                                    c = n ? n(i[h], t[h], h, i, t) : r;
                                c === r && (c = t[h]), s ? si(i, h, c) : ei(i, h, c)
                            }
                            return i
                        }

                        function Rn(t, e) {
                            return function(r, i) {
                                var n = Vo(r) ? xe : ii,
                                    s = e ? e() : {};
                                return n(r, t, cs(i, 2), s)
                            }
                        }

                        function Tn(t) {
                            return Yi((function(e, i) {
                                var n = -1,
                                    s = i.length,
                                    o = s > 1 ? i[s - 1] : r,
                                    a = s > 2 ? i[2] : r;
                                for (o = t.length > 3 && "function" == typeof o ? (s--, o) : r, a && bs(i[0], i[1], a) && (o = s < 3 ? r : o, s = 1), e = xt(e); ++n < s;) {
                                    var h = i[n];
                                    h && t(e, h, n, o)
                                }
                                return e
                            }))
                        }

                        function Un(t, e) {
                            return function(r, i) {
                                if (null == r) return r;
                                if (!Wo(r)) return t(r, i);
                                for (var n = r.length, s = e ? n : -1, o = xt(r);
                                    (e ? s-- : ++s < n) && !1 !== i(o[s], s, o););
                                return r
                            }
                        }

                        function Dn(t) {
                            return function(e, r, i) {
                                for (var n = -1, s = xt(e), o = i(e), a = o.length; a--;) {
                                    var h = o[t ? a : ++n];
                                    if (!1 === r(s[h], h, s)) break
                                }
                                return e
                            }
                        }

                        function kn(t) {
                            return function(e) {
                                var i = ar(e = wa(e)) ? dr(e) : r,
                                    n = i ? i[0] : e.charAt(0),
                                    s = i ? An(i, 1).join("") : e.slice(1);
                                return n[t]() + s
                            }
                        }

                        function Bn(t) {
                            return function(e) {
                                return Be(Xa(Ka(e).replace(te, "")), t, "")
                            }
                        }

                        function Ln(t) {
                            return function() {
                                var e = arguments;
                                switch (e.length) {
                                    case 0:
                                        return new t;
                                    case 1:
                                        return new t(e[0]);
                                    case 2:
                                        return new t(e[0], e[1]);
                                    case 3:
                                        return new t(e[0], e[1], e[2]);
                                    case 4:
                                        return new t(e[0], e[1], e[2], e[3]);
                                    case 5:
                                        return new t(e[0], e[1], e[2], e[3], e[4]);
                                    case 6:
                                        return new t(e[0], e[1], e[2], e[3], e[4], e[5]);
                                    case 7:
                                        return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6])
                                }
                                var r = zr(t.prototype),
                                    i = t.apply(r, e);
                                return ea(i) ? i : r
                            }
                        }

                        function qn(t) {
                            return function(e, i, n) {
                                var s = xt(e);
                                if (!Wo(e)) {
                                    var o = cs(i, 3);
                                    e = Ra(e), i = function(t) {
                                        return o(s[t], t, s)
                                    }
                                }
                                var a = t(e, i, n);
                                return a > -1 ? s[o ? e[a] : a] : r
                            }
                        }

                        function jn(t) {
                            return is((function(e) {
                                var n = e.length,
                                    s = n,
                                    o = Hr.prototype.thru;
                                for (t && e.reverse(); s--;) {
                                    var a = e[s];
                                    if ("function" != typeof a) throw new Nt(i);
                                    if (o && !h && "wrapper" == as(a)) var h = new Hr([], !0)
                                }
                                for (s = h ? s : n; ++s < n;) {
                                    var c = as(a = e[s]),
                                        u = "wrapper" == c ? os(a) : r;
                                    h = u && As(u[0]) && 424 == u[1] && !u[4].length && 1 == u[9] ? h[as(u[0])].apply(h, u[3]) : 1 == a.length && As(a) ? h[c]() : h.thru(a)
                                }
                                return function() {
                                    var t = arguments,
                                        r = t[0];
                                    if (h && 1 == t.length && Vo(r)) return h.plant(r).value();
                                    for (var i = 0, s = n ? e[i].apply(this, t) : r; ++i < n;) s = e[i].call(this, s);
                                    return s
                                }
                            }))
                        }

                        function zn(t, e, i, n, s, o, a, h, u, l) {
                            var f = e & c,
                                d = 1 & e,
                                p = 2 & e,
                                g = 24 & e,
                                m = 512 & e,
                                y = p ? r : Ln(t);
                            return function c() {
                                for (var v = arguments.length, w = at(v), b = v; b--;) w[b] = arguments[b];
                                if (g) var _ = hs(c),
                                    A = function(t, e) {
                                        for (var r = t.length, i = 0; r--;) t[r] === e && ++i;
                                        return i
                                    }(w, _);
                                if (n && (w = xn(w, n, s, g)), o && (w = On(w, o, a, g)), v -= A, g && v < l) {
                                    var E = ur(w, _);
                                    return Gn(t, e, zn, c.placeholder, i, w, E, h, u, l - v)
                                }
                                var S = d ? i : this,
                                    I = p ? S[t] : t;
                                return v = w.length, h ? w = function(t, e) {
                                    for (var i = t.length, n = wr(e.length, i), s = Cn(t); n--;) {
                                        var o = e[n];
                                        t[n] = ws(o, i) ? s[o] : r
                                    }
                                    return t
                                }(w, h) : m && v > 1 && w.reverse(), f && u < v && (w.length = u), this && this !== ge && this instanceof c && (I = y || Ln(I)), I.apply(S, w)
                            }
                        }

                        function Fn(t, e) {
                            return function(r, i) {
                                return function(t, e, r, i) {
                                    return bi(t, (function(t, n, s) {
                                        e(i, r(t), n, s)
                                    })), i
                                }(r, t, e(i), {})
                            }
                        }

                        function Hn(t, e) {
                            return function(i, n) {
                                var s;
                                if (i === r && n === r) return e;
                                if (i !== r && (s = i), n !== r) {
                                    if (s === r) return n;
                                    "string" == typeof i || "string" == typeof n ? (i = un(i), n = un(n)) : (i = cn(i), n = cn(n)), s = t(i, n)
                                }
                                return s
                            }
                        }

                        function Kn(t) {
                            return is((function(e) {
                                return e = De(e, Ze(cs())), Yi((function(r) {
                                    var i = this;
                                    return t(e, (function(t) {
                                        return Me(t, i, r)
                                    }))
                                }))
                            }))
                        }

                        function Vn(t, e) {
                            var i = (e = e === r ? " " : un(e)).length;
                            if (i < 2) return i ? Qi(e, t) : e;
                            var n = Qi(e, me(t / fr(e)));
                            return ar(e) ? An(dr(n), 0, t).join("") : n.slice(0, t)
                        }

                        function $n(t) {
                            return function(e, i, n) {
                                return n && "number" != typeof n && bs(e, i, n) && (i = n = r), e = pa(e), i === r ? (i = e, e = 0) : i = pa(i),
                                    function(t, e, r, i) {
                                        for (var n = -1, s = vr(me((e - t) / (r || 1)), 0), o = at(s); s--;) o[i ? s : ++n] = t, t += r;
                                        return o
                                    }(e, i, n = n === r ? e < i ? 1 : -1 : pa(n), t)
                            }
                        }

                        function Wn(t) {
                            return function(e, r) {
                                return "string" == typeof e && "string" == typeof r || (e = ya(e), r = ya(r)), t(e, r)
                            }
                        }

                        function Gn(t, e, i, n, s, o, c, u, l, f) {
                            var d = 8 & e;
                            e |= d ? a : h, 4 & (e &= ~(d ? h : a)) || (e &= -4);
                            var p = [t, e, s, d ? o : r, d ? c : r, d ? r : o, d ? r : c, u, l, f],
                                g = i.apply(r, p);
                            return As(t) && Cs(g, p), g.placeholder = n, Ts(g, t, e)
                        }

                        function Qn(t) {
                            var e = Mt[t];
                            return function(t, r) {
                                if (t = ya(t), (r = null == r ? 0 : wr(ga(r), 292)) && je(t)) {
                                    var i = (wa(t) + "e").split("e");
                                    return +((i = (wa(e(i[0] + "e" + (+i[1] + r))) + "e").split("e"))[0] + "e" + (+i[1] - r))
                                }
                                return e(t)
                            }
                        }
                        var Yn = Mr && 1 / lr(new Mr([, -0]))[1] == l ? function(t) {
                            return new Mr(t)
                        } : ch;

                        function Jn(t) {
                            return function(e) {
                                var r = gs(e);
                                return r == I ? hr(e) : r == C ? function(t) {
                                    var e = -1,
                                        r = Array(t.size);
                                    return t.forEach((function(t) {
                                        r[++e] = [t, t]
                                    })), r
                                }(e) : function(t, e) {
                                    return De(e, (function(e) {
                                        return [e, t[e]]
                                    }))
                                }(e, t(e))
                            }
                        }

                        function Xn(t, e, n, l, f, d, p, g) {
                            var m = 2 & e;
                            if (!m && "function" != typeof t) throw new Nt(i);
                            var y = l ? l.length : 0;
                            if (y || (e &= -97, l = f = r), p = p === r ? p : vr(ga(p), 0), g = g === r ? g : ga(g), y -= f ? f.length : 0, e & h) {
                                var v = l,
                                    w = f;
                                l = f = r
                            }
                            var b = m ? r : os(t),
                                _ = [t, e, n, l, f, v, w, d, p, g];
                            if (b && function(t, e) {
                                    var r = t[1],
                                        i = e[1],
                                        n = r | i,
                                        o = n < 131,
                                        a = i == c && 8 == r || i == c && r == u && t[7].length <= e[8] || 384 == i && e[7].length <= e[8] && 8 == r;
                                    if (!o && !a) return t;
                                    1 & i && (t[2] = e[2], n |= 1 & r ? 0 : 4);
                                    var h = e[3];
                                    if (h) {
                                        var l = t[3];
                                        t[3] = l ? xn(l, h, e[4]) : h, t[4] = l ? ur(t[3], s) : e[4]
                                    }
                                    h = e[5], h && (l = t[5], t[5] = l ? On(l, h, e[6]) : h, t[6] = l ? ur(t[5], s) : e[6]), h = e[7], h && (t[7] = h), i & c && (t[8] = null == t[8] ? e[8] : wr(t[8], e[8])), null == t[9] && (t[9] = e[9]), t[0] = e[0], t[1] = n
                                }(_, b), t = _[0], e = _[1], n = _[2], l = _[3], f = _[4], !(g = _[9] = _[9] === r ? m ? 0 : t.length : vr(_[9] - y, 0)) && 24 & e && (e &= -25), e && 1 != e) A = 8 == e || e == o ? function(t, e, i) {
                                var n = Ln(t);
                                return function s() {
                                    for (var o = arguments.length, a = at(o), h = o, c = hs(s); h--;) a[h] = arguments[h];
                                    var u = o < 3 && a[0] !== c && a[o - 1] !== c ? [] : ur(a, c);
                                    return (o -= u.length) < i ? Gn(t, e, zn, s.placeholder, r, a, u, r, r, i - o) : Me(this && this !== ge && this instanceof s ? n : t, this, a)
                                }
                            }(t, e, g) : e != a && 33 != e || f.length ? zn.apply(r, _) : function(t, e, r, i) {
                                var n = 1 & e,
                                    s = Ln(t);
                                return function e() {
                                    for (var o = -1, a = arguments.length, h = -1, c = i.length, u = at(c + a), l = this && this !== ge && this instanceof e ? s : t; ++h < c;) u[h] = i[h];
                                    for (; a--;) u[h++] = arguments[++o];
                                    return Me(l, n ? r : this, u)
                                }
                            }(t, e, n, l);
                            else var A = function(t, e, r) {
                                var i = 1 & e,
                                    n = Ln(t);
                                return function e() {
                                    return (this && this !== ge && this instanceof e ? n : t).apply(i ? r : this, arguments)
                                }
                            }(t, e, n);
                            return Ts((b ? tn : Cs)(A, _), t, e)
                        }

                        function Zn(t, e, i, n) {
                            return t === r || zo(t, Ut[i]) && !Bt.call(n, i) ? e : t
                        }

                        function ts(t, e, i, n, s, o) {
                            return ea(t) && ea(e) && (o.set(e, t), Fi(t, e, r, ts, o), o.delete(e)), t
                        }

                        function es(t) {
                            return sa(t) ? r : t
                        }

                        function rs(t, e, i, n, s, o) {
                            var a = 1 & i,
                                h = t.length,
                                c = e.length;
                            if (h != c && !(a && c > h)) return !1;
                            var u = o.get(t),
                                l = o.get(e);
                            if (u && l) return u == e && l == t;
                            var f = -1,
                                d = !0,
                                p = 2 & i ? new Gr : r;
                            for (o.set(t, e), o.set(e, t); ++f < h;) {
                                var g = t[f],
                                    m = e[f];
                                if (n) var y = a ? n(m, g, f, e, t, o) : n(g, m, f, t, e, o);
                                if (y !== r) {
                                    if (y) continue;
                                    d = !1;
                                    break
                                }
                                if (p) {
                                    if (!qe(e, (function(t, e) {
                                            if (!er(p, e) && (g === t || s(g, t, i, n, o))) return p.push(e)
                                        }))) {
                                        d = !1;
                                        break
                                    }
                                } else if (g !== m && !s(g, m, i, n, o)) {
                                    d = !1;
                                    break
                                }
                            }
                            return o.delete(t), o.delete(e), d
                        }

                        function is(t) {
                            return Rs(Ms(t, r, Vs), t + "")
                        }

                        function ns(t) {
                            return Si(t, Ra, ds)
                        }

                        function ss(t) {
                            return Si(t, Ta, ps)
                        }
                        var os = Cr ? function(t) {
                            return Cr.get(t)
                        } : ch;

                        function as(t) {
                            for (var e = t.name + "", r = Nr[e], i = Bt.call(Nr, e) ? r.length : 0; i--;) {
                                var n = r[i],
                                    s = n.func;
                                if (null == s || s == t) return n.name
                            }
                            return e
                        }

                        function hs(t) {
                            return (Bt.call(jr, "placeholder") ? jr : t).placeholder
                        }

                        function cs() {
                            var t = jr.iteratee || sh;
                            return t = t === sh ? Di : t, arguments.length ? t(arguments[0], arguments[1]) : t
                        }

                        function us(t, e) {
                            var r = t.__data__;
                            return function(t) {
                                var e = typeof t;
                                return "string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t
                            }(e) ? r["string" == typeof e ? "string" : "hash"] : r.map
                        }

                        function ls(t) {
                            for (var e = Ra(t), r = e.length; r--;) {
                                var i = e[r],
                                    n = t[i];
                                e[r] = [i, n, Is(n)]
                            }
                            return e
                        }

                        function fs(t, e) {
                            var i = function(t, e) {
                                return null == t ? r : t[e]
                            }(t, e);
                            return Ui(i) ? i : r
                        }
                        var ds = we ? function(t) {
                                return null == t ? [] : (t = xt(t), Re(we(t), (function(e) {
                                    return Yt.call(t, e)
                                })))
                            } : mh,
                            ps = we ? function(t) {
                                for (var e = []; t;) ke(e, ds(t)), t = Gt(t);
                                return e
                            } : mh,
                            gs = Ii;

                        function ms(t, e, r) {
                            for (var i = -1, n = (e = bn(e, t)).length, s = !1; ++i < n;) {
                                var o = Bs(e[i]);
                                if (!(s = null != t && r(t, o))) break;
                                t = t[o]
                            }
                            return s || ++i != n ? s : !!(n = null == t ? 0 : t.length) && ta(n) && ws(o, n) && (Vo(t) || Ko(t))
                        }

                        function ys(t) {
                            return "function" != typeof t.constructor || Ss(t) ? {} : zr(Gt(t))
                        }

                        function vs(t) {
                            return Vo(t) || Ko(t) || !!(Xt && t && t[Xt])
                        }

                        function ws(t, e) {
                            var r = typeof t;
                            return !!(e = e ? ? f) && ("number" == r || "symbol" != r && bt.test(t)) && t > -1 && t % 1 == 0 && t < e
                        }

                        function bs(t, e, r) {
                            if (!ea(r)) return !1;
                            var i = typeof e;
                            return !!("number" == i ? Wo(r) && ws(e, r.length) : "string" == i && e in r) && zo(r[e], t)
                        }

                        function _s(t, e) {
                            if (Vo(t)) return !1;
                            var r = typeof t;
                            return !("number" != r && "symbol" != r && "boolean" != r && null != t && !ca(t)) || (rt.test(t) || !et.test(t) || null != e && t in xt(e))
                        }

                        function As(t) {
                            var e = as(t),
                                r = jr[e];
                            if ("function" != typeof r || !(e in Kr.prototype)) return !1;
                            if (t === r) return !0;
                            var i = os(r);
                            return !!i && t === i[0]
                        }(Sr && gs(new Sr(new ArrayBuffer(1))) != D || Ir && gs(new Ir) != I || Pr && gs(Pr.resolve()) != x || Mr && gs(new Mr) != C || xr && gs(new xr) != T) && (gs = function(t) {
                            var e = Ii(t),
                                i = e == M ? t.constructor : r,
                                n = i ? Ls(i) : "";
                            if (n) switch (n) {
                                case Rr:
                                    return D;
                                case Tr:
                                    return I;
                                case Ur:
                                    return x;
                                case Dr:
                                    return C;
                                case kr:
                                    return T
                            }
                            return e
                        });
                        var Es = Dt ? Xo : yh;

                        function Ss(t) {
                            var e = t && t.constructor;
                            return t === ("function" == typeof e && e.prototype || Ut)
                        }

                        function Is(t) {
                            return t === t && !ea(t)
                        }

                        function Ps(t, e) {
                            return function(i) {
                                return null != i && (i[t] === e && (e !== r || t in xt(i)))
                            }
                        }

                        function Ms(t, e, i) {
                            return e = vr(e === r ? t.length - 1 : e, 0),
                                function() {
                                    for (var r = arguments, n = -1, s = vr(r.length - e, 0), o = at(s); ++n < s;) o[n] = r[e + n];
                                    n = -1;
                                    for (var a = at(e + 1); ++n < e;) a[n] = r[n];
                                    return a[e] = i(o), Me(t, this, a)
                                }
                        }

                        function xs(t, e) {
                            return e.length < 2 ? t : Ei(t, nn(e, 0, -1))
                        }

                        function Os(t, e) {
                            if (("constructor" !== e || "function" != typeof t[e]) && "__proto__" != e) return t[e]
                        }
                        var Cs = Us(tn),
                            Ns = pe || function(t, e) {
                                return ge.setTimeout(t, e)
                            },
                            Rs = Us(en);

                        function Ts(t, e, r) {
                            var i = e + "";
                            return Rs(t, function(t, e) {
                                var r = e.length;
                                if (!r) return t;
                                var i = r - 1;
                                return e[i] = (r > 1 ? "& " : "") + e[i], e = e.join(r > 2 ? ", " : " "), t.replace(ht, "{\n/* [wrapped with " + e + "] */\n")
                            }(i, function(t, e) {
                                return Oe(y, (function(r) {
                                    var i = "_." + r[0];
                                    e & r[1] && !Te(t, i) && t.push(i)
                                })), t.sort()
                            }(function(t) {
                                var e = t.match(ct);
                                return e ? e[1].split(ut) : []
                            }(i), r)))
                        }

                        function Us(t) {
                            var e = 0,
                                i = 0;
                            return function() {
                                var n = br(),
                                    s = 16 - (n - i);
                                if (i = n, s > 0) {
                                    if (++e >= 800) return arguments[0]
                                } else e = 0;
                                return t.apply(r, arguments)
                            }
                        }

                        function Ds(t, e) {
                            var i = -1,
                                n = t.length,
                                s = n - 1;
                            for (e = e === r ? n : e; ++i < e;) {
                                var o = Gi(i, s),
                                    a = t[o];
                                t[o] = t[i], t[i] = a
                            }
                            return t.length = e, t
                        }
                        var ks = function(t) {
                            var e = Do(t, (function(t) {
                                    return 500 === r.size && r.clear(), t
                                })),
                                r = e.cache;
                            return e
                        }((function(t) {
                            var e = [];
                            return 46 === t.charCodeAt(0) && e.push(""), t.replace(it, (function(t, r, i, n) {
                                e.push(i ? n.replace(dt, "$1") : r || t)
                            })), e
                        }));

                        function Bs(t) {
                            if ("string" == typeof t || ca(t)) return t;
                            var e = t + "";
                            return "0" == e && 1 / t == -l ? "-0" : e
                        }

                        function Ls(t) {
                            if (null != t) {
                                try {
                                    return kt.call(t)
                                } catch {}
                                try {
                                    return t + ""
                                } catch {}
                            }
                            return ""
                        }

                        function qs(t) {
                            if (t instanceof Kr) return t.clone();
                            var e = new Hr(t.__wrapped__, t.__chain__);
                            return e.__actions__ = Cn(t.__actions__), e.__index__ = t.__index__, e.__values__ = t.__values__, e
                        }
                        var js = Yi((function(t, e) {
                                return Go(t) ? li(t, yi(e, 1, Go, !0)) : []
                            })),
                            zs = Yi((function(t, e) {
                                var i = Ys(e);
                                return Go(i) && (i = r), Go(t) ? li(t, yi(e, 1, Go, !0), cs(i, 2)) : []
                            })),
                            Fs = Yi((function(t, e) {
                                var i = Ys(e);
                                return Go(i) && (i = r), Go(t) ? li(t, yi(e, 1, Go, !0), r, i) : []
                            }));

                        function Hs(t, e, r) {
                            var i = null == t ? 0 : t.length;
                            if (!i) return -1;
                            var n = null == r ? 0 : ga(r);
                            return n < 0 && (n = vr(i + n, 0)), Fe(t, cs(e, 3), n)
                        }

                        function Ks(t, e, i) {
                            var n = null == t ? 0 : t.length;
                            if (!n) return -1;
                            var s = n - 1;
                            return i !== r && (s = ga(i), s = i < 0 ? vr(n + s, 0) : wr(s, n - 1)), Fe(t, cs(e, 3), s, !0)
                        }

                        function Vs(t) {
                            return (null == t ? 0 : t.length) ? yi(t, 1) : []
                        }

                        function $s(t) {
                            return t && t.length ? t[0] : r
                        }
                        var Ws = Yi((function(t) {
                                var e = De(t, vn);
                                return e.length && e[0] === t[0] ? Oi(e) : []
                            })),
                            Gs = Yi((function(t) {
                                var e = Ys(t),
                                    i = De(t, vn);
                                return e === Ys(i) ? e = r : i.pop(), i.length && i[0] === t[0] ? Oi(i, cs(e, 2)) : []
                            })),
                            Qs = Yi((function(t) {
                                var e = Ys(t),
                                    i = De(t, vn);
                                return (e = "function" == typeof e ? e : r) && i.pop(), i.length && i[0] === t[0] ? Oi(i, r, e) : []
                            }));

                        function Ys(t) {
                            var e = null == t ? 0 : t.length;
                            return e ? t[e - 1] : r
                        }
                        var Js = Yi(Xs);

                        function Xs(t, e) {
                            return t && t.length && e && e.length ? $i(t, e) : t
                        }
                        var Zs = is((function(t, e) {
                            var r = null == t ? 0 : t.length,
                                i = oi(t, e);
                            return Wi(t, De(e, (function(t) {
                                return ws(t, r) ? +t : t
                            })).sort(Mn)), i
                        }));

                        function to(t) {
                            return null == t ? t : Er.call(t)
                        }
                        var eo = Yi((function(t) {
                                return ln(yi(t, 1, Go, !0))
                            })),
                            ro = Yi((function(t) {
                                var e = Ys(t);
                                return Go(e) && (e = r), ln(yi(t, 1, Go, !0), cs(e, 2))
                            })),
                            io = Yi((function(t) {
                                var e = Ys(t);
                                return e = "function" == typeof e ? e : r, ln(yi(t, 1, Go, !0), r, e)
                            }));

                        function no(t) {
                            if (!t || !t.length) return [];
                            var e = 0;
                            return t = Re(t, (function(t) {
                                if (Go(t)) return e = vr(t.length, e), !0
                            })), Je(e, (function(e) {
                                return De(t, We(e))
                            }))
                        }

                        function so(t, e) {
                            if (!t || !t.length) return [];
                            var i = no(t);
                            return null == e ? i : De(i, (function(t) {
                                return Me(e, r, t)
                            }))
                        }
                        var oo = Yi((function(t, e) {
                                return Go(t) ? li(t, e) : []
                            })),
                            ao = Yi((function(t) {
                                return mn(Re(t, Go))
                            })),
                            ho = Yi((function(t) {
                                var e = Ys(t);
                                return Go(e) && (e = r), mn(Re(t, Go), cs(e, 2))
                            })),
                            co = Yi((function(t) {
                                var e = Ys(t);
                                return e = "function" == typeof e ? e : r, mn(Re(t, Go), r, e)
                            })),
                            uo = Yi(no);
                        var lo = Yi((function(t) {
                            var e = t.length,
                                i = e > 1 ? t[e - 1] : r;
                            return i = "function" == typeof i ? (t.pop(), i) : r, so(t, i)
                        }));

                        function fo(t) {
                            var e = jr(t);
                            return e.__chain__ = !0, e
                        }

                        function po(t, e) {
                            return e(t)
                        }
                        var go = is((function(t) {
                            var e = t.length,
                                i = e ? t[0] : 0,
                                n = this.__wrapped__,
                                s = function(e) {
                                    return oi(e, t)
                                };
                            return !(e > 1 || this.__actions__.length) && n instanceof Kr && ws(i) ? ((n = n.slice(i, +i + (e ? 1 : 0))).__actions__.push({
                                func: po,
                                args: [s],
                                thisArg: r
                            }), new Hr(n, this.__chain__).thru((function(t) {
                                return e && !t.length && t.push(r), t
                            }))) : this.thru(s)
                        }));
                        var mo = Rn((function(t, e, r) {
                            Bt.call(t, r) ? ++t[r] : si(t, r, 1)
                        }));
                        var yo = qn(Hs),
                            vo = qn(Ks);

                        function wo(t, e) {
                            return (Vo(t) ? Oe : fi)(t, cs(e, 3))
                        }

                        function bo(t, e) {
                            return (Vo(t) ? Ce : di)(t, cs(e, 3))
                        }
                        var _o = Rn((function(t, e, r) {
                            Bt.call(t, r) ? t[r].push(e) : si(t, r, [e])
                        }));
                        var Ao = Yi((function(t, e, r) {
                                var i = -1,
                                    n = "function" == typeof e,
                                    s = Wo(t) ? at(t.length) : [];
                                return fi(t, (function(t) {
                                    s[++i] = n ? Me(e, t, r) : Ci(t, e, r)
                                })), s
                            })),
                            Eo = Rn((function(t, e, r) {
                                si(t, r, e)
                            }));

                        function So(t, e) {
                            return (Vo(t) ? De : qi)(t, cs(e, 3))
                        }
                        var Io = Rn((function(t, e, r) {
                            t[r ? 0 : 1].push(e)
                        }), (function() {
                            return [
                                [],
                                []
                            ]
                        }));
                        var Po = Yi((function(t, e) {
                                if (null == t) return [];
                                var r = e.length;
                                return r > 1 && bs(t, e[0], e[1]) ? e = [] : r > 2 && bs(e[0], e[1], e[2]) && (e = [e[0]]), Ki(t, yi(e, 1), [])
                            })),
                            Mo = de || function() {
                                return ge.Date.now()
                            };

                        function xo(t, e, i) {
                            return e = i ? r : e, e = t && null == e ? t.length : e, Xn(t, c, r, r, r, r, e)
                        }

                        function Oo(t, e) {
                            var n;
                            if ("function" != typeof e) throw new Nt(i);
                            return t = ga(t),
                                function() {
                                    return --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = r), n
                                }
                        }
                        var Co = Yi((function(t, e, r) {
                                var i = 1;
                                if (r.length) {
                                    var n = ur(r, hs(Co));
                                    i |= a
                                }
                                return Xn(t, i, e, r, n)
                            })),
                            No = Yi((function(t, e, r) {
                                var i = 3;
                                if (r.length) {
                                    var n = ur(r, hs(No));
                                    i |= a
                                }
                                return Xn(e, i, t, r, n)
                            }));

                        function Ro(t, e, n) {
                            var s, o, a, h, c, u, l = 0,
                                f = !1,
                                d = !1,
                                p = !0;
                            if ("function" != typeof t) throw new Nt(i);

                            function g(e) {
                                var i = s,
                                    n = o;
                                return s = o = r, l = e, h = t.apply(n, i)
                            }

                            function m(t) {
                                var i = t - u;
                                return u === r || i >= e || i < 0 || d && t - l >= a
                            }

                            function y() {
                                var t = Mo();
                                if (m(t)) return v(t);
                                c = Ns(y, function(t) {
                                    var r = e - (t - u);
                                    return d ? wr(r, a - (t - l)) : r
                                }(t))
                            }

                            function v(t) {
                                return c = r, p && s ? g(t) : (s = o = r, h)
                            }

                            function w() {
                                var t = Mo(),
                                    i = m(t);
                                if (s = arguments, o = this, u = t, i) {
                                    if (c === r) return function(t) {
                                        return l = t, c = Ns(y, e), f ? g(t) : h
                                    }(u);
                                    if (d) return En(c), c = Ns(y, e), g(u)
                                }
                                return c === r && (c = Ns(y, e)), h
                            }
                            return e = ya(e) || 0, ea(n) && (f = !!n.leading, a = (d = "maxWait" in n) ? vr(ya(n.maxWait) || 0, e) : a, p = "trailing" in n ? !!n.trailing : p), w.cancel = function() {
                                c !== r && En(c), l = 0, s = u = o = c = r
                            }, w.flush = function() {
                                return c === r ? h : v(Mo())
                            }, w
                        }
                        var To = Yi((function(t, e) {
                                return ui(t, 1, e)
                            })),
                            Uo = Yi((function(t, e, r) {
                                return ui(t, ya(e) || 0, r)
                            }));

                        function Do(t, e) {
                            if ("function" != typeof t || null != e && "function" != typeof e) throw new Nt(i);
                            var r = function() {
                                var i = arguments,
                                    n = e ? e.apply(this, i) : i[0],
                                    s = r.cache;
                                if (s.has(n)) return s.get(n);
                                var o = t.apply(this, i);
                                return r.cache = s.set(n, o) || s, o
                            };
                            return r.cache = new(Do.Cache || Wr), r
                        }

                        function ko(t) {
                            if ("function" != typeof t) throw new Nt(i);
                            return function() {
                                var e = arguments;
                                switch (e.length) {
                                    case 0:
                                        return !t.call(this);
                                    case 1:
                                        return !t.call(this, e[0]);
                                    case 2:
                                        return !t.call(this, e[0], e[1]);
                                    case 3:
                                        return !t.call(this, e[0], e[1], e[2])
                                }
                                return !t.apply(this, e)
                            }
                        }
                        Do.Cache = Wr;
                        var Bo = _n((function(t, e) {
                                var r = (e = 1 == e.length && Vo(e[0]) ? De(e[0], Ze(cs())) : De(yi(e, 1), Ze(cs()))).length;
                                return Yi((function(i) {
                                    for (var n = -1, s = wr(i.length, r); ++n < s;) i[n] = e[n].call(this, i[n]);
                                    return Me(t, this, i)
                                }))
                            })),
                            Lo = Yi((function(t, e) {
                                var i = ur(e, hs(Lo));
                                return Xn(t, a, r, e, i)
                            })),
                            qo = Yi((function(t, e) {
                                var i = ur(e, hs(qo));
                                return Xn(t, h, r, e, i)
                            })),
                            jo = is((function(t, e) {
                                return Xn(t, u, r, r, r, e)
                            }));

                        function zo(t, e) {
                            return t === e || t !== t && e !== e
                        }
                        var Fo = Wn(Pi),
                            Ho = Wn((function(t, e) {
                                return t >= e
                            })),
                            Ko = Ni(function() {
                                return arguments
                            }()) ? Ni : function(t) {
                                return ra(t) && Bt.call(t, "callee") && !Yt.call(t, "callee")
                            },
                            Vo = at.isArray,
                            $o = _e ? Ze(_e) : function(t) {
                                return ra(t) && Ii(t) == U
                            };

                        function Wo(t) {
                            return null != t && ta(t.length) && !Xo(t)
                        }

                        function Go(t) {
                            return ra(t) && Wo(t)
                        }
                        var Qo = be || yh,
                            Yo = Ae ? Ze(Ae) : function(t) {
                                return ra(t) && Ii(t) == _
                            };

                        function Jo(t) {
                            if (!ra(t)) return !1;
                            var e = Ii(t);
                            return e == A || "[object DOMException]" == e || "string" == typeof t.message && "string" == typeof t.name && !sa(t)
                        }

                        function Xo(t) {
                            if (!ea(t)) return !1;
                            var e = Ii(t);
                            return e == E || e == S || "[object AsyncFunction]" == e || "[object Proxy]" == e
                        }

                        function Zo(t) {
                            return "number" == typeof t && t == ga(t)
                        }

                        function ta(t) {
                            return "number" == typeof t && t > -1 && t % 1 == 0 && t <= f
                        }

                        function ea(t) {
                            var e = typeof t;
                            return null != t && ("object" == e || "function" == e)
                        }

                        function ra(t) {
                            return null != t && "object" == typeof t
                        }
                        var ia = Ee ? Ze(Ee) : function(t) {
                            return ra(t) && gs(t) == I
                        };

                        function na(t) {
                            return "number" == typeof t || ra(t) && Ii(t) == P
                        }

                        function sa(t) {
                            if (!ra(t) || Ii(t) != M) return !1;
                            var e = Gt(t);
                            if (null === e) return !0;
                            var r = Bt.call(e, "constructor") && e.constructor;
                            return "function" == typeof r && r instanceof r && kt.call(r) == zt
                        }
                        var oa = Se ? Ze(Se) : function(t) {
                            return ra(t) && Ii(t) == O
                        };
                        var aa = Ie ? Ze(Ie) : function(t) {
                            return ra(t) && gs(t) == C
                        };

                        function ha(t) {
                            return "string" == typeof t || !Vo(t) && ra(t) && Ii(t) == N
                        }

                        function ca(t) {
                            return "symbol" == typeof t || ra(t) && Ii(t) == R
                        }
                        var ua = Pe ? Ze(Pe) : function(t) {
                            return ra(t) && ta(t.length) && !!he[Ii(t)]
                        };
                        var la = Wn(Li),
                            fa = Wn((function(t, e) {
                                return t <= e
                            }));

                        function da(t) {
                            if (!t) return [];
                            if (Wo(t)) return ha(t) ? dr(t) : Cn(t);
                            if (Zt && t[Zt]) return function(t) {
                                for (var e, r = []; !(e = t.next()).done;) r.push(e.value);
                                return r
                            }(t[Zt]());
                            var e = gs(t);
                            return (e == I ? hr : e == C ? lr : za)(t)
                        }

                        function pa(t) {
                            return t ? (t = ya(t)) === l || t === -l ? 17976931348623157e292 * (t < 0 ? -1 : 1) : t === t ? t : 0 : 0 === t ? t : 0
                        }

                        function ga(t) {
                            var e = pa(t),
                                r = e % 1;
                            return e === e ? r ? e - r : e : 0
                        }

                        function ma(t) {
                            return t ? ai(ga(t), 0, p) : 0
                        }

                        function ya(t) {
                            if ("number" == typeof t) return t;
                            if (ca(t)) return d;
                            if (ea(t)) {
                                var e = "function" == typeof t.valueOf ? t.valueOf() : t;
                                t = ea(e) ? e + "" : e
                            }
                            if ("string" != typeof t) return 0 === t ? t : +t;
                            t = Xe(t);
                            var r = yt.test(t);
                            return r || wt.test(t) ? fe(t.slice(2), r ? 2 : 8) : mt.test(t) ? d : +t
                        }

                        function va(t) {
                            return Nn(t, Ta(t))
                        }

                        function wa(t) {
                            return null == t ? "" : un(t)
                        }
                        var ba = Tn((function(t, e) {
                                if (Ss(e) || Wo(e)) Nn(e, Ra(e), t);
                                else
                                    for (var r in e) Bt.call(e, r) && ei(t, r, e[r])
                            })),
                            _a = Tn((function(t, e) {
                                Nn(e, Ta(e), t)
                            })),
                            Aa = Tn((function(t, e, r, i) {
                                Nn(e, Ta(e), t, i)
                            })),
                            Ea = Tn((function(t, e, r, i) {
                                Nn(e, Ra(e), t, i)
                            })),
                            Sa = is(oi);
                        var Ia = Yi((function(t, e) {
                                t = xt(t);
                                var i = -1,
                                    n = e.length,
                                    s = n > 2 ? e[2] : r;
                                for (s && bs(e[0], e[1], s) && (n = 1); ++i < n;)
                                    for (var o = e[i], a = Ta(o), h = -1, c = a.length; ++h < c;) {
                                        var u = a[h],
                                            l = t[u];
                                        (l === r || zo(l, Ut[u]) && !Bt.call(t, u)) && (t[u] = o[u])
                                    }
                                return t
                            })),
                            Pa = Yi((function(t) {
                                return t.push(r, ts), Me(Da, r, t)
                            }));

                        function Ma(t, e, i) {
                            var n = null == t ? r : Ei(t, e);
                            return n === r ? i : n
                        }

                        function xa(t, e) {
                            return null != t && ms(t, e, xi)
                        }
                        var Oa = Fn((function(t, e, r) {
                                null != e && "function" != typeof e.toString && (e = jt.call(e)), t[e] = r
                            }), eh(nh)),
                            Ca = Fn((function(t, e, r) {
                                null != e && "function" != typeof e.toString && (e = jt.call(e)), Bt.call(t, e) ? t[e].push(r) : t[e] = [r]
                            }), cs),
                            Na = Yi(Ci);

                        function Ra(t) {
                            return Wo(t) ? Yr(t) : ki(t)
                        }

                        function Ta(t) {
                            return Wo(t) ? Yr(t, !0) : Bi(t)
                        }
                        var Ua = Tn((function(t, e, r) {
                                Fi(t, e, r)
                            })),
                            Da = Tn((function(t, e, r, i) {
                                Fi(t, e, r, i)
                            })),
                            ka = is((function(t, e) {
                                var r = {};
                                if (null == t) return r;
                                var i = !1;
                                e = De(e, (function(e) {
                                    return e = bn(e, t), i || (i = e.length > 1), e
                                })), Nn(t, ss(t), r), i && (r = hi(r, 7, es));
                                for (var n = e.length; n--;) fn(r, e[n]);
                                return r
                            }));
                        var Ba = is((function(t, e) {
                            return null == t ? {} : function(t, e) {
                                return Vi(t, e, (function(e, r) {
                                    return xa(t, r)
                                }))
                            }(t, e)
                        }));

                        function La(t, e) {
                            if (null == t) return {};
                            var r = De(ss(t), (function(t) {
                                return [t]
                            }));
                            return e = cs(e), Vi(t, r, (function(t, r) {
                                return e(t, r[0])
                            }))
                        }
                        var qa = Jn(Ra),
                            ja = Jn(Ta);

                        function za(t) {
                            return null == t ? [] : tr(t, Ra(t))
                        }
                        var Fa = Bn((function(t, e, r) {
                            return e = e.toLowerCase(), t + (r ? Ha(e) : e)
                        }));

                        function Ha(t) {
                            return Ja(wa(t).toLowerCase())
                        }

                        function Ka(t) {
                            return (t = wa(t)) && t.replace(_t, nr).replace(ee, "")
                        }
                        var Va = Bn((function(t, e, r) {
                                return t + (r ? "-" : "") + e.toLowerCase()
                            })),
                            $a = Bn((function(t, e, r) {
                                return t + (r ? " " : "") + e.toLowerCase()
                            })),
                            Wa = kn("toLowerCase");
                        var Ga = Bn((function(t, e, r) {
                            return t + (r ? "_" : "") + e.toLowerCase()
                        }));
                        var Qa = Bn((function(t, e, r) {
                            return t + (r ? " " : "") + Ja(e)
                        }));
                        var Ya = Bn((function(t, e, r) {
                                return t + (r ? " " : "") + e.toUpperCase()
                            })),
                            Ja = kn("toUpperCase");

                        function Xa(t, e, i) {
                            return t = wa(t), (e = i ? r : e) === r ? function(t) {
                                return se.test(t)
                            }(t) ? function(t) {
                                return t.match(ie) || []
                            }(t) : function(t) {
                                return t.match(lt) || []
                            }(t) : t.match(e) || []
                        }
                        var Za = Yi((function(t, e) {
                                try {
                                    return Me(t, r, e)
                                } catch (i) {
                                    return Jo(i) ? i : new It(i)
                                }
                            })),
                            th = is((function(t, e) {
                                return Oe(e, (function(e) {
                                    e = Bs(e), si(t, e, Co(t[e], t))
                                })), t
                            }));

                        function eh(t) {
                            return function() {
                                return t
                            }
                        }
                        var rh = jn(),
                            ih = jn(!0);

                        function nh(t) {
                            return t
                        }

                        function sh(t) {
                            return Di("function" == typeof t ? t : hi(t, 1))
                        }
                        var oh = Yi((function(t, e) {
                                return function(r) {
                                    return Ci(r, t, e)
                                }
                            })),
                            ah = Yi((function(t, e) {
                                return function(r) {
                                    return Ci(t, r, e)
                                }
                            }));

                        function hh(t, e, r) {
                            var i = Ra(e),
                                n = Ai(e, i);
                            null == r && (!ea(e) || !n.length && i.length) && (r = e, e = t, t = this, n = Ai(e, Ra(e)));
                            var s = !(ea(r) && "chain" in r) || !!r.chain,
                                o = Xo(t);
                            return Oe(n, (function(r) {
                                var i = e[r];
                                t[r] = i, o && (t.prototype[r] = function() {
                                    var e = this.__chain__;
                                    if (s || e) {
                                        var r = t(this.__wrapped__);
                                        return (r.__actions__ = Cn(this.__actions__)).push({
                                            func: i,
                                            args: arguments,
                                            thisArg: t
                                        }), r.__chain__ = e, r
                                    }
                                    return i.apply(t, ke([this.value()], arguments))
                                })
                            })), t
                        }

                        function ch() {}
                        var uh = Kn(De),
                            lh = Kn(Ne),
                            fh = Kn(qe);

                        function dh(t) {
                            return _s(t) ? We(Bs(t)) : function(t) {
                                return function(e) {
                                    return Ei(e, t)
                                }
                            }(t)
                        }
                        var ph = $n(),
                            gh = $n(!0);

                        function mh() {
                            return []
                        }

                        function yh() {
                            return !1
                        }
                        var vh = Hn((function(t, e) {
                                return t + e
                            }), 0),
                            wh = Qn("ceil"),
                            bh = Hn((function(t, e) {
                                return t / e
                            }), 1),
                            _h = Qn("floor");
                        var Ah = Hn((function(t, e) {
                                return t * e
                            }), 1),
                            Eh = Qn("round"),
                            Sh = Hn((function(t, e) {
                                return t - e
                            }), 0);
                        return jr.after = function(t, e) {
                            if ("function" != typeof e) throw new Nt(i);
                            return t = ga(t),
                                function() {
                                    if (--t < 1) return e.apply(this, arguments)
                                }
                        }, jr.ary = xo, jr.assign = ba, jr.assignIn = _a, jr.assignInWith = Aa, jr.assignWith = Ea, jr.at = Sa, jr.before = Oo, jr.bind = Co, jr.bindAll = th, jr.bindKey = No, jr.castArray = function() {
                            if (!arguments.length) return [];
                            var t = arguments[0];
                            return Vo(t) ? t : [t]
                        }, jr.chain = fo, jr.chunk = function(t, e, i) {
                            e = (i ? bs(t, e, i) : e === r) ? 1 : vr(ga(e), 0);
                            var n = null == t ? 0 : t.length;
                            if (!n || e < 1) return [];
                            for (var s = 0, o = 0, a = at(me(n / e)); s < n;) a[o++] = nn(t, s, s += e);
                            return a
                        }, jr.compact = function(t) {
                            for (var e = -1, r = null == t ? 0 : t.length, i = 0, n = []; ++e < r;) {
                                var s = t[e];
                                s && (n[i++] = s)
                            }
                            return n
                        }, jr.concat = function() {
                            var t = arguments.length;
                            if (!t) return [];
                            for (var e = at(t - 1), r = arguments[0], i = t; i--;) e[i - 1] = arguments[i];
                            return ke(Vo(r) ? Cn(r) : [r], yi(e, 1))
                        }, jr.cond = function(t) {
                            var e = null == t ? 0 : t.length,
                                r = cs();
                            return t = e ? De(t, (function(t) {
                                if ("function" != typeof t[1]) throw new Nt(i);
                                return [r(t[0]), t[1]]
                            })) : [], Yi((function(r) {
                                for (var i = -1; ++i < e;) {
                                    var n = t[i];
                                    if (Me(n[0], this, r)) return Me(n[1], this, r)
                                }
                            }))
                        }, jr.conforms = function(t) {
                            return function(t) {
                                var e = Ra(t);
                                return function(r) {
                                    return ci(r, t, e)
                                }
                            }(hi(t, 1))
                        }, jr.constant = eh, jr.countBy = mo, jr.create = function(t, e) {
                            var r = zr(t);
                            return null == e ? r : ni(r, e)
                        }, jr.curry = function t(e, i, n) {
                            var s = Xn(e, 8, r, r, r, r, r, i = n ? r : i);
                            return s.placeholder = t.placeholder, s
                        }, jr.curryRight = function t(e, i, n) {
                            var s = Xn(e, o, r, r, r, r, r, i = n ? r : i);
                            return s.placeholder = t.placeholder, s
                        }, jr.debounce = Ro, jr.defaults = Ia, jr.defaultsDeep = Pa, jr.defer = To, jr.delay = Uo, jr.difference = js, jr.differenceBy = zs, jr.differenceWith = Fs, jr.drop = function(t, e, i) {
                            var n = null == t ? 0 : t.length;
                            return n ? nn(t, (e = i || e === r ? 1 : ga(e)) < 0 ? 0 : e, n) : []
                        }, jr.dropRight = function(t, e, i) {
                            var n = null == t ? 0 : t.length;
                            return n ? nn(t, 0, (e = n - (e = i || e === r ? 1 : ga(e))) < 0 ? 0 : e) : []
                        }, jr.dropRightWhile = function(t, e) {
                            return t && t.length ? pn(t, cs(e, 3), !0, !0) : []
                        }, jr.dropWhile = function(t, e) {
                            return t && t.length ? pn(t, cs(e, 3), !0) : []
                        }, jr.fill = function(t, e, i, n) {
                            var s = null == t ? 0 : t.length;
                            return s ? (i && "number" != typeof i && bs(t, e, i) && (i = 0, n = s), function(t, e, i, n) {
                                var s = t.length;
                                for ((i = ga(i)) < 0 && (i = -i > s ? 0 : s + i), (n = n === r || n > s ? s : ga(n)) < 0 && (n += s), n = i > n ? 0 : ma(n); i < n;) t[i++] = e;
                                return t
                            }(t, e, i, n)) : []
                        }, jr.filter = function(t, e) {
                            return (Vo(t) ? Re : mi)(t, cs(e, 3))
                        }, jr.flatMap = function(t, e) {
                            return yi(So(t, e), 1)
                        }, jr.flatMapDeep = function(t, e) {
                            return yi(So(t, e), l)
                        }, jr.flatMapDepth = function(t, e, i) {
                            return i = i === r ? 1 : ga(i), yi(So(t, e), i)
                        }, jr.flatten = Vs, jr.flattenDeep = function(t) {
                            return (null == t ? 0 : t.length) ? yi(t, l) : []
                        }, jr.flattenDepth = function(t, e) {
                            return (null == t ? 0 : t.length) ? yi(t, e = e === r ? 1 : ga(e)) : []
                        }, jr.flip = function(t) {
                            return Xn(t, 512)
                        }, jr.flow = rh, jr.flowRight = ih, jr.fromPairs = function(t) {
                            for (var e = -1, r = null == t ? 0 : t.length, i = {}; ++e < r;) {
                                var n = t[e];
                                i[n[0]] = n[1]
                            }
                            return i
                        }, jr.functions = function(t) {
                            return null == t ? [] : Ai(t, Ra(t))
                        }, jr.functionsIn = function(t) {
                            return null == t ? [] : Ai(t, Ta(t))
                        }, jr.groupBy = _o, jr.initial = function(t) {
                            return (null == t ? 0 : t.length) ? nn(t, 0, -1) : []
                        }, jr.intersection = Ws, jr.intersectionBy = Gs, jr.intersectionWith = Qs, jr.invert = Oa, jr.invertBy = Ca, jr.invokeMap = Ao, jr.iteratee = sh, jr.keyBy = Eo, jr.keys = Ra, jr.keysIn = Ta, jr.map = So, jr.mapKeys = function(t, e) {
                            var r = {};
                            return e = cs(e, 3), bi(t, (function(t, i, n) {
                                si(r, e(t, i, n), t)
                            })), r
                        }, jr.mapValues = function(t, e) {
                            var r = {};
                            return e = cs(e, 3), bi(t, (function(t, i, n) {
                                si(r, i, e(t, i, n))
                            })), r
                        }, jr.matches = function(t) {
                            return ji(hi(t, 1))
                        }, jr.matchesProperty = function(t, e) {
                            return zi(t, hi(e, 1))
                        }, jr.memoize = Do, jr.merge = Ua, jr.mergeWith = Da, jr.method = oh, jr.methodOf = ah, jr.mixin = hh, jr.negate = ko, jr.nthArg = function(t) {
                            return t = ga(t), Yi((function(e) {
                                return Hi(e, t)
                            }))
                        }, jr.omit = ka, jr.omitBy = function(t, e) {
                            return La(t, ko(cs(e)))
                        }, jr.once = function(t) {
                            return Oo(2, t)
                        }, jr.orderBy = function(t, e, i, n) {
                            return null == t ? [] : (Vo(e) || (e = null == e ? [] : [e]), Vo(i = n ? r : i) || (i = null == i ? [] : [i]), Ki(t, e, i))
                        }, jr.over = uh, jr.overArgs = Bo, jr.overEvery = lh, jr.overSome = fh, jr.partial = Lo, jr.partialRight = qo, jr.partition = Io, jr.pick = Ba, jr.pickBy = La, jr.property = dh, jr.propertyOf = function(t) {
                            return function(e) {
                                return null == t ? r : Ei(t, e)
                            }
                        }, jr.pull = Js, jr.pullAll = Xs, jr.pullAllBy = function(t, e, r) {
                            return t && t.length && e && e.length ? $i(t, e, cs(r, 2)) : t
                        }, jr.pullAllWith = function(t, e, i) {
                            return t && t.length && e && e.length ? $i(t, e, r, i) : t
                        }, jr.pullAt = Zs, jr.range = ph, jr.rangeRight = gh, jr.rearg = jo, jr.reject = function(t, e) {
                            return (Vo(t) ? Re : mi)(t, ko(cs(e, 3)))
                        }, jr.remove = function(t, e) {
                            var r = [];
                            if (!t || !t.length) return r;
                            var i = -1,
                                n = [],
                                s = t.length;
                            for (e = cs(e, 3); ++i < s;) {
                                var o = t[i];
                                e(o, i, t) && (r.push(o), n.push(i))
                            }
                            return Wi(t, n), r
                        }, jr.rest = function(t, e) {
                            if ("function" != typeof t) throw new Nt(i);
                            return Yi(t, e = e === r ? e : ga(e))
                        }, jr.reverse = to, jr.sampleSize = function(t, e, i) {
                            return e = (i ? bs(t, e, i) : e === r) ? 1 : ga(e), (Vo(t) ? Xr : Xi)(t, e)
                        }, jr.set = function(t, e, r) {
                            return null == t ? t : Zi(t, e, r)
                        }, jr.setWith = function(t, e, i, n) {
                            return n = "function" == typeof n ? n : r, null == t ? t : Zi(t, e, i, n)
                        }, jr.shuffle = function(t) {
                            return (Vo(t) ? Zr : rn)(t)
                        }, jr.slice = function(t, e, i) {
                            var n = null == t ? 0 : t.length;
                            return n ? (i && "number" != typeof i && bs(t, e, i) ? (e = 0, i = n) : (e = null == e ? 0 : ga(e), i = i === r ? n : ga(i)), nn(t, e, i)) : []
                        }, jr.sortBy = Po, jr.sortedUniq = function(t) {
                            return t && t.length ? hn(t) : []
                        }, jr.sortedUniqBy = function(t, e) {
                            return t && t.length ? hn(t, cs(e, 2)) : []
                        }, jr.split = function(t, e, i) {
                            return i && "number" != typeof i && bs(t, e, i) && (e = i = r), (i = i === r ? p : i >>> 0) ? (t = wa(t)) && ("string" == typeof e || null != e && !oa(e)) && (!(e = un(e)) && ar(t)) ? An(dr(t), 0, i) : t.split(e, i) : []
                        }, jr.spread = function(t, e) {
                            if ("function" != typeof t) throw new Nt(i);
                            return e = null == e ? 0 : vr(ga(e), 0), Yi((function(r) {
                                var i = r[e],
                                    n = An(r, 0, e);
                                return i && ke(n, i), Me(t, this, n)
                            }))
                        }, jr.tail = function(t) {
                            var e = null == t ? 0 : t.length;
                            return e ? nn(t, 1, e) : []
                        }, jr.take = function(t, e, i) {
                            return t && t.length ? nn(t, 0, (e = i || e === r ? 1 : ga(e)) < 0 ? 0 : e) : []
                        }, jr.takeRight = function(t, e, i) {
                            var n = null == t ? 0 : t.length;
                            return n ? nn(t, (e = n - (e = i || e === r ? 1 : ga(e))) < 0 ? 0 : e, n) : []
                        }, jr.takeRightWhile = function(t, e) {
                            return t && t.length ? pn(t, cs(e, 3), !1, !0) : []
                        }, jr.takeWhile = function(t, e) {
                            return t && t.length ? pn(t, cs(e, 3)) : []
                        }, jr.tap = function(t, e) {
                            return e(t), t
                        }, jr.throttle = function(t, e, r) {
                            var n = !0,
                                s = !0;
                            if ("function" != typeof t) throw new Nt(i);
                            return ea(r) && (n = "leading" in r ? !!r.leading : n, s = "trailing" in r ? !!r.trailing : s), Ro(t, e, {
                                leading: n,
                                maxWait: e,
                                trailing: s
                            })
                        }, jr.thru = po, jr.toArray = da, jr.toPairs = qa, jr.toPairsIn = ja, jr.toPath = function(t) {
                            return Vo(t) ? De(t, Bs) : ca(t) ? [t] : Cn(ks(wa(t)))
                        }, jr.toPlainObject = va, jr.transform = function(t, e, r) {
                            var i = Vo(t),
                                n = i || Qo(t) || ua(t);
                            if (e = cs(e, 4), null == r) {
                                var s = t && t.constructor;
                                r = n ? i ? new s : [] : ea(t) && Xo(s) ? zr(Gt(t)) : {}
                            }
                            return (n ? Oe : bi)(t, (function(t, i, n) {
                                return e(r, t, i, n)
                            })), r
                        }, jr.unary = function(t) {
                            return xo(t, 1)
                        }, jr.union = eo, jr.unionBy = ro, jr.unionWith = io, jr.uniq = function(t) {
                            return t && t.length ? ln(t) : []
                        }, jr.uniqBy = function(t, e) {
                            return t && t.length ? ln(t, cs(e, 2)) : []
                        }, jr.uniqWith = function(t, e) {
                            return e = "function" == typeof e ? e : r, t && t.length ? ln(t, r, e) : []
                        }, jr.unset = function(t, e) {
                            return null == t || fn(t, e)
                        }, jr.unzip = no, jr.unzipWith = so, jr.update = function(t, e, r) {
                            return null == t ? t : dn(t, e, wn(r))
                        }, jr.updateWith = function(t, e, i, n) {
                            return n = "function" == typeof n ? n : r, null == t ? t : dn(t, e, wn(i), n)
                        }, jr.values = za, jr.valuesIn = function(t) {
                            return null == t ? [] : tr(t, Ta(t))
                        }, jr.without = oo, jr.words = Xa, jr.wrap = function(t, e) {
                            return Lo(wn(e), t)
                        }, jr.xor = ao, jr.xorBy = ho, jr.xorWith = co, jr.zip = uo, jr.zipObject = function(t, e) {
                            return yn(t || [], e || [], ei)
                        }, jr.zipObjectDeep = function(t, e) {
                            return yn(t || [], e || [], Zi)
                        }, jr.zipWith = lo, jr.entries = qa, jr.entriesIn = ja, jr.extend = _a, jr.extendWith = Aa, hh(jr, jr), jr.add = vh, jr.attempt = Za, jr.camelCase = Fa, jr.capitalize = Ha, jr.ceil = wh, jr.clamp = function(t, e, i) {
                            return i === r && (i = e, e = r), i !== r && (i = (i = ya(i)) === i ? i : 0), e !== r && (e = (e = ya(e)) === e ? e : 0), ai(ya(t), e, i)
                        }, jr.clone = function(t) {
                            return hi(t, 4)
                        }, jr.cloneDeep = function(t) {
                            return hi(t, 5)
                        }, jr.cloneDeepWith = function(t, e) {
                            return hi(t, 5, e = "function" == typeof e ? e : r)
                        }, jr.cloneWith = function(t, e) {
                            return hi(t, 4, e = "function" == typeof e ? e : r)
                        }, jr.conformsTo = function(t, e) {
                            return null == e || ci(t, e, Ra(e))
                        }, jr.deburr = Ka, jr.defaultTo = function(t, e) {
                            return null == t || t !== t ? e : t
                        }, jr.divide = bh, jr.endsWith = function(t, e, i) {
                            t = wa(t), e = un(e);
                            var n = t.length,
                                s = i = i === r ? n : ai(ga(i), 0, n);
                            return (i -= e.length) >= 0 && t.slice(i, s) == e
                        }, jr.eq = zo, jr.escape = function(t) {
                            return (t = wa(t)) && J.test(t) ? t.replace(Q, sr) : t
                        }, jr.escapeRegExp = function(t) {
                            return (t = wa(t)) && st.test(t) ? t.replace(nt, "\\$&") : t
                        }, jr.every = function(t, e, i) {
                            var n = Vo(t) ? Ne : pi;
                            return i && bs(t, e, i) && (e = r), n(t, cs(e, 3))
                        }, jr.find = yo, jr.findIndex = Hs, jr.findKey = function(t, e) {
                            return ze(t, cs(e, 3), bi)
                        }, jr.findLast = vo, jr.findLastIndex = Ks, jr.findLastKey = function(t, e) {
                            return ze(t, cs(e, 3), _i)
                        }, jr.floor = _h, jr.forEach = wo, jr.forEachRight = bo, jr.forIn = function(t, e) {
                            return null == t ? t : vi(t, cs(e, 3), Ta)
                        }, jr.forInRight = function(t, e) {
                            return null == t ? t : wi(t, cs(e, 3), Ta)
                        }, jr.forOwn = function(t, e) {
                            return t && bi(t, cs(e, 3))
                        }, jr.forOwnRight = function(t, e) {
                            return t && _i(t, cs(e, 3))
                        }, jr.get = Ma, jr.gt = Fo, jr.gte = Ho, jr.has = function(t, e) {
                            return null != t && ms(t, e, Mi)
                        }, jr.hasIn = xa, jr.head = $s, jr.identity = nh, jr.includes = function(t, e, r, i) {
                            t = Wo(t) ? t : za(t), r = r && !i ? ga(r) : 0;
                            var n = t.length;
                            return r < 0 && (r = vr(n + r, 0)), ha(t) ? r <= n && t.indexOf(e, r) > -1 : !!n && He(t, e, r) > -1
                        }, jr.indexOf = function(t, e, r) {
                            var i = null == t ? 0 : t.length;
                            if (!i) return -1;
                            var n = null == r ? 0 : ga(r);
                            return n < 0 && (n = vr(i + n, 0)), He(t, e, n)
                        }, jr.inRange = function(t, e, i) {
                            return e = pa(e), i === r ? (i = e, e = 0) : i = pa(i),
                                function(t, e, r) {
                                    return t >= wr(e, r) && t < vr(e, r)
                                }(t = ya(t), e, i)
                        }, jr.invoke = Na, jr.isArguments = Ko, jr.isArray = Vo, jr.isArrayBuffer = $o, jr.isArrayLike = Wo, jr.isArrayLikeObject = Go, jr.isBoolean = function(t) {
                            return !0 === t || !1 === t || ra(t) && Ii(t) == b
                        }, jr.isBuffer = Qo, jr.isDate = Yo, jr.isElement = function(t) {
                            return ra(t) && 1 === t.nodeType && !sa(t)
                        }, jr.isEmpty = function(t) {
                            if (null == t) return !0;
                            if (Wo(t) && (Vo(t) || "string" == typeof t || "function" == typeof t.splice || Qo(t) || ua(t) || Ko(t))) return !t.length;
                            var e = gs(t);
                            if (e == I || e == C) return !t.size;
                            if (Ss(t)) return !ki(t).length;
                            for (var r in t)
                                if (Bt.call(t, r)) return !1;
                            return !0
                        }, jr.isEqual = function(t, e) {
                            return Ri(t, e)
                        }, jr.isEqualWith = function(t, e, i) {
                            var n = (i = "function" == typeof i ? i : r) ? i(t, e) : r;
                            return n === r ? Ri(t, e, r, i) : !!n
                        }, jr.isError = Jo, jr.isFinite = function(t) {
                            return "number" == typeof t && je(t)
                        }, jr.isFunction = Xo, jr.isInteger = Zo, jr.isLength = ta, jr.isMap = ia, jr.isMatch = function(t, e) {
                            return t === e || Ti(t, e, ls(e))
                        }, jr.isMatchWith = function(t, e, i) {
                            return i = "function" == typeof i ? i : r, Ti(t, e, ls(e), i)
                        }, jr.isNaN = function(t) {
                            return na(t) && t != +t
                        }, jr.isNative = function(t) {
                            if (Es(t)) throw new It("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
                            return Ui(t)
                        }, jr.isNil = function(t) {
                            return null == t
                        }, jr.isNull = function(t) {
                            return null === t
                        }, jr.isNumber = na, jr.isObject = ea, jr.isObjectLike = ra, jr.isPlainObject = sa, jr.isRegExp = oa, jr.isSafeInteger = function(t) {
                            return Zo(t) && t >= -f && t <= f
                        }, jr.isSet = aa, jr.isString = ha, jr.isSymbol = ca, jr.isTypedArray = ua, jr.isUndefined = function(t) {
                            return t === r
                        }, jr.isWeakMap = function(t) {
                            return ra(t) && gs(t) == T
                        }, jr.isWeakSet = function(t) {
                            return ra(t) && "[object WeakSet]" == Ii(t)
                        }, jr.join = function(t, e) {
                            return null == t ? "" : Ge.call(t, e)
                        }, jr.kebabCase = Va, jr.last = Ys, jr.lastIndexOf = function(t, e, i) {
                            var n = null == t ? 0 : t.length;
                            if (!n) return -1;
                            var s = n;
                            return i !== r && (s = (s = ga(i)) < 0 ? vr(n + s, 0) : wr(s, n - 1)), e === e ? function(t, e, r) {
                                for (var i = r + 1; i--;)
                                    if (t[i] === e) return i;
                                return i
                            }(t, e, s) : Fe(t, Ve, s, !0)
                        }, jr.lowerCase = $a, jr.lowerFirst = Wa, jr.lt = la, jr.lte = fa, jr.max = function(t) {
                            return t && t.length ? gi(t, nh, Pi) : r
                        }, jr.maxBy = function(t, e) {
                            return t && t.length ? gi(t, cs(e, 2), Pi) : r
                        }, jr.mean = function(t) {
                            return $e(t, nh)
                        }, jr.meanBy = function(t, e) {
                            return $e(t, cs(e, 2))
                        }, jr.min = function(t) {
                            return t && t.length ? gi(t, nh, Li) : r
                        }, jr.minBy = function(t, e) {
                            return t && t.length ? gi(t, cs(e, 2), Li) : r
                        }, jr.stubArray = mh, jr.stubFalse = yh, jr.stubObject = function() {
                            return {}
                        }, jr.stubString = function() {
                            return ""
                        }, jr.stubTrue = function() {
                            return !0
                        }, jr.multiply = Ah, jr.nth = function(t, e) {
                            return t && t.length ? Hi(t, ga(e)) : r
                        }, jr.noConflict = function() {
                            return ge._ === this && (ge._ = Ft), this
                        }, jr.noop = ch, jr.now = Mo, jr.pad = function(t, e, r) {
                            t = wa(t);
                            var i = (e = ga(e)) ? fr(t) : 0;
                            if (!e || i >= e) return t;
                            var n = (e - i) / 2;
                            return Vn(ye(n), r) + t + Vn(me(n), r)
                        }, jr.padEnd = function(t, e, r) {
                            t = wa(t);
                            var i = (e = ga(e)) ? fr(t) : 0;
                            return e && i < e ? t + Vn(e - i, r) : t
                        }, jr.padStart = function(t, e, r) {
                            t = wa(t);
                            var i = (e = ga(e)) ? fr(t) : 0;
                            return e && i < e ? Vn(e - i, r) + t : t
                        }, jr.parseInt = function(t, e, r) {
                            return r || null == e ? e = 0 : e && (e = +e), _r(wa(t).replace(ot, ""), e || 0)
                        }, jr.random = function(t, e, i) {
                            if (i && "boolean" != typeof i && bs(t, e, i) && (e = i = r), i === r && ("boolean" == typeof e ? (i = e, e = r) : "boolean" == typeof t && (i = t, t = r)), t === r && e === r ? (t = 0, e = 1) : (t = pa(t), e === r ? (e = t, t = 0) : e = pa(e)), t > e) {
                                var n = t;
                                t = e, e = n
                            }
                            if (i || t % 1 || e % 1) {
                                var s = Ar();
                                return wr(t + s * (e - t + le("1e-" + ((s + "").length - 1))), e)
                            }
                            return Gi(t, e)
                        }, jr.reduce = function(t, e, r) {
                            var i = Vo(t) ? Be : Qe,
                                n = arguments.length < 3;
                            return i(t, cs(e, 4), r, n, fi)
                        }, jr.reduceRight = function(t, e, r) {
                            var i = Vo(t) ? Le : Qe,
                                n = arguments.length < 3;
                            return i(t, cs(e, 4), r, n, di)
                        }, jr.repeat = function(t, e, i) {
                            return e = (i ? bs(t, e, i) : e === r) ? 1 : ga(e), Qi(wa(t), e)
                        }, jr.replace = function() {
                            var t = arguments,
                                e = wa(t[0]);
                            return t.length < 3 ? e : e.replace(t[1], t[2])
                        }, jr.result = function(t, e, i) {
                            var n = -1,
                                s = (e = bn(e, t)).length;
                            for (s || (s = 1, t = r); ++n < s;) {
                                var o = null == t ? r : t[Bs(e[n])];
                                o === r && (n = s, o = i), t = Xo(o) ? o.call(t) : o
                            }
                            return t
                        }, jr.round = Eh, jr.runInContext = t, jr.sample = function(t) {
                            return (Vo(t) ? Jr : Ji)(t)
                        }, jr.size = function(t) {
                            if (null == t) return 0;
                            if (Wo(t)) return ha(t) ? fr(t) : t.length;
                            var e = gs(t);
                            return e == I || e == C ? t.size : ki(t).length
                        }, jr.snakeCase = Ga, jr.some = function(t, e, i) {
                            var n = Vo(t) ? qe : sn;
                            return i && bs(t, e, i) && (e = r), n(t, cs(e, 3))
                        }, jr.sortedIndex = function(t, e) {
                            return on(t, e)
                        }, jr.sortedIndexBy = function(t, e, r) {
                            return an(t, e, cs(r, 2))
                        }, jr.sortedIndexOf = function(t, e) {
                            var r = null == t ? 0 : t.length;
                            if (r) {
                                var i = on(t, e);
                                if (i < r && zo(t[i], e)) return i
                            }
                            return -1
                        }, jr.sortedLastIndex = function(t, e) {
                            return on(t, e, !0)
                        }, jr.sortedLastIndexBy = function(t, e, r) {
                            return an(t, e, cs(r, 2), !0)
                        }, jr.sortedLastIndexOf = function(t, e) {
                            if (null == t ? 0 : t.length) {
                                var r = on(t, e, !0) - 1;
                                if (zo(t[r], e)) return r
                            }
                            return -1
                        }, jr.startCase = Qa, jr.startsWith = function(t, e, r) {
                            return t = wa(t), r = null == r ? 0 : ai(ga(r), 0, t.length), e = un(e), t.slice(r, r + e.length) == e
                        }, jr.subtract = Sh, jr.sum = function(t) {
                            return t && t.length ? Ye(t, nh) : 0
                        }, jr.sumBy = function(t, e) {
                            return t && t.length ? Ye(t, cs(e, 2)) : 0
                        }, jr.template = function(t, e, i) {
                            var n = jr.templateSettings;
                            i && bs(t, e, i) && (e = r), t = wa(t), e = Aa({}, e, n, Zn);
                            var s, o, a = Aa({}, e.imports, n.imports, Zn),
                                h = Ra(a),
                                c = tr(a, h),
                                u = 0,
                                l = e.interpolate || At,
                                f = "__p += '",
                                d = Ot((e.escape || At).source + "|" + l.source + "|" + (l === tt ? pt : At).source + "|" + (e.evaluate || At).source + "|$", "g"),
                                p = "//# sourceURL=" + (Bt.call(e, "sourceURL") ? (e.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++ae + "]") + "\n";
                            t.replace(d, (function(e, r, i, n, a, h) {
                                return i || (i = n), f += t.slice(u, h).replace(Et, or), r && (s = !0, f += "' +\n__e(" + r + ") +\n'"), a && (o = !0, f += "';\n" + a + ";\n__p += '"), i && (f += "' +\n((__t = (" + i + ")) == null ? '' : __t) +\n'"), u = h + e.length, e
                            })), f += "';\n";
                            var g = Bt.call(e, "variable") && e.variable;
                            if (g) {
                                if (ft.test(g)) throw new It("Invalid `variable` option passed into `_.template`")
                            } else f = "with (obj) {\n" + f + "\n}\n";
                            f = (o ? f.replace(V, "") : f).replace($, "$1").replace(W, "$1;"), f = "function(" + (g || "obj") + ") {\n" + (g ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (s ? ", __e = _.escape" : "") + (o ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + f + "return __p\n}";
                            var m = Za((function() {
                                return Pt(h, p + "return " + f).apply(r, c)
                            }));
                            if (m.source = f, Jo(m)) throw m;
                            return m
                        }, jr.times = function(t, e) {
                            if ((t = ga(t)) < 1 || t > f) return [];
                            var r = p,
                                i = wr(t, p);
                            e = cs(e), t -= p;
                            for (var n = Je(i, e); ++r < t;) e(r);
                            return n
                        }, jr.toFinite = pa, jr.toInteger = ga, jr.toLength = ma, jr.toLower = function(t) {
                            return wa(t).toLowerCase()
                        }, jr.toNumber = ya, jr.toSafeInteger = function(t) {
                            return t ? ai(ga(t), -f, f) : 0 === t ? t : 0
                        }, jr.toString = wa, jr.toUpper = function(t) {
                            return wa(t).toUpperCase()
                        }, jr.trim = function(t, e, i) {
                            if ((t = wa(t)) && (i || e === r)) return Xe(t);
                            if (!t || !(e = un(e))) return t;
                            var n = dr(t),
                                s = dr(e);
                            return An(n, rr(n, s), ir(n, s) + 1).join("")
                        }, jr.trimEnd = function(t, e, i) {
                            if ((t = wa(t)) && (i || e === r)) return t.slice(0, pr(t) + 1);
                            if (!t || !(e = un(e))) return t;
                            var n = dr(t);
                            return An(n, 0, ir(n, dr(e)) + 1).join("")
                        }, jr.trimStart = function(t, e, i) {
                            if ((t = wa(t)) && (i || e === r)) return t.replace(ot, "");
                            if (!t || !(e = un(e))) return t;
                            var n = dr(t);
                            return An(n, rr(n, dr(e))).join("")
                        }, jr.truncate = function(t, e) {
                            var i = 30,
                                n = "...";
                            if (ea(e)) {
                                var s = "separator" in e ? e.separator : s;
                                i = "length" in e ? ga(e.length) : i, n = "omission" in e ? un(e.omission) : n
                            }
                            var o = (t = wa(t)).length;
                            if (ar(t)) {
                                var a = dr(t);
                                o = a.length
                            }
                            if (i >= o) return t;
                            var h = i - fr(n);
                            if (h < 1) return n;
                            var c = a ? An(a, 0, h).join("") : t.slice(0, h);
                            if (s === r) return c + n;
                            if (a && (h += c.length - h), oa(s)) {
                                if (t.slice(h).search(s)) {
                                    var u, l = c;
                                    for (s.global || (s = Ot(s.source, wa(gt.exec(s)) + "g")), s.lastIndex = 0; u = s.exec(l);) var f = u.index;
                                    c = c.slice(0, f === r ? h : f)
                                }
                            } else if (t.indexOf(un(s), h) != h) {
                                var d = c.lastIndexOf(s);
                                d > -1 && (c = c.slice(0, d))
                            }
                            return c + n
                        }, jr.unescape = function(t) {
                            return (t = wa(t)) && Y.test(t) ? t.replace(G, gr) : t
                        }, jr.uniqueId = function(t) {
                            var e = ++Lt;
                            return wa(t) + e
                        }, jr.upperCase = Ya, jr.upperFirst = Ja, jr.each = wo, jr.eachRight = bo, jr.first = $s, hh(jr, function() {
                            var t = {};
                            return bi(jr, (function(e, r) {
                                Bt.call(jr.prototype, r) || (t[r] = e)
                            })), t
                        }(), {
                            chain: !1
                        }), jr.VERSION = "4.17.21", Oe(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], (function(t) {
                            jr[t].placeholder = jr
                        })), Oe(["drop", "take"], (function(t, e) {
                            Kr.prototype[t] = function(i) {
                                i = i === r ? 1 : vr(ga(i), 0);
                                var n = this.__filtered__ && !e ? new Kr(this) : this.clone();
                                return n.__filtered__ ? n.__takeCount__ = wr(i, n.__takeCount__) : n.__views__.push({
                                    size: wr(i, p),
                                    type: t + (n.__dir__ < 0 ? "Right" : "")
                                }), n
                            }, Kr.prototype[t + "Right"] = function(e) {
                                return this.reverse()[t](e).reverse()
                            }
                        })), Oe(["filter", "map", "takeWhile"], (function(t, e) {
                            var r = e + 1,
                                i = 1 == r || 3 == r;
                            Kr.prototype[t] = function(t) {
                                var e = this.clone();
                                return e.__iteratees__.push({
                                    iteratee: cs(t, 3),
                                    type: r
                                }), e.__filtered__ = e.__filtered__ || i, e
                            }
                        })), Oe(["head", "last"], (function(t, e) {
                            var r = "take" + (e ? "Right" : "");
                            Kr.prototype[t] = function() {
                                return this[r](1).value()[0]
                            }
                        })), Oe(["initial", "tail"], (function(t, e) {
                            var r = "drop" + (e ? "" : "Right");
                            Kr.prototype[t] = function() {
                                return this.__filtered__ ? new Kr(this) : this[r](1)
                            }
                        })), Kr.prototype.compact = function() {
                            return this.filter(nh)
                        }, Kr.prototype.find = function(t) {
                            return this.filter(t).head()
                        }, Kr.prototype.findLast = function(t) {
                            return this.reverse().find(t)
                        }, Kr.prototype.invokeMap = Yi((function(t, e) {
                            return "function" == typeof t ? new Kr(this) : this.map((function(r) {
                                return Ci(r, t, e)
                            }))
                        })), Kr.prototype.reject = function(t) {
                            return this.filter(ko(cs(t)))
                        }, Kr.prototype.slice = function(t, e) {
                            t = ga(t);
                            var i = this;
                            return i.__filtered__ && (t > 0 || e < 0) ? new Kr(i) : (t < 0 ? i = i.takeRight(-t) : t && (i = i.drop(t)), e !== r && (i = (e = ga(e)) < 0 ? i.dropRight(-e) : i.take(e - t)), i)
                        }, Kr.prototype.takeRightWhile = function(t) {
                            return this.reverse().takeWhile(t).reverse()
                        }, Kr.prototype.toArray = function() {
                            return this.take(p)
                        }, bi(Kr.prototype, (function(t, e) {
                            var i = /^(?:filter|find|map|reject)|While$/.test(e),
                                n = /^(?:head|last)$/.test(e),
                                s = jr[n ? "take" + ("last" == e ? "Right" : "") : e],
                                o = n || /^find/.test(e);
                            s && (jr.prototype[e] = function() {
                                var e = this.__wrapped__,
                                    a = n ? [1] : arguments,
                                    h = e instanceof Kr,
                                    c = a[0],
                                    u = h || Vo(e),
                                    l = function(t) {
                                        var e = s.apply(jr, ke([t], a));
                                        return n && f ? e[0] : e
                                    };
                                u && i && "function" == typeof c && 1 != c.length && (h = u = !1);
                                var f = this.__chain__,
                                    d = !!this.__actions__.length,
                                    p = o && !f,
                                    g = h && !d;
                                if (!o && u) {
                                    e = g ? e : new Kr(this);
                                    var m = t.apply(e, a);
                                    return m.__actions__.push({
                                        func: po,
                                        args: [l],
                                        thisArg: r
                                    }), new Hr(m, f)
                                }
                                return p && g ? t.apply(this, a) : (m = this.thru(l), p ? n ? m.value()[0] : m.value() : m)
                            })
                        })), Oe(["pop", "push", "shift", "sort", "splice", "unshift"], (function(t) {
                            var e = Rt[t],
                                r = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru",
                                i = /^(?:pop|shift)$/.test(t);
                            jr.prototype[t] = function() {
                                var t = arguments;
                                if (i && !this.__chain__) {
                                    var n = this.value();
                                    return e.apply(Vo(n) ? n : [], t)
                                }
                                return this[r]((function(r) {
                                    return e.apply(Vo(r) ? r : [], t)
                                }))
                            }
                        })), bi(Kr.prototype, (function(t, e) {
                            var r = jr[e];
                            if (r) {
                                var i = r.name + "";
                                Bt.call(Nr, i) || (Nr[i] = []), Nr[i].push({
                                    name: e,
                                    func: r
                                })
                            }
                        })), Nr[zn(r, 2).name] = [{
                            name: "wrapper",
                            func: r
                        }], Kr.prototype.clone = function() {
                            var t = new Kr(this.__wrapped__);
                            return t.__actions__ = Cn(this.__actions__), t.__dir__ = this.__dir__, t.__filtered__ = this.__filtered__, t.__iteratees__ = Cn(this.__iteratees__), t.__takeCount__ = this.__takeCount__, t.__views__ = Cn(this.__views__), t
                        }, Kr.prototype.reverse = function() {
                            if (this.__filtered__) {
                                var t = new Kr(this);
                                t.__dir__ = -1, t.__filtered__ = !0
                            } else(t = this.clone()).__dir__ *= -1;
                            return t
                        }, Kr.prototype.value = function() {
                            var t = this.__wrapped__.value(),
                                e = this.__dir__,
                                r = Vo(t),
                                i = e < 0,
                                n = r ? t.length : 0,
                                s = function(t, e, r) {
                                    for (var i = -1, n = r.length; ++i < n;) {
                                        var s = r[i],
                                            o = s.size;
                                        switch (s.type) {
                                            case "drop":
                                                t += o;
                                                break;
                                            case "dropRight":
                                                e -= o;
                                                break;
                                            case "take":
                                                e = wr(e, t + o);
                                                break;
                                            case "takeRight":
                                                t = vr(t, e - o)
                                        }
                                    }
                                    return {
                                        start: t,
                                        end: e
                                    }
                                }(0, n, this.__views__),
                                o = s.start,
                                a = s.end,
                                h = a - o,
                                c = i ? a : o - 1,
                                u = this.__iteratees__,
                                l = u.length,
                                f = 0,
                                d = wr(h, this.__takeCount__);
                            if (!r || !i && n == h && d == h) return gn(t, this.__actions__);
                            var p = [];
                            t: for (; h-- && f < d;) {
                                for (var g = -1, m = t[c += e]; ++g < l;) {
                                    var y = u[g],
                                        v = y.iteratee,
                                        w = y.type,
                                        b = v(m);
                                    if (2 == w) m = b;
                                    else if (!b) {
                                        if (1 == w) continue t;
                                        break t
                                    }
                                }
                                p[f++] = m
                            }
                            return p
                        }, jr.prototype.at = go, jr.prototype.chain = function() {
                            return fo(this)
                        }, jr.prototype.commit = function() {
                            return new Hr(this.value(), this.__chain__)
                        }, jr.prototype.next = function() {
                            this.__values__ === r && (this.__values__ = da(this.value()));
                            var t = this.__index__ >= this.__values__.length;
                            return {
                                done: t,
                                value: t ? r : this.__values__[this.__index__++]
                            }
                        }, jr.prototype.plant = function(t) {
                            for (var e, i = this; i instanceof Fr;) {
                                var n = qs(i);
                                n.__index__ = 0, n.__values__ = r, e ? s.__wrapped__ = n : e = n;
                                var s = n;
                                i = i.__wrapped__
                            }
                            return s.__wrapped__ = t, e
                        }, jr.prototype.reverse = function() {
                            var t = this.__wrapped__;
                            if (t instanceof Kr) {
                                var e = t;
                                return this.__actions__.length && (e = new Kr(this)), (e = e.reverse()).__actions__.push({
                                    func: po,
                                    args: [to],
                                    thisArg: r
                                }), new Hr(e, this.__chain__)
                            }
                            return this.thru(to)
                        }, jr.prototype.toJSON = jr.prototype.valueOf = jr.prototype.value = function() {
                            return gn(this.__wrapped__, this.__actions__)
                        }, jr.prototype.first = jr.prototype.head, Zt && (jr.prototype[Zt] = function() {
                            return this
                        }), jr
                    }();
                    ye ? ((ye.exports = mr)._ = mr, me._ = mr) : ge._ = mr
                }).call(Yy)
            }(Jy, Jy.exports);
            var Xy = Object.defineProperty,
                Zy = Object.defineProperties,
                tv = Object.getOwnPropertyDescriptors,
                ev = Object.getOwnPropertySymbols,
                rv = Object.prototype.hasOwnProperty,
                iv = Object.prototype.propertyIsEnumerable,
                nv = (t, e, r) => e in t ? Xy(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                sv = (t, e) => {
                    for (var r in e || (e = {})) rv.call(e, r) && nv(t, r, e[r]);
                    if (ev)
                        for (var r of ev(e)) iv.call(e, r) && nv(t, r, e[r]);
                    return t
                },
                ov = (t, e) => Zy(t, tv(e));

            function av(t, e, r) {
                var i;
                const n = Je(t);
                return (null == (i = e.rpcMap) ? void 0 : i[n.reference]) || `https://rpc.walletconnect.com/v1/?chainId=${n.namespace}:${n.reference}&projectId=${r}`
            }

            function hv(t) {
                return t.includes(":") ? t.split(":")[1] : t
            }

            function cv(t) {
                return t.map((t => `${t.split(":")[0]}:${t.split(":")[1]}`))
            }

            function uv() {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                const e = lv(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}),
                    r = lv(t);
                return Jy.exports.merge(e, r)
            }

            function lv(t) {
                var e, r, i, n;
                const s = {};
                if (!oh(t)) return s;
                for (const [o, a] of Object.entries(t)) {
                    const t = Xa(o) ? [o] : a.chains,
                        h = a.methods || [],
                        c = a.events || [],
                        u = a.rpcMap || {},
                        l = Za(o);
                    s[l] = ov(sv(sv({}, s[l]), a), {
                        chains: Ir(t, null == (e = s[l]) ? void 0 : e.chains),
                        methods: Ir(h, null == (r = s[l]) ? void 0 : r.methods),
                        events: Ir(c, null == (i = s[l]) ? void 0 : i.events),
                        rpcMap: sv(sv({}, u), null == (n = s[l]) ? void 0 : n.rpcMap)
                    })
                }
                return s
            }

            function fv(t) {
                return t.includes(":") ? t.split(":")[2] : t
            }

            function dv(t) {
                const e = {};
                for (const [r, i] of Object.entries(t)) {
                    const t = i.methods || [],
                        n = i.events || [],
                        s = i.accounts || [],
                        o = Xa(r) ? [r] : i.chains ? i.chains : cv(i.accounts);
                    e[r] = {
                        chains: o,
                        methods: t,
                        events: n,
                        accounts: s
                    }
                }
                return e
            }

            function pv(t) {
                return "number" == typeof t ? t : t.includes("0x") ? parseInt(t, 16) : (t = t.includes(":") ? t.split(":")[1] : t, isNaN(Number(t)) ? t : Number(t))
            }
            const gv = {},
                mv = t => gv[t],
                yv = (t, e) => {
                    gv[t] = e
                };
            class vv {
                constructor(t) {
                    this.name = "polkadot", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${t}`)
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t && t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])) || []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        const i = hv(e);
                        t[i] = this.createHttpProvider(i, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            var wv = Object.defineProperty,
                bv = Object.defineProperties,
                _v = Object.getOwnPropertyDescriptors,
                Av = Object.getOwnPropertySymbols,
                Ev = Object.prototype.hasOwnProperty,
                Sv = Object.prototype.propertyIsEnumerable,
                Iv = (t, e, r) => e in t ? wv(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Pv = (t, e) => {
                    for (var r in e || (e = {})) Ev.call(e, r) && Iv(t, r, e[r]);
                    if (Av)
                        for (var r of Av(e)) Sv.call(e, r) && Iv(t, r, e[r]);
                    return t
                },
                Mv = (t, e) => bv(t, _v(e));
            class xv {
                constructor(t) {
                    this.name = "eip155", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain())
                }
                async request(t) {
                    switch (t.request.method) {
                        case "eth_requestAccounts":
                        case "eth_accounts":
                            return this.getAccounts();
                        case "wallet_switchEthereumChain":
                            return await this.handleSwitchChain(t);
                        case "eth_chainId":
                            return parseInt(this.getDefaultChain());
                        case "wallet_getCapabilities":
                            return await this.getCapabilities(t)
                    }
                    return this.namespace.methods.includes(t.request.method) ? await this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(parseInt(t), e), this.chainId = parseInt(t), this.events.emit(Qy, `${this.name}:${t}`)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId.toString();
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                createHttpProvider(t, e) {
                    const r = e || av(`${this.name}:${t}`, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        const i = parseInt(hv(e));
                        t[i] = this.createHttpProvider(i, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                getHttpProvider() {
                    const t = this.chainId,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                async handleSwitchChain(t) {
                    var e, r;
                    let i = t.request.params ? null == (e = t.request.params[0]) ? void 0 : e.chainId : "0x0";
                    i = i.startsWith("0x") ? i : `0x${i}`;
                    const n = parseInt(i, 16);
                    if (this.isChainApproved(n)) this.setDefaultChain(`${n}`);
                    else {
                        if (!this.namespace.methods.includes("wallet_switchEthereumChain")) throw new Error(`Failed to switch to chain 'eip155:${n}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
                        await this.client.request({
                            topic: t.topic,
                            request: {
                                method: t.request.method,
                                params: [{
                                    chainId: i
                                }]
                            },
                            chainId: null == (r = this.namespace.chains) ? void 0 : r[0]
                        }), this.setDefaultChain(`${n}`)
                    }
                    return null
                }
                isChainApproved(t) {
                    return this.namespace.chains.includes(`${this.name}:${t}`)
                }
                async getCapabilities(t) {
                    var e, r, i;
                    const n = null == (r = null == (e = t.request) ? void 0 : e.params) ? void 0 : r[0];
                    if (!n) throw new Error("Missing address parameter in `wallet_getCapabilities` request");
                    const s = this.client.session.get(t.topic),
                        o = (null == (i = s ? .sessionProperties) ? void 0 : i.capabilities) || {};
                    if (null != o && o[n]) return o ? .[n];
                    const a = await this.client.request(t);
                    try {
                        await this.client.session.update(t.topic, {
                            sessionProperties: Mv(Pv({}, s.sessionProperties || {}), {
                                capabilities: Mv(Pv({}, o || {}), {
                                    [n]: a
                                })
                            })
                        })
                    } catch (oi) {
                        console.warn("Failed to update session with capabilities", oi)
                    }
                    return a
                }
            }
            class Ov {
                constructor(t) {
                    this.name = "solana", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${t}`)
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        const i = hv(e);
                        t[i] = this.createHttpProvider(i, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class Cv {
                constructor(t) {
                    this.name = "cosmos", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${this.chainId}`)
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        const i = hv(e);
                        t[i] = this.createHttpProvider(i, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class Nv {
                constructor(t) {
                    this.name = "algorand", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    if (!this.httpProviders[t]) {
                        const r = e || av(`${this.name}:${t}`, this.namespace, this.client.core.projectId);
                        if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                        this.setHttpProvider(t, r)
                    }
                    this.chainId = t, this.events.emit(Qy, `${this.name}:${this.chainId}`)
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        t[e] = this.createHttpProvider(e, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    return typeof r > "u" ? void 0 : new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class Rv {
                constructor(t) {
                    this.name = "cip34", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${this.chainId}`)
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        const r = this.getCardanoRPCUrl(e),
                            i = hv(e);
                        t[i] = this.createHttpProvider(i, r)
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                getCardanoRPCUrl(t) {
                    const e = this.namespace.rpcMap;
                    if (e) return e[t]
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || this.getCardanoRPCUrl(t);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class Tv {
                constructor(t) {
                    this.name = "elrond", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${t}`)
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        const i = hv(e);
                        t[i] = this.createHttpProvider(i, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class Uv {
                constructor(t) {
                    this.name = "multiversx", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${t}`)
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        const i = hv(e);
                        t[i] = this.createHttpProvider(i, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class Dv {
                constructor(t) {
                    this.name = "near", this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace = Object.assign(this.namespace, t)
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request)
                }
                setDefaultChain(t, e) {
                    if (this.chainId = t, !this.httpProviders[t]) {
                        const r = e || av(`${this.name}:${t}`, this.namespace);
                        if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                        this.setHttpProvider(t, r)
                    }
                    this.events.emit(Qy, `${this.name}:${this.chainId}`)
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t && t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])) || []
                }
                createHttpProviders() {
                    const t = {};
                    return this.namespace.chains.forEach((e => {
                        var r;
                        t[e] = this.createHttpProvider(e, null == (r = this.namespace.rpcMap) ? void 0 : r[e])
                    })), t
                }
                getHttpProvider() {
                    const t = `${this.name}:${this.chainId}`,
                        e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace);
                    return typeof r > "u" ? void 0 : new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            class kv {
                constructor(t) {
                    this.name = Gy, this.namespace = t.namespace, this.events = mv("events"), this.client = mv("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                }
                updateNamespace(t) {
                    this.namespace.chains = [...new Set((this.namespace.chains || []).concat(t.chains || []))], this.namespace.accounts = [...new Set((this.namespace.accounts || []).concat(t.accounts || []))], this.namespace.methods = [...new Set((this.namespace.methods || []).concat(t.methods || []))], this.namespace.events = [...new Set((this.namespace.events || []).concat(t.events || []))], this.httpProviders = this.createHttpProviders()
                }
                requestAccounts() {
                    return this.getAccounts()
                }
                request(t) {
                    return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider(t.chainId).request(t.request)
                }
                setDefaultChain(t, e) {
                    this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(Qy, `${this.name}:${t}`)
                }
                getDefaultChain() {
                    if (this.chainId) return this.chainId;
                    if (this.namespace.defaultChain) return this.namespace.defaultChain;
                    const t = this.namespace.chains[0];
                    if (!t) throw new Error("ChainId not found");
                    return t.split(":")[1]
                }
                getAccounts() {
                    const t = this.namespace.accounts;
                    return t ? [...new Set(t.filter((t => t.split(":")[1] === this.chainId.toString())).map((t => t.split(":")[2])))] : []
                }
                createHttpProviders() {
                    var t, e;
                    const r = {};
                    return null == (e = null == (t = this.namespace) ? void 0 : t.accounts) || e.forEach((t => {
                        const e = Je(t);
                        r[`${e.namespace}:${e.reference}`] = this.createHttpProvider(t)
                    })), r
                }
                getHttpProvider(t) {
                    const e = this.httpProviders[t];
                    if (typeof e > "u") throw new Error(`JSON-RPC provider for ${t} not found`);
                    return e
                }
                setHttpProvider(t, e) {
                    const r = this.createHttpProvider(t, e);
                    r && (this.httpProviders[t] = r)
                }
                createHttpProvider(t, e) {
                    const r = e || av(t, this.namespace, this.client.core.projectId);
                    if (!r) throw new Error(`No RPC url provided for chainId: ${t}`);
                    return new Vd(new Vy(r, mv("disableProviderPing")))
                }
            }
            var Bv = Object.defineProperty,
                Lv = Object.defineProperties,
                qv = Object.getOwnPropertyDescriptors,
                jv = Object.getOwnPropertySymbols,
                zv = Object.prototype.hasOwnProperty,
                Fv = Object.prototype.propertyIsEnumerable,
                Hv = (t, e, r) => e in t ? Bv(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                Kv = (t, e) => {
                    for (var r in e || (e = {})) zv.call(e, r) && Hv(t, r, e[r]);
                    if (jv)
                        for (var r of jv(e)) Fv.call(e, r) && Hv(t, r, e[r]);
                    return t
                },
                Vv = (t, e) => Lv(t, qv(e));
            class $v {
                constructor(t) {
                    this.events = new($()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = t, this.logger = typeof t ? .logger < "u" && "string" != typeof t ? .logger ? t.logger : pc()(Rc({
                        level: t ? .logger || $y
                    })), this.disableProviderPing = t ? .disableProviderPing || !1
                }
                static async init(t) {
                    const e = new $v(t);
                    return await e.initialize(), e
                }
                async request(t, e, r) {
                    const [i, n] = this.validateChain(e);
                    if (!this.session) throw new Error("Please call connect() before request()");
                    return await this.getProvider(i).request({
                        request: Kv({}, t),
                        chainId: `${i}:${n}`,
                        topic: this.session.topic,
                        expiry: r
                    })
                }
                sendAsync(t, e, r, i) {
                    const n = (new Date).getTime();
                    this.request(t, r, i).then((t => e(null, Nd(n, t)))).catch((t => e(t, void 0)))
                }
                async enable() {
                    if (!this.client) throw new Error("Sign Client not initialized");
                    return this.session || await this.connect({
                        namespaces: this.namespaces,
                        optionalNamespaces: this.optionalNamespaces,
                        sessionProperties: this.sessionProperties
                    }), await this.requestAccounts()
                }
                async disconnect() {
                    var t;
                    if (!this.session) throw new Error("Please call connect() before enable()");
                    await this.client.disconnect({
                        topic: null == (t = this.session) ? void 0 : t.topic,
                        reason: nh("USER_DISCONNECTED")
                    }), await this.cleanup()
                }
                async connect(t) {
                    if (!this.client) throw new Error("Sign Client not initialized");
                    if (this.setNamespaces(t), await this.cleanupPendingPairings(), !t.skipPairing) return await this.pair(t.pairingTopic)
                }
                async authenticate(t) {
                    if (!this.client) throw new Error("Sign Client not initialized");
                    this.setNamespaces(t), await this.cleanupPendingPairings();
                    const {
                        uri: e,
                        response: r
                    } = await this.client.authenticate(t);
                    e && (this.uri = e, this.events.emit("display_uri", e));
                    const i = await r();
                    if (this.session = i.session, this.session) {
                        const t = dv(this.session.namespaces);
                        this.namespaces = uv(this.namespaces, t), this.persist("namespaces", this.namespaces), this.onConnect()
                    }
                    return i
                }
                on(t, e) {
                    this.events.on(t, e)
                }
                once(t, e) {
                    this.events.once(t, e)
                }
                removeListener(t, e) {
                    this.events.removeListener(t, e)
                }
                off(t, e) {
                    this.events.off(t, e)
                }
                get isWalletConnect() {
                    return !0
                }
                async pair(t) {
                    this.shouldAbortPairingAttempt = !1;
                    let e = 0;
                    do {
                        if (this.shouldAbortPairingAttempt) throw new Error("Pairing aborted");
                        if (e >= this.maxPairingAttempts) throw new Error("Max auto pairing attempts reached");
                        const {
                            uri: r,
                            approval: i
                        } = await this.client.connect({
                            pairingTopic: t,
                            requiredNamespaces: this.namespaces,
                            optionalNamespaces: this.optionalNamespaces,
                            sessionProperties: this.sessionProperties
                        });
                        r && (this.uri = r, this.events.emit("display_uri", r)), await i().then((t => {
                            this.session = t;
                            const e = dv(t.namespaces);
                            this.namespaces = uv(this.namespaces, e), this.persist("namespaces", this.namespaces)
                        })).catch((t => {
                            if (t.message !== oy) throw t;
                            e++
                        }))
                    } while (!this.session);
                    return this.onConnect(), this.session
                }
                setDefaultChain(t, e) {
                    try {
                        if (!this.session) return;
                        const [r, i] = this.validateChain(t), n = this.getProvider(r);
                        n.name === Gy ? n.setDefaultChain(`${r}:${i}`, e) : n.setDefaultChain(i, e)
                    } catch (r) {
                        if (!/Please call connect/.test(r.message)) throw r
                    }
                }
                async cleanupPendingPairings() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    this.logger.info("Cleaning up inactive pairings...");
                    const e = this.client.pairing.getAll();
                    if (sh(e)) {
                        for (const r of e) t.deletePairings ? this.client.core.expirer.set(r.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(r.topic);
                        this.logger.info(`Inactive pairings cleared: ${e.length}`)
                    }
                }
                abortPairingAttempt() {
                    this.shouldAbortPairingAttempt = !0
                }
                async checkStorage() {
                    if (this.namespaces = await this.getFromStore("namespaces"), this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
                        const t = this.client.session.keys.length - 1;
                        this.session = this.client.session.get(this.client.session.keys[t]), this.createProviders()
                    }
                }
                async initialize() {
                    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners()
                }
                async createClient() {
                    this.client = this.providerOpts.client || await Ry.init({
                        logger: this.providerOpts.logger || $y,
                        relayUrl: this.providerOpts.relayUrl || "wss://relay.walletconnect.com",
                        projectId: this.providerOpts.projectId,
                        metadata: this.providerOpts.metadata,
                        storageOptions: this.providerOpts.storageOptions,
                        storage: this.providerOpts.storage,
                        name: this.providerOpts.name
                    }), this.logger.trace("SignClient Initialized")
                }
                createProviders() {
                    if (!this.client) throw new Error("Sign Client not initialized");
                    if (!this.session) throw new Error("Session not initialized. Please call connect() before enable()");
                    const t = [...new Set(Object.keys(this.session.namespaces).map((t => Za(t))))];
                    yv("client", this.client), yv("events", this.events), yv("disableProviderPing", this.disableProviderPing), t.forEach((t => {
                        if (!this.session) return;
                        const e = function(t, e) {
                                const r = Object.keys(e.namespaces).filter((e => e.includes(t)));
                                if (!r.length) return [];
                                const i = [];
                                return r.forEach((t => {
                                    const r = e.namespaces[t].accounts;
                                    i.push(...r)
                                })), i
                            }(t, this.session),
                            r = cv(e),
                            i = uv(this.namespaces, this.optionalNamespaces),
                            n = Vv(Kv({}, i[t]), {
                                accounts: e,
                                chains: r
                            });
                        switch (t) {
                            case "eip155":
                                this.rpcProviders[t] = new xv({
                                    namespace: n
                                });
                                break;
                            case "algorand":
                                this.rpcProviders[t] = new Nv({
                                    namespace: n
                                });
                                break;
                            case "solana":
                                this.rpcProviders[t] = new Ov({
                                    namespace: n
                                });
                                break;
                            case "cosmos":
                                this.rpcProviders[t] = new Cv({
                                    namespace: n
                                });
                                break;
                            case "polkadot":
                                this.rpcProviders[t] = new vv({
                                    namespace: n
                                });
                                break;
                            case "cip34":
                                this.rpcProviders[t] = new Rv({
                                    namespace: n
                                });
                                break;
                            case "elrond":
                                this.rpcProviders[t] = new Tv({
                                    namespace: n
                                });
                                break;
                            case "multiversx":
                                this.rpcProviders[t] = new Uv({
                                    namespace: n
                                });
                                break;
                            case "near":
                                this.rpcProviders[t] = new Dv({
                                    namespace: n
                                });
                                break;
                            default:
                                this.rpcProviders[Gy] ? this.rpcProviders[Gy].updateNamespace(n) : this.rpcProviders[Gy] = new kv({
                                    namespace: n
                                })
                        }
                    }))
                }
                registerEventListeners() {
                    if (typeof this.client > "u") throw new Error("Sign Client is not initialized");
                    this.client.on("session_ping", (t => {
                        this.events.emit("session_ping", t)
                    })), this.client.on("session_event", (t => {
                        const {
                            params: e
                        } = t, {
                            event: r
                        } = e;
                        if ("accountsChanged" === r.name) {
                            const t = r.data;
                            t && sh(t) && this.events.emit("accountsChanged", t.map(fv))
                        } else if ("chainChanged" === r.name) {
                            const t = e.chainId,
                                r = e.event.data,
                                i = Za(t),
                                n = pv(t) !== pv(r) ? `${i}:${pv(r)}` : t;
                            this.onChainChanged(n)
                        } else this.events.emit(r.name, r.data);
                        this.events.emit("session_event", t)
                    })), this.client.on("session_update", (t => {
                        let {
                            topic: e,
                            params: r
                        } = t;
                        var i;
                        const {
                            namespaces: n
                        } = r, s = null == (i = this.client) ? void 0 : i.session.get(e);
                        this.session = Vv(Kv({}, s), {
                            namespaces: n
                        }), this.onSessionUpdate(), this.events.emit("session_update", {
                            topic: e,
                            params: r
                        })
                    })), this.client.on("session_delete", (async t => {
                        await this.cleanup(), this.events.emit("session_delete", t), this.events.emit("disconnect", Vv(Kv({}, nh("USER_DISCONNECTED")), {
                            data: t.topic
                        }))
                    })), this.on(Qy, (t => {
                        this.onChainChanged(t, !0)
                    }))
                }
                getProvider(t) {
                    return this.rpcProviders[t] || this.rpcProviders[Gy]
                }
                onSessionUpdate() {
                    Object.keys(this.rpcProviders).forEach((t => {
                        var e;
                        this.getProvider(t).updateNamespace(null == (e = this.session) ? void 0 : e.namespaces[t])
                    }))
                }
                setNamespaces(t) {
                    const {
                        namespaces: e,
                        optionalNamespaces: r,
                        sessionProperties: i
                    } = t;
                    e && Object.keys(e).length && (this.namespaces = e), r && Object.keys(r).length && (this.optionalNamespaces = r), this.sessionProperties = i, this.persist("namespaces", e), this.persist("optionalNamespaces", r)
                }
                validateChain(t) {
                    const [e, r] = t ? .split(":") || ["", ""];
                    if (!this.namespaces || !Object.keys(this.namespaces).length) return [e, r];
                    if (e && !Object.keys(this.namespaces || {}).map((t => Za(t))).includes(e)) throw new Error(`Namespace '${e}' is not configured. Please call connect() first with namespace config.`);
                    if (e && r) return [e, r];
                    const i = Za(Object.keys(this.namespaces)[0]);
                    return [i, this.rpcProviders[i].getDefaultChain()]
                }
                async requestAccounts() {
                    const [t] = this.validateChain();
                    return await this.getProvider(t).requestAccounts()
                }
                onChainChanged(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (!this.namespaces) return;
                    const [r, i] = this.validateChain(t);
                    i && (e || this.getProvider(r).setDefaultChain(i), this.namespaces[r] ? this.namespaces[r].defaultChain = i : this.namespaces[`${r}:${i}`] ? this.namespaces[`${r}:${i}`].defaultChain = i : this.namespaces[`${r}:${i}`] = {
                        defaultChain: i
                    }, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", i))
                }
                onConnect() {
                    this.createProviders(), this.events.emit("connect", {
                        session: this.session
                    })
                }
                async cleanup() {
                    this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist("namespaces", void 0), this.persist("optionalNamespaces", void 0), this.persist("sessionProperties", void 0), await this.cleanupPendingPairings({
                        deletePairings: !0
                    })
                }
                persist(t, e) {
                    this.client.core.storage.setItem(`${Wy}/${t}`, e)
                }
                async getFromStore(t) {
                    return await this.client.core.storage.getItem(`${Wy}/${t}`)
                }
            }
            const Wv = $v,
                Gv = ["eth_sendTransaction", "personal_sign"],
                Qv = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "eth_sendTransaction", "personal_sign", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode", "wallet_sendCalls", "wallet_getCapabilities", "wallet_getCallsStatus", "wallet_showCallsStatus"],
                Yv = ["chainChanged", "accountsChanged"],
                Jv = ["chainChanged", "accountsChanged", "message", "disconnect", "connect"];
            var Xv = Object.defineProperty,
                Zv = Object.defineProperties,
                tw = Object.getOwnPropertyDescriptors,
                ew = Object.getOwnPropertySymbols,
                rw = Object.prototype.hasOwnProperty,
                iw = Object.prototype.propertyIsEnumerable,
                nw = (t, e, r) => e in t ? Xv(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : t[e] = r,
                sw = (t, e) => {
                    for (var r in e || (e = {})) rw.call(e, r) && nw(t, r, e[r]);
                    if (ew)
                        for (var r of ew(e)) iw.call(e, r) && nw(t, r, e[r]);
                    return t
                },
                ow = (t, e) => Zv(t, tw(e));

            function aw(t) {
                return Number(t[0].split(":")[1])
            }

            function hw(t) {
                return `0x${t.toString(16)}`
            }
            class cw {
                constructor() {
                    this.events = new V.EventEmitter, this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = "wc@2:ethereum_provider:", this.on = (t, e) => (this.events.on(t, e), this), this.once = (t, e) => (this.events.once(t, e), this), this.removeListener = (t, e) => (this.events.removeListener(t, e), this), this.off = (t, e) => (this.events.off(t, e), this), this.parseAccount = t => this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {}
                }
                static async init(t) {
                    const e = new cw;
                    return await e.initialize(t), e
                }
                async request(t, e) {
                    return await this.signer.request(t, this.formatChainId(this.chainId), e)
                }
                sendAsync(t, e, r) {
                    this.signer.sendAsync(t, e, this.formatChainId(this.chainId), r)
                }
                get connected() {
                    return !!this.signer.client && this.signer.client.core.relayer.connected
                }
                get connecting() {
                    return !!this.signer.client && this.signer.client.core.relayer.connecting
                }
                async enable() {
                    return this.session || await this.connect(), await this.request({
                        method: "eth_requestAccounts"
                    })
                }
                async connect(t) {
                    if (!this.signer.client) throw new Error("Provider not initialized. Call init() first");
                    this.loadConnectOpts(t);
                    const {
                        required: e,
                        optional: r
                    } = function(t) {
                        const {
                            chains: e,
                            optionalChains: r,
                            methods: i,
                            optionalMethods: n,
                            events: s,
                            optionalEvents: o,
                            rpcMap: a
                        } = t;
                        if (!sh(e)) throw new Error("Invalid chains");
                        const h = {
                                chains: e,
                                methods: i || Gv,
                                events: s || Yv,
                                rpcMap: sw({}, e.length ? {
                                    [aw(e)]: a[aw(e)]
                                } : {})
                            },
                            c = s ? .filter((t => !Yv.includes(t))),
                            u = i ? .filter((t => !Gv.includes(t)));
                        if (!r && !o && !n && (null == c || !c.length) && (null == u || !u.length)) return {
                            required: e.length ? h : void 0
                        };
                        const l = {
                            chains: [...new Set(c ? .length && u ? .length || !r ? h.chains.concat(r || []) : r)],
                            methods: [...new Set(h.methods.concat(null != n && n.length ? n : Qv))],
                            events: [...new Set(h.events.concat(null != o && o.length ? o : Jv))],
                            rpcMap: a
                        };
                        return {
                            required: e.length ? h : void 0,
                            optional: r.length ? l : void 0
                        }
                    }(this.rpc);
                    try {
                        const i = await new Promise((async (i, n) => {
                            var s;
                            this.rpc.showQrModal && (null == (s = this.modal) || s.subscribeModal((t => {
                                !t.open && !this.signer.session && (this.signer.abortPairingAttempt(), n(new Error("Connection request reset. Please try again.")))
                            }))), await this.signer.connect(ow(sw({
                                namespaces: sw({}, e && {
                                    [this.namespace]: e
                                })
                            }, r && {
                                optionalNamespaces: {
                                    [this.namespace]: r
                                }
                            }), {
                                pairingTopic: t ? .pairingTopic
                            })).then((t => {
                                i(t)
                            })).catch((t => {
                                n(new Error(t.message))
                            }))
                        }));
                        if (!i) return;
                        const n = Xe(i.namespaces, [this.namespace]);
                        this.setChainIds(this.rpc.chains.length ? this.rpc.chains : n), this.setAccounts(n), this.events.emit("connect", {
                            chainId: hw(this.chainId)
                        })
                    } catch (i) {
                        throw this.signer.logger.error(i), i
                    } finally {
                        this.modal && this.modal.closeModal()
                    }
                }
                async authenticate(t) {
                    if (!this.signer.client) throw new Error("Provider not initialized. Call init() first");
                    this.loadConnectOpts({
                        chains: t ? .chains
                    });
                    try {
                        const e = await new Promise((async (e, r) => {
                                var i;
                                this.rpc.showQrModal && (null == (i = this.modal) || i.subscribeModal((t => {
                                    !t.open && !this.signer.session && (this.signer.abortPairingAttempt(), r(new Error("Connection request reset. Please try again.")))
                                }))), await this.signer.authenticate(ow(sw({}, t), {
                                    chains: this.rpc.chains
                                })).then((t => {
                                    e(t)
                                })).catch((t => {
                                    r(new Error(t.message))
                                }))
                            })),
                            r = e.session;
                        if (r) {
                            const t = Xe(r.namespaces, [this.namespace]);
                            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : t), this.setAccounts(t), this.events.emit("connect", {
                                chainId: hw(this.chainId)
                            })
                        }
                        return e
                    } catch (uc) {
                        throw this.signer.logger.error(uc), uc
                    } finally {
                        this.modal && this.modal.closeModal()
                    }
                }
                async disconnect() {
                    this.session && await this.signer.disconnect(), this.reset()
                }
                get isWalletConnect() {
                    return !0
                }
                get session() {
                    return this.signer.session
                }
                registerEventListeners() {
                    this.signer.on("session_event", (t => {
                        const {
                            params: e
                        } = t, {
                            event: r
                        } = e;
                        "accountsChanged" === r.name ? (this.accounts = this.parseAccounts(r.data), this.events.emit("accountsChanged", this.accounts)) : "chainChanged" === r.name ? this.setChainId(this.formatChainId(r.data)) : this.events.emit(r.name, r.data), this.events.emit("session_event", t)
                    })), this.signer.on("chainChanged", (t => {
                        const e = parseInt(t);
                        this.chainId = e, this.events.emit("chainChanged", hw(this.chainId)), this.persist()
                    })), this.signer.on("session_update", (t => {
                        this.events.emit("session_update", t)
                    })), this.signer.on("session_delete", (t => {
                        this.reset(), this.events.emit("session_delete", t), this.events.emit("disconnect", ow(sw({}, nh("USER_DISCONNECTED")), {
                            data: t.topic,
                            name: "USER_DISCONNECTED"
                        }))
                    })), this.signer.on("display_uri", (t => {
                        var e, r;
                        this.rpc.showQrModal && (null == (e = this.modal) || e.closeModal(), null == (r = this.modal) || r.openModal({
                            uri: t
                        })), this.events.emit("display_uri", t)
                    }))
                }
                switchEthereumChain(t) {
                    this.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: t.toString(16)
                        }]
                    })
                }
                isCompatibleChainId(t) {
                    return "string" == typeof t && t.startsWith(`${this.namespace}:`)
                }
                formatChainId(t) {
                    return `${this.namespace}:${t}`
                }
                parseChainId(t) {
                    return Number(t.split(":")[1])
                }
                setChainIds(t) {
                    const e = t.filter((t => this.isCompatibleChainId(t))).map((t => this.parseChainId(t)));
                    e.length && (this.chainId = e[0], this.events.emit("chainChanged", hw(this.chainId)), this.persist())
                }
                setChainId(t) {
                    if (this.isCompatibleChainId(t)) {
                        const e = this.parseChainId(t);
                        this.chainId = e, this.switchEthereumChain(e)
                    }
                }
                parseAccountId(t) {
                    const [e, r, i] = t.split(":");
                    return {
                        chainId: `${e}:${r}`,
                        address: i
                    }
                }
                setAccounts(t) {
                    this.accounts = t.filter((t => this.parseChainId(this.parseAccountId(t).chainId) === this.chainId)).map((t => this.parseAccountId(t).address)), this.events.emit("accountsChanged", this.accounts)
                }
                getRpcConfig(t) {
                    var e, r;
                    const i = null != (e = t ? .chains) ? e : [],
                        n = null != (r = t ? .optionalChains) ? r : [],
                        s = i.concat(n);
                    if (!s.length) throw new Error("No chains specified in either `chains` or `optionalChains`");
                    const o = i.length ? t ? .methods || Gv : [],
                        a = i.length ? t ? .events || Yv : [],
                        h = t ? .optionalMethods || [],
                        c = t ? .optionalEvents || [],
                        u = t ? .rpcMap || this.buildRpcMap(s, t.projectId),
                        l = t ? .qrModalOptions || void 0;
                    return {
                        chains: i ? .map((t => this.formatChainId(t))),
                        optionalChains: n.map((t => this.formatChainId(t))),
                        methods: o,
                        events: a,
                        optionalMethods: h,
                        optionalEvents: c,
                        rpcMap: u,
                        showQrModal: !(null == t || !t.showQrModal),
                        qrModalOptions: l,
                        projectId: t.projectId,
                        metadata: t.metadata
                    }
                }
                buildRpcMap(t, e) {
                    const r = {};
                    return t.forEach((t => {
                        r[t] = this.getRpcUrl(t, e)
                    })), r
                }
                async initialize(t) {
                    if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? aw(this.rpc.chains) : aw(this.rpc.optionalChains), this.signer = await Wv.init({
                            projectId: this.rpc.projectId,
                            metadata: this.rpc.metadata,
                            disableProviderPing: t.disableProviderPing,
                            relayUrl: t.relayUrl,
                            storageOptions: t.storageOptions
                        }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
                        let t;
                        try {
                            const {
                                WalletConnectModal: e
                            } = await r.e(1073).then(r.bind(r, 81073));
                            t = e
                        } catch {
                            throw new Error("To use QR modal, please install @walletconnect/modal package")
                        }
                        if (t) try {
                            this.modal = new t(sw({
                                projectId: this.rpc.projectId
                            }, this.rpc.qrModalOptions))
                        } catch (Cc) {
                            throw this.signer.logger.error(Cc), new Error("Could not generate WalletConnectModal Instance")
                        }
                    }
                }
                loadConnectOpts(t) {
                    if (!t) return;
                    const {
                        chains: e,
                        optionalChains: r,
                        rpcMap: i
                    } = t;
                    e && sh(e) && (this.rpc.chains = e.map((t => this.formatChainId(t))), e.forEach((t => {
                        this.rpc.rpcMap[t] = i ? .[t] || this.getRpcUrl(t)
                    }))), r && sh(r) && (this.rpc.optionalChains = [], this.rpc.optionalChains = r ? .map((t => this.formatChainId(t))), r.forEach((t => {
                        this.rpc.rpcMap[t] = i ? .[t] || this.getRpcUrl(t)
                    })))
                }
                getRpcUrl(t, e) {
                    var r;
                    return (null == (r = this.rpc.rpcMap) ? void 0 : r[t]) || `https://rpc.walletconnect.com/v1/?chainId=eip155:${t}&projectId=${e||this.rpc.projectId}`
                }
                async loadPersistedSession() {
                    if (this.session) try {
                        const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`),
                            e = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];
                        this.setChainIds(t ? [this.formatChainId(t)] : e ? .accounts), this.setAccounts(e ? .accounts)
                    } catch (t) {
                        this.signer.logger.error("Failed to load persisted session, clearing state..."), this.signer.logger.error(t), await this.disconnect().catch((t => this.signer.logger.warn(t)))
                    }
                }
                reset() {
                    this.chainId = 1, this.accounts = []
                }
                persist() {
                    this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId)
                }
                parseAccounts(t) {
                    return "string" == typeof t || t instanceof String ? [this.parseAccount(t)] : t.map((t => this.parseAccount(t)))
                }
            }
            const uw = cw
        },
        3200: function(t, e) {
            var r = "undefined" !== typeof self ? self : this,
                i = function() {
                    function t() {
                        this.fetch = !1, this.DOMException = r.DOMException
                    }
                    return t.prototype = r, new t
                }();
            ! function(t) {
                ! function(e) {
                    var r = "URLSearchParams" in t,
                        i = "Symbol" in t && "iterator" in Symbol,
                        n = "FileReader" in t && "Blob" in t && function() {
                            try {
                                return new Blob, !0
                            } catch (t) {
                                return !1
                            }
                        }(),
                        s = "FormData" in t,
                        o = "ArrayBuffer" in t;
                    if (o) var a = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                        h = ArrayBuffer.isView || function(t) {
                            return t && a.indexOf(Object.prototype.toString.call(t)) > -1
                        };

                    function c(t) {
                        if ("string" !== typeof t && (t = String(t)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t)) throw new TypeError("Invalid character in header field name");
                        return t.toLowerCase()
                    }

                    function u(t) {
                        return "string" !== typeof t && (t = String(t)), t
                    }

                    function l(t) {
                        var e = {
                            next: function() {
                                var e = t.shift();
                                return {
                                    done: void 0 === e,
                                    value: e
                                }
                            }
                        };
                        return i && (e[Symbol.iterator] = function() {
                            return e
                        }), e
                    }

                    function f(t) {
                        this.map = {}, t instanceof f ? t.forEach((function(t, e) {
                            this.append(e, t)
                        }), this) : Array.isArray(t) ? t.forEach((function(t) {
                            this.append(t[0], t[1])
                        }), this) : t && Object.getOwnPropertyNames(t).forEach((function(e) {
                            this.append(e, t[e])
                        }), this)
                    }

                    function d(t) {
                        if (t.bodyUsed) return Promise.reject(new TypeError("Already read"));
                        t.bodyUsed = !0
                    }

                    function p(t) {
                        return new Promise((function(e, r) {
                            t.onload = function() {
                                e(t.result)
                            }, t.onerror = function() {
                                r(t.error)
                            }
                        }))
                    }

                    function g(t) {
                        var e = new FileReader,
                            r = p(e);
                        return e.readAsArrayBuffer(t), r
                    }

                    function m(t) {
                        if (t.slice) return t.slice(0);
                        var e = new Uint8Array(t.byteLength);
                        return e.set(new Uint8Array(t)), e.buffer
                    }

                    function y() {
                        return this.bodyUsed = !1, this._initBody = function(t) {
                            var e;
                            this._bodyInit = t, t ? "string" === typeof t ? this._bodyText = t : n && Blob.prototype.isPrototypeOf(t) ? this._bodyBlob = t : s && FormData.prototype.isPrototypeOf(t) ? this._bodyFormData = t : r && URLSearchParams.prototype.isPrototypeOf(t) ? this._bodyText = t.toString() : o && n && ((e = t) && DataView.prototype.isPrototypeOf(e)) ? (this._bodyArrayBuffer = m(t.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : o && (ArrayBuffer.prototype.isPrototypeOf(t) || h(t)) ? this._bodyArrayBuffer = m(t) : this._bodyText = t = Object.prototype.toString.call(t) : this._bodyText = "", this.headers.get("content-type") || ("string" === typeof t ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : r && URLSearchParams.prototype.isPrototypeOf(t) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                        }, n && (this.blob = function() {
                            var t = d(this);
                            if (t) return t;
                            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                            if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                            if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                            return Promise.resolve(new Blob([this._bodyText]))
                        }, this.arrayBuffer = function() {
                            return this._bodyArrayBuffer ? d(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(g)
                        }), this.text = function() {
                            var t = d(this);
                            if (t) return t;
                            if (this._bodyBlob) return function(t) {
                                var e = new FileReader,
                                    r = p(e);
                                return e.readAsText(t), r
                            }(this._bodyBlob);
                            if (this._bodyArrayBuffer) return Promise.resolve(function(t) {
                                for (var e = new Uint8Array(t), r = new Array(e.length), i = 0; i < e.length; i++) r[i] = String.fromCharCode(e[i]);
                                return r.join("")
                            }(this._bodyArrayBuffer));
                            if (this._bodyFormData) throw new Error("could not read FormData body as text");
                            return Promise.resolve(this._bodyText)
                        }, s && (this.formData = function() {
                            return this.text().then(b)
                        }), this.json = function() {
                            return this.text().then(JSON.parse)
                        }, this
                    }
                    f.prototype.append = function(t, e) {
                        t = c(t), e = u(e);
                        var r = this.map[t];
                        this.map[t] = r ? r + ", " + e : e
                    }, f.prototype.delete = function(t) {
                        delete this.map[c(t)]
                    }, f.prototype.get = function(t) {
                        return t = c(t), this.has(t) ? this.map[t] : null
                    }, f.prototype.has = function(t) {
                        return this.map.hasOwnProperty(c(t))
                    }, f.prototype.set = function(t, e) {
                        this.map[c(t)] = u(e)
                    }, f.prototype.forEach = function(t, e) {
                        for (var r in this.map) this.map.hasOwnProperty(r) && t.call(e, this.map[r], r, this)
                    }, f.prototype.keys = function() {
                        var t = [];
                        return this.forEach((function(e, r) {
                            t.push(r)
                        })), l(t)
                    }, f.prototype.values = function() {
                        var t = [];
                        return this.forEach((function(e) {
                            t.push(e)
                        })), l(t)
                    }, f.prototype.entries = function() {
                        var t = [];
                        return this.forEach((function(e, r) {
                            t.push([r, e])
                        })), l(t)
                    }, i && (f.prototype[Symbol.iterator] = f.prototype.entries);
                    var v = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

                    function w(t, e) {
                        var r = (e = e || {}).body;
                        if (t instanceof w) {
                            if (t.bodyUsed) throw new TypeError("Already read");
                            this.url = t.url, this.credentials = t.credentials, e.headers || (this.headers = new f(t.headers)), this.method = t.method, this.mode = t.mode, this.signal = t.signal, r || null == t._bodyInit || (r = t._bodyInit, t.bodyUsed = !0)
                        } else this.url = String(t);
                        if (this.credentials = e.credentials || this.credentials || "same-origin", !e.headers && this.headers || (this.headers = new f(e.headers)), this.method = function(t) {
                                var e = t.toUpperCase();
                                return v.indexOf(e) > -1 ? e : t
                            }(e.method || this.method || "GET"), this.mode = e.mode || this.mode || null, this.signal = e.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && r) throw new TypeError("Body not allowed for GET or HEAD requests");
                        this._initBody(r)
                    }

                    function b(t) {
                        var e = new FormData;
                        return t.trim().split("&").forEach((function(t) {
                            if (t) {
                                var r = t.split("="),
                                    i = r.shift().replace(/\+/g, " "),
                                    n = r.join("=").replace(/\+/g, " ");
                                e.append(decodeURIComponent(i), decodeURIComponent(n))
                            }
                        })), e
                    }

                    function _(t) {
                        var e = new f;
                        return t.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach((function(t) {
                            var r = t.split(":"),
                                i = r.shift().trim();
                            if (i) {
                                var n = r.join(":").trim();
                                e.append(i, n)
                            }
                        })), e
                    }

                    function A(t, e) {
                        e || (e = {}), this.type = "default", this.status = void 0 === e.status ? 200 : e.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in e ? e.statusText : "OK", this.headers = new f(e.headers), this.url = e.url || "", this._initBody(t)
                    }
                    w.prototype.clone = function() {
                        return new w(this, {
                            body: this._bodyInit
                        })
                    }, y.call(w.prototype), y.call(A.prototype), A.prototype.clone = function() {
                        return new A(this._bodyInit, {
                            status: this.status,
                            statusText: this.statusText,
                            headers: new f(this.headers),
                            url: this.url
                        })
                    }, A.error = function() {
                        var t = new A(null, {
                            status: 0,
                            statusText: ""
                        });
                        return t.type = "error", t
                    };
                    var E = [301, 302, 303, 307, 308];
                    A.redirect = function(t, e) {
                        if (-1 === E.indexOf(e)) throw new RangeError("Invalid status code");
                        return new A(null, {
                            status: e,
                            headers: {
                                location: t
                            }
                        })
                    }, e.DOMException = t.DOMException;
                    try {
                        new e.DOMException
                    } catch (I) {
                        e.DOMException = function(t, e) {
                            this.message = t, this.name = e;
                            var r = Error(t);
                            this.stack = r.stack
                        }, e.DOMException.prototype = Object.create(Error.prototype), e.DOMException.prototype.constructor = e.DOMException
                    }

                    function S(t, r) {
                        return new Promise((function(i, s) {
                            var o = new w(t, r);
                            if (o.signal && o.signal.aborted) return s(new e.DOMException("Aborted", "AbortError"));
                            var a = new XMLHttpRequest;

                            function h() {
                                a.abort()
                            }
                            a.onload = function() {
                                var t = {
                                    status: a.status,
                                    statusText: a.statusText,
                                    headers: _(a.getAllResponseHeaders() || "")
                                };
                                t.url = "responseURL" in a ? a.responseURL : t.headers.get("X-Request-URL");
                                var e = "response" in a ? a.response : a.responseText;
                                i(new A(e, t))
                            }, a.onerror = function() {
                                s(new TypeError("Network request failed"))
                            }, a.ontimeout = function() {
                                s(new TypeError("Network request failed"))
                            }, a.onabort = function() {
                                s(new e.DOMException("Aborted", "AbortError"))
                            }, a.open(o.method, o.url, !0), "include" === o.credentials ? a.withCredentials = !0 : "omit" === o.credentials && (a.withCredentials = !1), "responseType" in a && n && (a.responseType = "blob"), o.headers.forEach((function(t, e) {
                                a.setRequestHeader(e, t)
                            })), o.signal && (o.signal.addEventListener("abort", h), a.onreadystatechange = function() {
                                4 === a.readyState && o.signal.removeEventListener("abort", h)
                            }), a.send("undefined" === typeof o._bodyInit ? null : o._bodyInit)
                        }))
                    }
                    S.polyfill = !0, t.fetch || (t.fetch = S, t.Headers = f, t.Request = w, t.Response = A), e.Headers = f, e.Request = w, e.Response = A, e.fetch = S, Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }({})
            }(i), i.fetch.ponyfill = !0, delete i.fetch.polyfill;
            var n = i;
            (e = n.fetch).default = n.fetch, e.fetch = n.fetch, e.Headers = n.Headers, e.Request = n.Request, e.Response = n.Response, t.exports = e
        },
        37847: (t, e, r) => {
            "use strict";
            const i = r(47135);
            t.exports = o;
            const n = function() {
                    function t(t) {
                        return "undefined" !== typeof t && t
                    }
                    try {
                        return "undefined" !== typeof globalThis || Object.defineProperty(Object.prototype, "globalThis", {
                            get: function() {
                                return delete Object.prototype.globalThis, this.globalThis = this
                            },
                            configurable: !0
                        }), globalThis
                    } catch (e) {
                        return t(self) || t(window) || t(this) || {}
                    }
                }().console || {},
                s = {
                    mapHttpRequest: f,
                    mapHttpResponse: f,
                    wrapRequestSerializer: d,
                    wrapResponseSerializer: d,
                    wrapErrorSerializer: d,
                    req: f,
                    res: f,
                    err: function(t) {
                        const e = {
                            type: t.constructor.name,
                            msg: t.message,
                            stack: t.stack
                        };
                        for (const r in t) void 0 === e[r] && (e[r] = t[r]);
                        return e
                    }
                };

            function o(t) {
                (t = t || {}).browser = t.browser || {};
                const e = t.browser.transmit;
                if (e && "function" !== typeof e.send) throw Error("pino: transmit option must have a send function");
                const r = t.browser.write || n;
                t.browser.write && (t.browser.asObject = !0);
                const i = t.serializers || {},
                    s = function(t, e) {
                        if (Array.isArray(t)) return t.filter((function(t) {
                            return "!stdSerializers.err" !== t
                        }));
                        return !0 === t && Object.keys(e)
                    }(t.browser.serialize, i);
                let f = t.browser.serialize;
                Array.isArray(t.browser.serialize) && t.browser.serialize.indexOf("!stdSerializers.err") > -1 && (f = !1);
                "function" === typeof r && (r.error = r.fatal = r.warn = r.info = r.debug = r.trace = r), !1 === t.enabled && (t.level = "silent");
                const d = t.level || "info",
                    g = Object.create(r);
                g.log || (g.log = p), Object.defineProperty(g, "levelVal", {
                    get: function() {
                        return "silent" === this.level ? 1 / 0 : this.levels.values[this.level]
                    }
                }), Object.defineProperty(g, "level", {
                    get: function() {
                        return this._level
                    },
                    set: function(t) {
                        if ("silent" !== t && !this.levels.values[t]) throw Error("unknown level " + t);
                        this._level = t, a(m, g, "error", "log"), a(m, g, "fatal", "error"), a(m, g, "warn", "error"), a(m, g, "info", "log"), a(m, g, "debug", "log"), a(m, g, "trace", "log")
                    }
                });
                const m = {
                    transmit: e,
                    serialize: s,
                    asObject: t.browser.asObject,
                    levels: ["error", "fatal", "warn", "info", "debug", "trace"],
                    timestamp: l(t)
                };
                return g.levels = o.levels, g.level = d, g.setMaxListeners = g.getMaxListeners = g.emit = g.addListener = g.on = g.prependListener = g.once = g.prependOnceListener = g.removeListener = g.removeAllListeners = g.listeners = g.listenerCount = g.eventNames = g.write = g.flush = p, g.serializers = i, g._serialize = s, g._stdErrSerialize = f, g.child = function(r, n) {
                    if (!r) throw new Error("missing bindings for child Pino");
                    n = n || {}, s && r.serializers && (n.serializers = r.serializers);
                    const o = n.serializers;
                    if (s && o) {
                        var a = Object.assign({}, i, o),
                            l = !0 === t.browser.serialize ? Object.keys(a) : s;
                        delete r.serializers, h([r], l, a, this._stdErrSerialize)
                    }

                    function f(t) {
                        this._childLevel = 1 + (0 | t._childLevel), this.error = c(t, r, "error"), this.fatal = c(t, r, "fatal"), this.warn = c(t, r, "warn"), this.info = c(t, r, "info"), this.debug = c(t, r, "debug"), this.trace = c(t, r, "trace"), a && (this.serializers = a, this._serialize = l), e && (this._logEvent = u([].concat(t._logEvent.bindings, r)))
                    }
                    return f.prototype = this, new f(this)
                }, e && (g._logEvent = u()), g
            }

            function a(t, e, r, s) {
                const a = Object.getPrototypeOf(e);
                e[r] = e.levelVal > e.levels.values[r] ? p : a[r] ? a[r] : n[r] || n[s] || p,
                    function(t, e, r) {
                        if (!t.transmit && e[r] === p) return;
                        e[r] = (s = e[r], function() {
                            const a = t.timestamp(),
                                c = new Array(arguments.length),
                                l = Object.getPrototypeOf && Object.getPrototypeOf(this) === n ? n : this;
                            for (var f = 0; f < c.length; f++) c[f] = arguments[f];
                            if (t.serialize && !t.asObject && h(c, this._serialize, this.serializers, this._stdErrSerialize), t.asObject ? s.call(l, function(t, e, r, n) {
                                    t._serialize && h(r, t._serialize, t.serializers, t._stdErrSerialize);
                                    const s = r.slice();
                                    let a = s[0];
                                    const c = {};
                                    n && (c.time = n), c.level = o.levels.values[e];
                                    let u = 1 + (0 | t._childLevel);
                                    if (u < 1 && (u = 1), null !== a && "object" === typeof a) {
                                        for (; u-- && "object" === typeof s[0];) Object.assign(c, s.shift());
                                        a = s.length ? i(s.shift(), s) : void 0
                                    } else "string" === typeof a && (a = i(s.shift(), s));
                                    return void 0 !== a && (c.msg = a), c
                                }(this, r, c, a)) : s.apply(l, c), t.transmit) {
                                const i = t.transmit.level || e.level,
                                    n = o.levels.values[i],
                                    s = o.levels.values[r];
                                if (s < n) return;
                                ! function(t, e, r) {
                                    const i = e.send,
                                        n = e.ts,
                                        s = e.methodLevel,
                                        o = e.methodValue,
                                        a = e.val,
                                        c = t._logEvent.bindings;
                                    h(r, t._serialize || Object.keys(t.serializers), t.serializers, void 0 === t._stdErrSerialize || t._stdErrSerialize), t._logEvent.ts = n, t._logEvent.messages = r.filter((function(t) {
                                        return -1 === c.indexOf(t)
                                    })), t._logEvent.level.label = s, t._logEvent.level.value = o, i(s, t._logEvent, a), t._logEvent = u(c)
                                }(this, {
                                    ts: a,
                                    methodLevel: r,
                                    methodValue: s,
                                    transmitLevel: i,
                                    transmitValue: o.levels.values[t.transmit.level || e.level],
                                    send: t.transmit.send,
                                    val: e.levelVal
                                }, c)
                            }
                        });
                        var s
                    }(t, e, r)
            }

            function h(t, e, r, i) {
                for (const n in t)
                    if (i && t[n] instanceof Error) t[n] = o.stdSerializers.err(t[n]);
                    else if ("object" === typeof t[n] && !Array.isArray(t[n]))
                    for (const i in t[n]) e && e.indexOf(i) > -1 && i in r && (t[n][i] = r[i](t[n][i]))
            }

            function c(t, e, r) {
                return function() {
                    const i = new Array(1 + arguments.length);
                    i[0] = e;
                    for (var n = 1; n < i.length; n++) i[n] = arguments[n - 1];
                    return t[r].apply(this, i)
                }
            }

            function u(t) {
                return {
                    ts: 0,
                    messages: [],
                    bindings: t || [],
                    level: {
                        label: "",
                        value: 0
                    }
                }
            }

            function l(t) {
                return "function" === typeof t.timestamp ? t.timestamp : !1 === t.timestamp ? g : m
            }

            function f() {
                return {}
            }

            function d(t) {
                return t
            }

            function p() {}

            function g() {
                return !1
            }

            function m() {
                return Date.now()
            }
            o.levels = {
                values: {
                    fatal: 60,
                    error: 50,
                    warn: 40,
                    info: 30,
                    debug: 20,
                    trace: 10
                },
                labels: {
                    10: "trace",
                    20: "debug",
                    30: "info",
                    40: "warn",
                    50: "error",
                    60: "fatal"
                }
            }, o.stdSerializers = s, o.stdTimeFunctions = Object.assign({}, {
                nullTime: g,
                epochTime: m,
                unixTime: function() {
                    return Math.round(Date.now() / 1e3)
                },
                isoTime: function() {
                    return new Date(Date.now()).toISOString()
                }
            })
        },
        79047: () => {},
        3768: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            const i = r(90910);
            i.__exportStar(r(69730), e), i.__exportStar(r(85995), e)
        },
        69730: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ONE_THOUSAND = e.ONE_HUNDRED = void 0, e.ONE_HUNDRED = 100, e.ONE_THOUSAND = 1e3
        },
        85995: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ONE_YEAR = e.FOUR_WEEKS = e.THREE_WEEKS = e.TWO_WEEKS = e.ONE_WEEK = e.THIRTY_DAYS = e.SEVEN_DAYS = e.FIVE_DAYS = e.THREE_DAYS = e.ONE_DAY = e.TWENTY_FOUR_HOURS = e.TWELVE_HOURS = e.SIX_HOURS = e.THREE_HOURS = e.ONE_HOUR = e.SIXTY_MINUTES = e.THIRTY_MINUTES = e.TEN_MINUTES = e.FIVE_MINUTES = e.ONE_MINUTE = e.SIXTY_SECONDS = e.THIRTY_SECONDS = e.TEN_SECONDS = e.FIVE_SECONDS = e.ONE_SECOND = void 0, e.ONE_SECOND = 1, e.FIVE_SECONDS = 5, e.TEN_SECONDS = 10, e.THIRTY_SECONDS = 30, e.SIXTY_SECONDS = 60, e.ONE_MINUTE = e.SIXTY_SECONDS, e.FIVE_MINUTES = 5 * e.ONE_MINUTE, e.TEN_MINUTES = 10 * e.ONE_MINUTE, e.THIRTY_MINUTES = 30 * e.ONE_MINUTE, e.SIXTY_MINUTES = 60 * e.ONE_MINUTE, e.ONE_HOUR = e.SIXTY_MINUTES, e.THREE_HOURS = 3 * e.ONE_HOUR, e.SIX_HOURS = 6 * e.ONE_HOUR, e.TWELVE_HOURS = 12 * e.ONE_HOUR, e.TWENTY_FOUR_HOURS = 24 * e.ONE_HOUR, e.ONE_DAY = e.TWENTY_FOUR_HOURS, e.THREE_DAYS = 3 * e.ONE_DAY, e.FIVE_DAYS = 5 * e.ONE_DAY, e.SEVEN_DAYS = 7 * e.ONE_DAY, e.THIRTY_DAYS = 30 * e.ONE_DAY, e.ONE_WEEK = e.SEVEN_DAYS, e.TWO_WEEKS = 2 * e.ONE_WEEK, e.THREE_WEEKS = 3 * e.ONE_WEEK, e.FOUR_WEEKS = 4 * e.ONE_WEEK, e.ONE_YEAR = 365 * e.ONE_DAY
        },
        77326: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            const i = r(90910);
            i.__exportStar(r(8600), e), i.__exportStar(r(5537), e), i.__exportStar(r(94636), e), i.__exportStar(r(3768), e)
        },
        94636: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            r(90910).__exportStar(r(56771), e)
        },
        56771: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.IWatch = void 0;
            e.IWatch = class {}
        },
        55247: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.fromMiliseconds = e.toMiliseconds = void 0;
            const i = r(3768);
            e.toMiliseconds = function(t) {
                return t * i.ONE_THOUSAND
            }, e.fromMiliseconds = function(t) {
                return Math.floor(t / i.ONE_THOUSAND)
            }
        },
        1999: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.delay = void 0, e.delay = function(t) {
                return new Promise((e => {
                    setTimeout((() => {
                        e(!0)
                    }), t)
                }))
            }
        },
        8600: (t, e, r) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            const i = r(90910);
            i.__exportStar(r(1999), e), i.__exportStar(r(55247), e)
        },
        5537: (t, e) => {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Watch = void 0;
            class r {
                constructor() {
                    this.timestamps = new Map
                }
                start(t) {
                    if (this.timestamps.has(t)) throw new Error(`Watch already started for label: ${t}`);
                    this.timestamps.set(t, {
                        started: Date.now()
                    })
                }
                stop(t) {
                    const e = this.get(t);
                    if ("undefined" !== typeof e.elapsed) throw new Error(`Watch already stopped for label: ${t}`);
                    const r = Date.now() - e.started;
                    this.timestamps.set(t, {
                        started: e.started,
                        elapsed: r
                    })
                }
                get(t) {
                    const e = this.timestamps.get(t);
                    if ("undefined" === typeof e) throw new Error(`No timestamp found for label: ${t}`);
                    return e
                }
                elapsed(t) {
                    const e = this.get(t);
                    return e.elapsed || Date.now() - e.started
                }
            }
            e.Watch = r, e.default = r
        },
        90910: (t, e, r) => {
            "use strict";
            r.r(e), r.d(e, {
                __assign: () => s,
                __asyncDelegator: () => b,
                __asyncGenerator: () => w,
                __asyncValues: () => _,
                __await: () => v,
                __awaiter: () => u,
                __classPrivateFieldGet: () => I,
                __classPrivateFieldSet: () => P,
                __createBinding: () => f,
                __decorate: () => a,
                __exportStar: () => d,
                __extends: () => n,
                __generator: () => l,
                __importDefault: () => S,
                __importStar: () => E,
                __makeTemplateObject: () => A,
                __metadata: () => c,
                __param: () => h,
                __read: () => g,
                __rest: () => o,
                __spread: () => m,
                __spreadArrays: () => y,
                __values: () => p
            });
            var i = function(t, e) {
                return i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(t, e) {
                    t.__proto__ = e
                } || function(t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                }, i(t, e)
            };

            function n(t, e) {
                function r() {
                    this.constructor = t
                }
                i(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r)
            }
            var s = function() {
                return s = Object.assign || function(t) {
                    for (var e, r = 1, i = arguments.length; r < i; r++)
                        for (var n in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    return t
                }, s.apply(this, arguments)
            };

            function o(t, e) {
                var r = {};
                for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);
                if (null != t && "function" === typeof Object.getOwnPropertySymbols) {
                    var n = 0;
                    for (i = Object.getOwnPropertySymbols(t); n < i.length; n++) e.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[n]) && (r[i[n]] = t[i[n]])
                }
                return r
            }

            function a(t, e, r, i) {
                var n, s = arguments.length,
                    o = s < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;
                if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) o = Reflect.decorate(t, e, r, i);
                else
                    for (var a = t.length - 1; a >= 0; a--)(n = t[a]) && (o = (s < 3 ? n(o) : s > 3 ? n(e, r, o) : n(e, r)) || o);
                return s > 3 && o && Object.defineProperty(e, r, o), o
            }

            function h(t, e) {
                return function(r, i) {
                    e(r, i, t)
                }
            }

            function c(t, e) {
                if ("object" === typeof Reflect && "function" === typeof Reflect.metadata) return Reflect.metadata(t, e)
            }

            function u(t, e, r, i) {
                return new(r || (r = Promise))((function(n, s) {
                    function o(t) {
                        try {
                            h(i.next(t))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function a(t) {
                        try {
                            h(i.throw(t))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function h(t) {
                        var e;
                        t.done ? n(t.value) : (e = t.value, e instanceof r ? e : new r((function(t) {
                            t(e)
                        }))).then(o, a)
                    }
                    h((i = i.apply(t, e || [])).next())
                }))
            }

            function l(t, e) {
                var r, i, n, s, o = {
                    label: 0,
                    sent: function() {
                        if (1 & n[0]) throw n[1];
                        return n[1]
                    },
                    trys: [],
                    ops: []
                };
                return s = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" === typeof Symbol && (s[Symbol.iterator] = function() {
                    return this
                }), s;

                function a(s) {
                    return function(a) {
                        return function(s) {
                            if (r) throw new TypeError("Generator is already executing.");
                            for (; o;) try {
                                if (r = 1, i && (n = 2 & s[0] ? i.return : s[0] ? i.throw || ((n = i.return) && n.call(i), 0) : i.next) && !(n = n.call(i, s[1])).done) return n;
                                switch (i = 0, n && (s = [2 & s[0], n.value]), s[0]) {
                                    case 0:
                                    case 1:
                                        n = s;
                                        break;
                                    case 4:
                                        return o.label++, {
                                            value: s[1],
                                            done: !1
                                        };
                                    case 5:
                                        o.label++, i = s[1], s = [0];
                                        continue;
                                    case 7:
                                        s = o.ops.pop(), o.trys.pop();
                                        continue;
                                    default:
                                        if (!(n = (n = o.trys).length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                            o = 0;
                                            continue
                                        }
                                        if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
                                            o.label = s[1];
                                            break
                                        }
                                        if (6 === s[0] && o.label < n[1]) {
                                            o.label = n[1], n = s;
                                            break
                                        }
                                        if (n && o.label < n[2]) {
                                            o.label = n[2], o.ops.push(s);
                                            break
                                        }
                                        n[2] && o.ops.pop(), o.trys.pop();
                                        continue
                                }
                                s = e.call(t, o)
                            } catch (a) {
                                s = [6, a], i = 0
                            } finally {
                                r = n = 0
                            }
                            if (5 & s[0]) throw s[1];
                            return {
                                value: s[0] ? s[1] : void 0,
                                done: !0
                            }
                        }([s, a])
                    }
                }
            }

            function f(t, e, r, i) {
                void 0 === i && (i = r), t[i] = e[r]
            }

            function d(t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || (e[r] = t[r])
            }

            function p(t) {
                var e = "function" === typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    i = 0;
                if (r) return r.call(t);
                if (t && "number" === typeof t.length) return {
                    next: function() {
                        return t && i >= t.length && (t = void 0), {
                            value: t && t[i++],
                            done: !t
                        }
                    }
                };
                throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(t, e) {
                var r = "function" === typeof Symbol && t[Symbol.iterator];
                if (!r) return t;
                var i, n, s = r.call(t),
                    o = [];
                try {
                    for (;
                        (void 0 === e || e-- > 0) && !(i = s.next()).done;) o.push(i.value)
                } catch (a) {
                    n = {
                        error: a
                    }
                } finally {
                    try {
                        i && !i.done && (r = s.return) && r.call(s)
                    } finally {
                        if (n) throw n.error
                    }
                }
                return o
            }

            function m() {
                for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(g(arguments[e]));
                return t
            }

            function y() {
                for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
                var i = Array(t),
                    n = 0;
                for (e = 0; e < r; e++)
                    for (var s = arguments[e], o = 0, a = s.length; o < a; o++, n++) i[n] = s[o];
                return i
            }

            function v(t) {
                return this instanceof v ? (this.v = t, this) : new v(t)
            }

            function w(t, e, r) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var i, n = r.apply(t, e || []),
                    s = [];
                return i = {}, o("next"), o("throw"), o("return"), i[Symbol.asyncIterator] = function() {
                    return this
                }, i;

                function o(t) {
                    n[t] && (i[t] = function(e) {
                        return new Promise((function(r, i) {
                            s.push([t, e, r, i]) > 1 || a(t, e)
                        }))
                    })
                }

                function a(t, e) {
                    try {
                        (r = n[t](e)).value instanceof v ? Promise.resolve(r.value.v).then(h, c) : u(s[0][2], r)
                    } catch (i) {
                        u(s[0][3], i)
                    }
                    var r
                }

                function h(t) {
                    a("next", t)
                }

                function c(t) {
                    a("throw", t)
                }

                function u(t, e) {
                    t(e), s.shift(), s.length && a(s[0][0], s[0][1])
                }
            }

            function b(t) {
                var e, r;
                return e = {}, i("next"), i("throw", (function(t) {
                    throw t
                })), i("return"), e[Symbol.iterator] = function() {
                    return this
                }, e;

                function i(i, n) {
                    e[i] = t[i] ? function(e) {
                        return (r = !r) ? {
                            value: v(t[i](e)),
                            done: "return" === i
                        } : n ? n(e) : e
                    } : n
                }
            }

            function _(t) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var e, r = t[Symbol.asyncIterator];
                return r ? r.call(t) : (t = p(t), e = {}, i("next"), i("throw"), i("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function i(r) {
                    e[r] = t[r] && function(e) {
                        return new Promise((function(i, n) {
                            (function(t, e, r, i) {
                                Promise.resolve(i).then((function(e) {
                                    t({
                                        value: e,
                                        done: r
                                    })
                                }), e)
                            })(i, n, (e = t[r](e)).done, e.value)
                        }))
                    }
                }
            }

            function A(t, e) {
                return Object.defineProperty ? Object.defineProperty(t, "raw", {
                    value: e
                }) : t.raw = e, t
            }

            function E(t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e.default = t, e
            }

            function S(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function I(t, e) {
                if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance");
                return e.get(t)
            }

            function P(t, e, r) {
                if (!e.has(t)) throw new TypeError("attempted to set private field on non-instance");
                return e.set(t, r), r
            }
        },
        53986: (t, e) => {
            "use strict";

            function r(t) {
                let e;
                return "undefined" !== typeof window && "undefined" !== typeof window[t] && (e = window[t]), e
            }

            function i(t) {
                const e = r(t);
                if (!e) throw new Error(`${t} is not defined in Window`);
                return e
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.getLocalStorage = e.getLocalStorageOrThrow = e.getCrypto = e.getCryptoOrThrow = e.getLocation = e.getLocationOrThrow = e.getNavigator = e.getNavigatorOrThrow = e.getDocument = e.getDocumentOrThrow = e.getFromWindowOrThrow = e.getFromWindow = void 0, e.getFromWindow = r, e.getFromWindowOrThrow = i, e.getDocumentOrThrow = function() {
                return i("document")
            }, e.getDocument = function() {
                return r("document")
            }, e.getNavigatorOrThrow = function() {
                return i("navigator")
            }, e.getNavigator = function() {
                return r("navigator")
            }, e.getLocationOrThrow = function() {
                return i("location")
            }, e.getLocation = function() {
                return r("location")
            }, e.getCryptoOrThrow = function() {
                return i("crypto")
            }, e.getCrypto = function() {
                return r("crypto")
            }, e.getLocalStorageOrThrow = function() {
                return i("localStorage")
            }, e.getLocalStorage = function() {
                return r("localStorage")
            }
        },
        78037: (t, e, r) => {
            "use strict";
            e.g = void 0;
            const i = r(53986);
            e.g = function() {
                let t, e;
                try {
                    t = i.getDocumentOrThrow(), e = i.getLocationOrThrow()
                } catch (s) {
                    return null
                }

                function r() {
                    for (var e = arguments.length, r = new Array(e), i = 0; i < e; i++) r[i] = arguments[i];
                    const n = t.getElementsByTagName("meta");
                    for (let t = 0; t < n.length; t++) {
                        const e = n[t],
                            i = ["itemprop", "property", "name"].map((t => e.getAttribute(t))).filter((t => !!t && r.includes(t)));
                        if (i.length && i) {
                            const t = e.getAttribute("content");
                            if (t) return t
                        }
                    }
                    return ""
                }
                const n = function() {
                    let e = r("name", "og:site_name", "og:title", "twitter:title");
                    return e || (e = t.title), e
                }();
                return {
                    description: r("description", "og:description", "twitter:description", "keywords"),
                    url: e.origin,
                    icons: function() {
                        const r = t.getElementsByTagName("link"),
                            i = [];
                        for (let t = 0; t < r.length; t++) {
                            const n = r[t],
                                s = n.getAttribute("rel");
                            if (s && s.toLowerCase().indexOf("icon") > -1) {
                                const t = n.getAttribute("href");
                                if (t)
                                    if (-1 === t.toLowerCase().indexOf("https:") && -1 === t.toLowerCase().indexOf("http:") && 0 !== t.indexOf("//")) {
                                        let r = e.protocol + "//" + e.host;
                                        if (0 === t.indexOf("/")) r += t;
                                        else {
                                            const i = e.pathname.split("/");
                                            i.pop();
                                            r += i.join("/") + "/" + t
                                        }
                                        i.push(r)
                                    } else if (0 === t.indexOf("//")) {
                                    const r = e.protocol + t;
                                    i.push(r)
                                } else i.push(t)
                            }
                        }
                        return i
                    }(),
                    name: n
                }
            }
        },
        34630: (t, e, r) => {
            t.exports = self.fetch || (self.fetch = r(41796).default || r(41796))
        },
        6676: (t, e, r) => {
            t = r.nmd(t);
            var i = "__lodash_hash_undefined__",
                n = 1,
                s = 2,
                o = 9007199254740991,
                a = "[object Arguments]",
                h = "[object Array]",
                c = "[object AsyncFunction]",
                u = "[object Boolean]",
                l = "[object Date]",
                f = "[object Error]",
                d = "[object Function]",
                p = "[object GeneratorFunction]",
                g = "[object Map]",
                m = "[object Number]",
                y = "[object Null]",
                v = "[object Object]",
                w = "[object Promise]",
                b = "[object Proxy]",
                _ = "[object RegExp]",
                A = "[object Set]",
                E = "[object String]",
                S = "[object Symbol]",
                I = "[object Undefined]",
                P = "[object WeakMap]",
                M = "[object ArrayBuffer]",
                x = "[object DataView]",
                O = /^\[object .+?Constructor\]$/,
                C = /^(?:0|[1-9]\d*)$/,
                N = {};
            N["[object Float32Array]"] = N["[object Float64Array]"] = N["[object Int8Array]"] = N["[object Int16Array]"] = N["[object Int32Array]"] = N["[object Uint8Array]"] = N["[object Uint8ClampedArray]"] = N["[object Uint16Array]"] = N["[object Uint32Array]"] = !0, N[a] = N[h] = N[M] = N[u] = N[x] = N[l] = N[f] = N[d] = N[g] = N[m] = N[v] = N[_] = N[A] = N[E] = N[P] = !1;
            var R = "object" == typeof r.g && r.g && r.g.Object === Object && r.g,
                T = "object" == typeof self && self && self.Object === Object && self,
                U = R || T || Function("return this")(),
                D = e && !e.nodeType && e,
                k = D && t && !t.nodeType && t,
                B = k && k.exports === D,
                L = B && R.process,
                q = function() {
                    try {
                        return L && L.binding && L.binding("util")
                    } catch (t) {}
                }(),
                j = q && q.isTypedArray;

            function z(t, e) {
                for (var r = -1, i = null == t ? 0 : t.length; ++r < i;)
                    if (e(t[r], r, t)) return !0;
                return !1
            }

            function F(t) {
                var e = -1,
                    r = Array(t.size);
                return t.forEach((function(t, i) {
                    r[++e] = [i, t]
                })), r
            }

            function H(t) {
                var e = -1,
                    r = Array(t.size);
                return t.forEach((function(t) {
                    r[++e] = t
                })), r
            }
            var K, V, $ = Array.prototype,
                W = Function.prototype,
                G = Object.prototype,
                Q = U["__core-js_shared__"],
                Y = W.toString,
                J = G.hasOwnProperty,
                X = function() {
                    var t = /[^.]+$/.exec(Q && Q.keys && Q.keys.IE_PROTO || "");
                    return t ? "Symbol(src)_1." + t : ""
                }(),
                Z = G.toString,
                tt = RegExp("^" + Y.call(J).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                et = B ? U.Buffer : void 0,
                rt = U.Symbol,
                it = U.Uint8Array,
                nt = G.propertyIsEnumerable,
                st = $.splice,
                ot = rt ? rt.toStringTag : void 0,
                at = Object.getOwnPropertySymbols,
                ht = et ? et.isBuffer : void 0,
                ct = (K = Object.keys, V = Object, function(t) {
                    return K(V(t))
                }),
                ut = Lt(U, "DataView"),
                lt = Lt(U, "Map"),
                ft = Lt(U, "Promise"),
                dt = Lt(U, "Set"),
                pt = Lt(U, "WeakMap"),
                gt = Lt(Object, "create"),
                mt = Ft(ut),
                yt = Ft(lt),
                vt = Ft(ft),
                wt = Ft(dt),
                bt = Ft(pt),
                _t = rt ? rt.prototype : void 0,
                At = _t ? _t.valueOf : void 0;

            function Et(t) {
                var e = -1,
                    r = null == t ? 0 : t.length;
                for (this.clear(); ++e < r;) {
                    var i = t[e];
                    this.set(i[0], i[1])
                }
            }

            function St(t) {
                var e = -1,
                    r = null == t ? 0 : t.length;
                for (this.clear(); ++e < r;) {
                    var i = t[e];
                    this.set(i[0], i[1])
                }
            }

            function It(t) {
                var e = -1,
                    r = null == t ? 0 : t.length;
                for (this.clear(); ++e < r;) {
                    var i = t[e];
                    this.set(i[0], i[1])
                }
            }

            function Pt(t) {
                var e = -1,
                    r = null == t ? 0 : t.length;
                for (this.__data__ = new It; ++e < r;) this.add(t[e])
            }

            function Mt(t) {
                var e = this.__data__ = new St(t);
                this.size = e.size
            }

            function xt(t, e) {
                var r = Vt(t),
                    i = !r && Kt(t),
                    n = !r && !i && $t(t),
                    s = !r && !i && !n && Jt(t),
                    o = r || i || n || s,
                    a = o ? function(t, e) {
                        for (var r = -1, i = Array(t); ++r < t;) i[r] = e(r);
                        return i
                    }(t.length, String) : [],
                    h = a.length;
                for (var c in t) !e && !J.call(t, c) || o && ("length" == c || n && ("offset" == c || "parent" == c) || s && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || zt(c, h)) || a.push(c);
                return a
            }

            function Ot(t, e) {
                for (var r = t.length; r--;)
                    if (Ht(t[r][0], e)) return r;
                return -1
            }

            function Ct(t) {
                return null == t ? void 0 === t ? I : y : ot && ot in Object(t) ? function(t) {
                    var e = J.call(t, ot),
                        r = t[ot];
                    try {
                        t[ot] = void 0;
                        var i = !0
                    } catch (s) {}
                    var n = Z.call(t);
                    i && (e ? t[ot] = r : delete t[ot]);
                    return n
                }(t) : function(t) {
                    return Z.call(t)
                }(t)
            }

            function Nt(t) {
                return Yt(t) && Ct(t) == a
            }

            function Rt(t, e, r, i, o) {
                return t === e || (null == t || null == e || !Yt(t) && !Yt(e) ? t !== t && e !== e : function(t, e, r, i, o, c) {
                    var d = Vt(t),
                        p = Vt(e),
                        y = d ? h : jt(t),
                        w = p ? h : jt(e),
                        b = (y = y == a ? v : y) == v,
                        I = (w = w == a ? v : w) == v,
                        P = y == w;
                    if (P && $t(t)) {
                        if (!$t(e)) return !1;
                        d = !0, b = !1
                    }
                    if (P && !b) return c || (c = new Mt), d || Jt(t) ? Dt(t, e, r, i, o, c) : function(t, e, r, i, o, a, h) {
                        switch (r) {
                            case x:
                                if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;
                                t = t.buffer, e = e.buffer;
                            case M:
                                return !(t.byteLength != e.byteLength || !a(new it(t), new it(e)));
                            case u:
                            case l:
                            case m:
                                return Ht(+t, +e);
                            case f:
                                return t.name == e.name && t.message == e.message;
                            case _:
                            case E:
                                return t == e + "";
                            case g:
                                var c = F;
                            case A:
                                var d = i & n;
                                if (c || (c = H), t.size != e.size && !d) return !1;
                                var p = h.get(t);
                                if (p) return p == e;
                                i |= s, h.set(t, e);
                                var y = Dt(c(t), c(e), i, o, a, h);
                                return h.delete(t), y;
                            case S:
                                if (At) return At.call(t) == At.call(e)
                        }
                        return !1
                    }(t, e, y, r, i, o, c);
                    if (!(r & n)) {
                        var O = b && J.call(t, "__wrapped__"),
                            C = I && J.call(e, "__wrapped__");
                        if (O || C) {
                            var N = O ? t.value() : t,
                                R = C ? e.value() : e;
                            return c || (c = new Mt), o(N, R, r, i, c)
                        }
                    }
                    if (!P) return !1;
                    return c || (c = new Mt),
                        function(t, e, r, i, s, o) {
                            var a = r & n,
                                h = kt(t),
                                c = h.length,
                                u = kt(e),
                                l = u.length;
                            if (c != l && !a) return !1;
                            var f = c;
                            for (; f--;) {
                                var d = h[f];
                                if (!(a ? d in e : J.call(e, d))) return !1
                            }
                            var p = o.get(t);
                            if (p && o.get(e)) return p == e;
                            var g = !0;
                            o.set(t, e), o.set(e, t);
                            var m = a;
                            for (; ++f < c;) {
                                var y = t[d = h[f]],
                                    v = e[d];
                                if (i) var w = a ? i(v, y, d, e, t, o) : i(y, v, d, t, e, o);
                                if (!(void 0 === w ? y === v || s(y, v, r, i, o) : w)) {
                                    g = !1;
                                    break
                                }
                                m || (m = "constructor" == d)
                            }
                            if (g && !m) {
                                var b = t.constructor,
                                    _ = e.constructor;
                                b == _ || !("constructor" in t) || !("constructor" in e) || "function" == typeof b && b instanceof b && "function" == typeof _ && _ instanceof _ || (g = !1)
                            }
                            return o.delete(t), o.delete(e), g
                        }(t, e, r, i, o, c)
                }(t, e, r, i, Rt, o))
            }

            function Tt(t) {
                return !(!Qt(t) || function(t) {
                    return !!X && X in t
                }(t)) && (Wt(t) ? tt : O).test(Ft(t))
            }

            function Ut(t) {
                if (! function(t) {
                        var e = t && t.constructor,
                            r = "function" == typeof e && e.prototype || G;
                        return t === r
                    }(t)) return ct(t);
                var e = [];
                for (var r in Object(t)) J.call(t, r) && "constructor" != r && e.push(r);
                return e
            }

            function Dt(t, e, r, i, o, a) {
                var h = r & n,
                    c = t.length,
                    u = e.length;
                if (c != u && !(h && u > c)) return !1;
                var l = a.get(t);
                if (l && a.get(e)) return l == e;
                var f = -1,
                    d = !0,
                    p = r & s ? new Pt : void 0;
                for (a.set(t, e), a.set(e, t); ++f < c;) {
                    var g = t[f],
                        m = e[f];
                    if (i) var y = h ? i(m, g, f, e, t, a) : i(g, m, f, t, e, a);
                    if (void 0 !== y) {
                        if (y) continue;
                        d = !1;
                        break
                    }
                    if (p) {
                        if (!z(e, (function(t, e) {
                                if (n = e, !p.has(n) && (g === t || o(g, t, r, i, a))) return p.push(e);
                                var n
                            }))) {
                            d = !1;
                            break
                        }
                    } else if (g !== m && !o(g, m, r, i, a)) {
                        d = !1;
                        break
                    }
                }
                return a.delete(t), a.delete(e), d
            }

            function kt(t) {
                return function(t, e, r) {
                    var i = e(t);
                    return Vt(t) ? i : function(t, e) {
                        for (var r = -1, i = e.length, n = t.length; ++r < i;) t[n + r] = e[r];
                        return t
                    }(i, r(t))
                }(t, Xt, qt)
            }

            function Bt(t, e) {
                var r = t.__data__;
                return function(t) {
                    var e = typeof t;
                    return "string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t
                }(e) ? r["string" == typeof e ? "string" : "hash"] : r.map
            }

            function Lt(t, e) {
                var r = function(t, e) {
                    return null == t ? void 0 : t[e]
                }(t, e);
                return Tt(r) ? r : void 0
            }
            Et.prototype.clear = function() {
                this.__data__ = gt ? gt(null) : {}, this.size = 0
            }, Et.prototype.delete = function(t) {
                var e = this.has(t) && delete this.__data__[t];
                return this.size -= e ? 1 : 0, e
            }, Et.prototype.get = function(t) {
                var e = this.__data__;
                if (gt) {
                    var r = e[t];
                    return r === i ? void 0 : r
                }
                return J.call(e, t) ? e[t] : void 0
            }, Et.prototype.has = function(t) {
                var e = this.__data__;
                return gt ? void 0 !== e[t] : J.call(e, t)
            }, Et.prototype.set = function(t, e) {
                var r = this.__data__;
                return this.size += this.has(t) ? 0 : 1, r[t] = gt && void 0 === e ? i : e, this
            }, St.prototype.clear = function() {
                this.__data__ = [], this.size = 0
            }, St.prototype.delete = function(t) {
                var e = this.__data__,
                    r = Ot(e, t);
                return !(r < 0) && (r == e.length - 1 ? e.pop() : st.call(e, r, 1), --this.size, !0)
            }, St.prototype.get = function(t) {
                var e = this.__data__,
                    r = Ot(e, t);
                return r < 0 ? void 0 : e[r][1]
            }, St.prototype.has = function(t) {
                return Ot(this.__data__, t) > -1
            }, St.prototype.set = function(t, e) {
                var r = this.__data__,
                    i = Ot(r, t);
                return i < 0 ? (++this.size, r.push([t, e])) : r[i][1] = e, this
            }, It.prototype.clear = function() {
                this.size = 0, this.__data__ = {
                    hash: new Et,
                    map: new(lt || St),
                    string: new Et
                }
            }, It.prototype.delete = function(t) {
                var e = Bt(this, t).delete(t);
                return this.size -= e ? 1 : 0, e
            }, It.prototype.get = function(t) {
                return Bt(this, t).get(t)
            }, It.prototype.has = function(t) {
                return Bt(this, t).has(t)
            }, It.prototype.set = function(t, e) {
                var r = Bt(this, t),
                    i = r.size;
                return r.set(t, e), this.size += r.size == i ? 0 : 1, this
            }, Pt.prototype.add = Pt.prototype.push = function(t) {
                return this.__data__.set(t, i), this
            }, Pt.prototype.has = function(t) {
                return this.__data__.has(t)
            }, Mt.prototype.clear = function() {
                this.__data__ = new St, this.size = 0
            }, Mt.prototype.delete = function(t) {
                var e = this.__data__,
                    r = e.delete(t);
                return this.size = e.size, r
            }, Mt.prototype.get = function(t) {
                return this.__data__.get(t)
            }, Mt.prototype.has = function(t) {
                return this.__data__.has(t)
            }, Mt.prototype.set = function(t, e) {
                var r = this.__data__;
                if (r instanceof St) {
                    var i = r.__data__;
                    if (!lt || i.length < 199) return i.push([t, e]), this.size = ++r.size, this;
                    r = this.__data__ = new It(i)
                }
                return r.set(t, e), this.size = r.size, this
            };
            var qt = at ? function(t) {
                    return null == t ? [] : (t = Object(t), function(t, e) {
                        for (var r = -1, i = null == t ? 0 : t.length, n = 0, s = []; ++r < i;) {
                            var o = t[r];
                            e(o, r, t) && (s[n++] = o)
                        }
                        return s
                    }(at(t), (function(e) {
                        return nt.call(t, e)
                    })))
                } : function() {
                    return []
                },
                jt = Ct;

            function zt(t, e) {
                return !!(e = null == e ? o : e) && ("number" == typeof t || C.test(t)) && t > -1 && t % 1 == 0 && t < e
            }

            function Ft(t) {
                if (null != t) {
                    try {
                        return Y.call(t)
                    } catch (e) {}
                    try {
                        return t + ""
                    } catch (e) {}
                }
                return ""
            }

            function Ht(t, e) {
                return t === e || t !== t && e !== e
            }(ut && jt(new ut(new ArrayBuffer(1))) != x || lt && jt(new lt) != g || ft && jt(ft.resolve()) != w || dt && jt(new dt) != A || pt && jt(new pt) != P) && (jt = function(t) {
                var e = Ct(t),
                    r = e == v ? t.constructor : void 0,
                    i = r ? Ft(r) : "";
                if (i) switch (i) {
                    case mt:
                        return x;
                    case yt:
                        return g;
                    case vt:
                        return w;
                    case wt:
                        return A;
                    case bt:
                        return P
                }
                return e
            });
            var Kt = Nt(function() {
                    return arguments
                }()) ? Nt : function(t) {
                    return Yt(t) && J.call(t, "callee") && !nt.call(t, "callee")
                },
                Vt = Array.isArray;
            var $t = ht || function() {
                return !1
            };

            function Wt(t) {
                if (!Qt(t)) return !1;
                var e = Ct(t);
                return e == d || e == p || e == c || e == b
            }

            function Gt(t) {
                return "number" == typeof t && t > -1 && t % 1 == 0 && t <= o
            }

            function Qt(t) {
                var e = typeof t;
                return null != t && ("object" == e || "function" == e)
            }

            function Yt(t) {
                return null != t && "object" == typeof t
            }
            var Jt = j ? function(t) {
                return function(e) {
                    return t(e)
                }
            }(j) : function(t) {
                return Yt(t) && Gt(t.length) && !!N[Ct(t)]
            };

            function Xt(t) {
                return null != (e = t) && Gt(e.length) && !Wt(e) ? xt(t) : Ut(t);
                var e
            }
            t.exports = function(t, e) {
                return Rt(t, e)
            }
        },
        47135: t => {
            "use strict";

            function e(t) {
                try {
                    return JSON.stringify(t)
                } catch (e) {
                    return '"[Circular]"'
                }
            }
            t.exports = function(t, r, i) {
                var n = i && i.stringify || e;
                if ("object" === typeof t && null !== t) {
                    var s = r.length + 1;
                    if (1 === s) return t;
                    var o = new Array(s);
                    o[0] = n(t);
                    for (var a = 1; a < s; a++) o[a] = n(r[a]);
                    return o.join(" ")
                }
                if ("string" !== typeof t) return t;
                var h = r.length;
                if (0 === h) return t;
                for (var c = "", u = 0, l = -1, f = t && t.length || 0, d = 0; d < f;) {
                    if (37 === t.charCodeAt(d) && d + 1 < f) {
                        switch (l = l > -1 ? l : 0, t.charCodeAt(d + 1)) {
                            case 100:
                            case 102:
                                if (u >= h) break;
                                if (null == r[u]) break;
                                l < d && (c += t.slice(l, d)), c += Number(r[u]), l = d + 2, d++;
                                break;
                            case 105:
                                if (u >= h) break;
                                if (null == r[u]) break;
                                l < d && (c += t.slice(l, d)), c += Math.floor(Number(r[u])), l = d + 2, d++;
                                break;
                            case 79:
                            case 111:
                            case 106:
                                if (u >= h) break;
                                if (void 0 === r[u]) break;
                                l < d && (c += t.slice(l, d));
                                var p = typeof r[u];
                                if ("string" === p) {
                                    c += "'" + r[u] + "'", l = d + 2, d++;
                                    break
                                }
                                if ("function" === p) {
                                    c += r[u].name || "<anonymous>", l = d + 2, d++;
                                    break
                                }
                                c += n(r[u]), l = d + 2, d++;
                                break;
                            case 115:
                                if (u >= h) break;
                                l < d && (c += t.slice(l, d)), c += String(r[u]), l = d + 2, d++;
                                break;
                            case 37:
                                l < d && (c += t.slice(l, d)), c += "%", l = d + 2, d++, u--
                        }++u
                    }++d
                }
                if (-1 === l) return t;
                l < f && (c += t.slice(l));
                return c
            }
        },
        41796: (t, e, r) => {
            "use strict";

            function i(t, e) {
                return e = e || {}, new Promise((function(r, i) {
                    var n = new XMLHttpRequest,
                        s = [],
                        o = [],
                        a = {},
                        h = function() {
                            return {
                                ok: 2 == (n.status / 100 | 0),
                                statusText: n.statusText,
                                status: n.status,
                                url: n.responseURL,
                                text: function() {
                                    return Promise.resolve(n.responseText)
                                },
                                json: function() {
                                    return Promise.resolve(n.responseText).then(JSON.parse)
                                },
                                blob: function() {
                                    return Promise.resolve(new Blob([n.response]))
                                },
                                clone: h,
                                headers: {
                                    keys: function() {
                                        return s
                                    },
                                    entries: function() {
                                        return o
                                    },
                                    get: function(t) {
                                        return a[t.toLowerCase()]
                                    },
                                    has: function(t) {
                                        return t.toLowerCase() in a
                                    }
                                }
                            }
                        };
                    for (var c in n.open(e.method || "get", t, !0), n.onload = function() {
                            n.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, (function(t, e, r) {
                                s.push(e = e.toLowerCase()), o.push([e, r]), a[e] = a[e] ? a[e] + "," + r : r
                            })), r(h())
                        }, n.onerror = i, n.withCredentials = "include" == e.credentials, e.headers) n.setRequestHeader(c, e.headers[c]);
                    n.send(e.body || null)
                }))
            }
            r.r(e), r.d(e, {
                default: () => i
            })
        },
        13993: t => {
            "use strict";
            t.exports = function() {
                throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object")
            }
        }
    }
]);
//# sourceMappingURL=7533.7d5bf54f.chunk.js.map